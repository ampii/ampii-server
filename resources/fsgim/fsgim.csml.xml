<?xml version="1.0" encoding="UTF-8"?>
<CSML xmlns="http://bacnet.org/CSML/1.3">
    <Definitions>
    <Sequence name="Fsgim.ComponentElement" extends="Fsgim.FSGIMIdentifiedObject" documentation="This class is an abstract class representing the top level class of one of the four FSGIM model components or a Collection of these top level classes. Note that the parts of a Collection instance inherit the tag attribute values of its parent collection ComponentElement instance.">
        <!-- associations -->
        <Sequence name="partOf" type="Fsgim.Device" documentation="The physical device that houses the functionality of the EM Class, Meter Class, Load Class, and/or Generator Class."/>
        <Array name="tags" memberType="NAESB.Name" documentation="This attribute may contain a set of strings to be used at the configuration phase of installation such as &quot;hallway&quot;, &quot;3rd Floor&quot;, &quot;Critical&quot;, ... These strings may be optionally qualified with a NameType and NameTypeAuthority."/>
    </Sequence>

    <Sequence name="Fsgim.Device" extends="Fsgim.FSGIMIdentifiedObject" documentation="This is the class that represents a physical device in the facility">
        <Sequence name="deviceType" type="Fsgim.MasterFormatType" optional="true" documentation="This attribute defines an unique code (as specified in Master Format 2012) that uniquely identifies the device installed."/>
        <Sequence name="extendedInfo" type="Fsgim.ExtendedInfoType" optional="true" documentation="This attribute references extended information about the device."/>
        <Enumerated name="status" type="Fsgim.DeviceStatus" optional="true" documentation="Operational state of a device within a facility."/>
        <!-- associations -->
        <Array name="component" memberType="Fsgim.ComponentElement" minimumSize="1" documentation="The logical building blocks that are combined to represent the physical device."/>
        <Sequence name="deviceNameplate" type="Iec61850.DPL" optional="true" documentation="The nameplate associated with this device."/>
    </Sequence>

    <Sequence name="Fsgim.ExtendedInfoType" documentation="This class defines an reference external from this model that can be used to gain additional information about the device.">
        <String name="ExtendedInfoReference" documentation="This attribute defines a string reference to additional information about the device.  This reference may be any string reference such as a URL, URI, or other identifying information.  This attribute is only the reference to the extended information, it shall not hold the extended information directly."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMIdentifiedObject" extends="NAESB.IdentifiedObject" documentation="A standard representation of the identifier used to distinguish key object instances in the FSGIM.">
        <!-- the multiplicity of this item is [0]
        <String name="aliasName" documentation="
            This attribute redefines the NAESB IdentifiedObject and sets its multiplicity to 0 to profile it out of the model since aliases are handled through the Name/NameType/NameTypeAuthority construct in the FSGIM.
            (This attribute redefines the aliasName attribute of the IdentifiedObject Class.  See Clause 5.7.5.2.1.8.) 
            "/>
         -->
        <String name="mRID" type="Fsgim.GlobalId" documentation="
            Master resource identifier issued by a model authority. The mRID is globally unique within an exchange context.  This attribute redefines the mRID attribute of the NAESB IdentifiedObject to force the attribute to be of type GlobalId.
            (This attribute redefines the mRID attribute of the IdentifiedObject Class.  See Clause 5.7.5.2.1.8.) 
            "/>
        <String name="name" documentation="
            Any free text that names the object.  This attribute redefines the NAESB IdentifiedObject attribute to force the multiplicity to be 1.
            (This attribute redefines the name attribute of the IdentifiedObject Class.  See Clause 5.7.5.2.1.8.) 
            "/>
        <String name="nameType" documentation="Name of the name type."/>
        <String name="nameTypeAuthority" optional="true" documentation="Name of the name type authority."/>
    </Sequence>

    <Sequence name="Fsgim.MasterFormatType" documentation="This class defines a string attribute with specific constraints to map into the Master Format 2012 numbering system. ">
        <String name="code" documentation="
            This attribute is an eleven character string that defines a coded identifier for the device defined. The identifier is defined in the Master Format (2012) Numbers and Titles document.  The Master Format is a near exhaustive list of building components maintained by the construction industry. Each component has an assigned unique immutable identifier taking the form of NNSNNSNNPXX where: 
            space = ‘ ‘
            period = ‘.’
            number = '0','1','2','3','4','5','6','7','8','9'
            N = number
            S = space
            P = (period, space)
            X = (0..9, space)
            For example, a portable dehumidifier uses code ’23 84 13.33’; a room air-conditioner uses code ’23 81 16   ‘.
            A value of &quot;99 99 99 99&quot; shall be used to model an unknown load.
            "/>
    </Sequence>

    <Enumerated name="Fsgim.DeviceStatus" documentation="The general indication of the health of a Device.">
        <NamedValues>
            <Unsigned name="Normal" value="1" documentation="Device is in a normal operating condition."/>
            <Unsigned name="Warning" value="2" documentation="Some type of abnormal condition that does not constitute an alarm has been detected."/>
            <Unsigned name="Alarm" value="3" documentation="A serious abnormal condition has been detected."/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.EFacilitySystem" documentation="This enumeration is used to define the subsystem to which the ComponentElement is associated within the facility. ComponentElements that cross subsystems should use the ‘general’ category. ">
        <NamedValues>
            <Unsigned name="athletic" value="1" documentation="The load is associated with athletic equipment including exercise equipment, gymnasium equipment, pool heaters, saunas, steam rooms and scoreboards."/>
            <Unsigned name="audioVisual" value="2" documentation="The load is associated with Audio-Visual equipment including projection screens, fixed projection screens, portable projection screens, rear projection screens, projectors, movie projectors, slide projectors, overhead projectors, opaque projectors, video projectors, players, recorders and information centers (kiosks)."/>
            <Unsigned name="banking" value="3" documentation="The load is associated with a banking subsystem including safe deposit boxes, safes vault ventilators, teller equipment, automatic banking systems, money handling equipment, detention pass-thru doors and depositories."/>
            <Unsigned name="disposal" value="4" documentation="The load is associated with a disposal subsystem including packaged incinerators, recycling equipment, facility waste compactors, composting equipment, facility waste shredders, and facility waste balers."/>
            <Unsigned name="elevators" value="5" documentation="The load is associated with an elevator or escalator subsystem."/>
            <Unsigned name="entertainment" value="6" documentation="The load is associated with an entertainment subsystem including lighting rigging systems, scenery rigging systems, curtain systems, and voice amplifiers."/>
            <Unsigned name="exterior" value="7" documentation="The load is associated with exterior equipment including automatic flagpoles, fountains, decorative lighting, pest control devices, deicers and signage."/>
            <Unsigned name="fire" value="8" documentation="This load is associated with Fire subsystem including fire panels, smoke detection devices, strobes, evacuation equipment, fire fighter control panels, smoke control and automatic sprinkler systems."/>
            <Unsigned name="foodservice" value="9" documentation="The load is associated with Foodservice equipment including refrigerated food storage cases, walk-In coolers, walk-In freezers, food preparation appliances, food preparation surfaces, food delivery carts, food delivery conveyors, commercial ranges, commercial ovens, bar equipment, service line equipment, soda fountain equipment, coffee and espresso equipment, ice machines, disposal equipment and commercial dishwashers."/>
            <Unsigned name="general" value="10" documentation="This load is associated to multiple subsystems none of which is primary."/>
            <Unsigned name="healthcare" value="11" documentation="The load is associated with healthcare equipment including medical sterilizing equipment, refrigeration units, examination equipment, treatment equipment, patient care equipment, dental equipment, optical equipment, operating room equipment, radiology equipment and mortuary equipment."/>
            <Unsigned name="hospitality" value="12" documentation="The load is associated with Hospitality equipment including registration equipment."/>
            <Unsigned name="HVAC" value="13" documentation="The load is associated with a heating ventilation and air conditioning (HVAC)  subsystem including chillers, ice storage, boilers, electric heaters, heat pumps, air handlers, packaged units, pumps, air distribution systems, air handlers, air compressors, variable air volume controllers, fan coils, humidifiers, dehumidifiers, thermostats, humidistats and facility management systems (FMS)."/>
            <Unsigned name="IT" value="14" documentation="The load is associated with information technology (IT) equipment including servers, CRAC units, network switches, hubs, routers, firewalls, access points, telephone switches and other MDF/IDF closet equipment."/>
            <Unsigned name="laboratory" value="15" documentation="The load is associated with Laboratory equipment including fume hoods, incubators, equipment washers, sterilizers, environment cabinets, emergency safety appliances, service fittings and accessories biological safety cabinets."/>
            <Unsigned name="laundry" value="16" documentation="The load is associated with Laundry equipment including dry cleaning equipment; drying and conditioning equipment; finishing equipment; commercial ironing equipment; commercial washers; driers; coin-operated laundry equipment and hanging garment conveyors."/>
            <Unsigned name="lighting" value="17" documentation="The load is associated with a lighting subsystem including lighting panels; lighting circuits; floor and task lighting; emergency lighting; lava lamps; and shade control."/>
            <Unsigned name="maintenance" value="18" documentation="The load is associated with Maintenance equipment including; floor and wall cleaning equipment; housekeeping carts; vacuum cleaning systems; façade access equipment; window washing systems; welders; drill presses and lathes."/>
            <Unsigned name="merchantile" value="19" documentation="The load is associated with Mercantile equipment including cash registers; checking equipment; vending machines; checkroom equipment; weighing and wrapping equipment; barbering and beauty equipment. "/>
            <Unsigned name="office" value="20" documentation="The load is associated with Office equipment including telephones, computers, printers, copiers, facsimile machines and white noise generators."/>
            <Unsigned name="pedestrian" value="21" documentation="The load is associated to a pedestrian equipment, including pedestrian gates, rotary gates turnstiles, money changing machines, fare collection equipment, pedestrian detection equipment, electronic detection and counting systems and pedestrian security equipment."/>
            <Unsigned name="parking" value="22" documentation="The load is associated with parking equipment including parking card control units; parking ticket dispensers, parking meters, parking fee collection equipment and parking gates."/>
            <Unsigned name="production" value="23" documentation="The load is associated with a production subsystems including assembly line equipment, robots, part picking equipment, stocking equipment, inventory control equipment, assembly, quality testing and production control equipment."/>
            <Unsigned name="recreational" value="24" documentation="The load is associated with recreational equipment including game room equipment, video games, and pinball machines."/>
            <Unsigned name="residential" value="25" documentation="The load is associated with Residential equipment including lights, bathroom appliances, kitchen appliances, laundry appliances, televisions, stereo equipment and fans."/>
            <Unsigned name="security" value="26" documentation="The load is associated with a physical security subsystem including video surveillance, door control, building access, tamper monitoring, terrorist activity monitoring, radio communications, asset tracking, personnel tracking and video analytics."/>
            <Unsigned name="shipping" value="27" documentation="The load is associated with Shipping equipment including airport luggage handlers, conveyor belts, packaging, dock levelers, forklifts and postal equipment."/>
            <Unsigned name="vehicle" value="28" documentation="The load is associated to a vehicle, including servicing, lubrication, tire changing, battery charging and washing equipment."/>
            <Unsigned name="other" value="29" documentation="The load is associated to a subsystem that is not listed in this enumeration."/>
        </NamedValues>
    </Enumerated>

    <Sequence name="Fsgim.Meter" extends="Fsgim.ComponentElement" documentation="The Meter Class is the central class of the Meter Component.  It contains, directly through its attributes and indirectly through its associations, the information elements that support the functionality of a meter.  A meter measures electricity or pollution emissions.">
    </Sequence>

    <Sequence name="Fsgim.ElectricMeter" extends="Fsgim.Meter" documentation="The ElectricMeter Class is a subclass of the Meter Class. It is an abstract representation of devices that measure real and reactive power or energy. These devices optionally measure other electrical parameters such as apparent power, apparent energy, present subinterval demand or power quality.">
        <!-- associations -->
        <Sequence name="accumulatedEnergyReading" type="Fsgim.EnergyMeasurementsSet" optional="true" documentation="The accumulated energy measurement set for a given location at the timestamp defined by Measurement.timeReference."/>
        <Sequence name="input" type="Fsgim.ConnectionPoint" documentation="The connection point associated with the input of this ElectricMeter. The input side of a Meter is defined as the connection point nearer to the GridCircuit."/>
        <Sequence name="intervalEnergyReading" type="Fsgim.EnergyMeasurementsSet" optional="true" documentation="The energy measurement set for a given location over the interval defined by Measurement.timeReference."/>
        <Sequence name="output" type="Fsgim.ConnectionPoint" documentation="The connection point associated with the output of this ElectricMeter. The output side of a Meter is defined as the connection point farther from the GridCircuit."/>
        <Sequence name="powerQuality" type="NAESB.ElectricPowerQualitySummary" optional="true" documentation="The power quality statistical data set for a given location."/>
        <Sequence name="powerReading" type="Fsgim.PowerMeasurementsSet" optional="true" documentation="The power measurement set for a given location."/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsMeter" extends="Fsgim.Meter" documentation="
            The EmissionsMeter Class is a subclass of the Meter Class which is used to represent devices that are capable of measuring pollution emissions.
            Constraint:  An EmissionsMeter must have either an emissionsReading or an emissionsRateReading and may have both. 
            ">
        <!-- associations -->
        <Sequence name="emissionsRateReading" type="Fsgim.EmissionsRateMeasurementsSet" optional="true" documentation="The emissions rate measurement set for a given location."/>
        <Sequence name="emissionsReading" type="Fsgim.EmissionsMeasurementsSet" optional="true" documentation="The emissions measurement set for a given location."/>
    </Sequence>

    <Sequence name="Fsgim.CurtailmentValueType" documentation="This class contains the signal type and curtailment information requested by an energy manager during an event.  It provides a 'union' of the various signaling types and curtailment information into a single attribute.">
        <Sequence name="payloadBase" type="Ei.PayloadBaseType" documentation="This attribute provides the means to 'union' the differing curtailmentValues into a single attribute."/>
    </Sequence>

    <Sequence name="Fsgim.CurtailableLoad" extends="Fsgim.Load" documentation="The CurtailableLoad class defines the attributes that are unique to devices whose electrical consumption can be curtailed. The attributes define the information needed to represent curtailment policies based on criteria including load priorities, cost constraints, protection of physical equipment, and safety considerations. The CurtailableLoad class also provides attributes for restoration of curtailed loads.">
        <Sequence name="actualCurtailedDemand" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines the amount of demand presently curtailed for this load (as measured by the present subinterval demand) as measured within the PowerMeasurementsSet for this load.
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Real name="curtailmentCost" optional="true" documentation="This attribute defines the monetary value of the fixed and variable cost associated with curtailing the load (when positive) or the savings associated by curtailing the load (when negative) on a per unit of power basis."/>
        <Integer name="curtailmentCyclesInPeriod" optional="true" documentation="
            This attribute defines the number of times the load has been curtailed since this attribute was last reset. This attribute shall be increased by one each time a two-state load is curtailed, or a multi-state load is curtailed from one curtailment state to another.
            Constraint:  If the maximumCurtailmentsInPeriod attribute is defined, then this attribute shall be defined. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Array name="curtailmentRatingsLevel" memberType="Fsgim.CurtailmentArrayElement" documentation="
            This attribute defines the array of curtailment amounts when the requestedCurtailmentLevel.signalType equals 'level'.  This array transforms the level requested by the Energy Manager as specified by the attribute requestedCurtailmentLevel.level into the fixed demand to which the load shall be controlled.
            Constraint:  This attribute is required if requestedCurtailmentLevel.signalType may equal 'level' 
            "/>
        <Enumerated name="curtailmentStatus" type="Fsgim.CurtailmentStatusType" documentation="This attribute indicates whether the load is presently curtailed and, if curtailed, is in compliance with the curtailment request received."/>
        <Sequence name="eligibleCurtailableDemand" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines the amount of load still eligible to be curtailed for two-state and multi-state curtailable loads. 
            For two-state loads this value will either be the value of maximumLoad as defined in the Load class or zero depending on whether the load is presently curtailed. For multi-state curtailable loads this value is the total remaining load that can be curtailed as defined in the curtailmentRatings attribute.
            Constraint:  The value of this attribute shall be greater or equal to 0. 
            Constraint:  The value of this attribute shall not be greater than the value of the Load.maximumLoad attribute. 
            "/>
        <DateTime name="lastCurtailmentDateTime" optional="true" documentation="This attribute defines the date and time on which the load was last curtailed.  For multistage curtailable loads, each time a multistage curtailable load is curtailed, this attribute shall be updated."/>
        <Sequence name="maximumCurtailableDemand" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines the maximum amount of demand curtailable for this load as measured in PowerMeasurementsSet.
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Integer name="maximumCurtailmentsCyclesInPeriod" optional="true" documentation="
            This attribute defines the maximum number of times this load may be curtailed within the specified period. When the curtailmentCyclesInPeriod reaches this attribute’s value, the loadStatus attribute will be set to maxCyclesThisPeriod rendering the load ineligible for curtailment until the period information is reset.   The duration of the period and the resetting of this attribute is a local matter.
            Constraint:  If the actualCurtailmentsInPeriod attribute is defined, then this attribute shall be defined. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <String name="maximumCurtailTime" type="Fsgim.Duration" documentation="
            This attribute specifies the maximum number of seconds that a load may be curtailed before it shall be released from its curtailment state.   This duration is often used to maintain comfort levels, or meet safety code requirements.  It is used to set the queueTimeRemaining attribute when placing the load in the maxCurtailQueue state. 
            Constraint:  This attribute's value shall be greater than 0. 
            Constraint:  This attribute's value shallt be greater than or equal to the minimumCurtailTime attribute's value. 
            "/>
        <String name="minimumCurtailTime" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the minimum number of seconds that a load shall be curtailed before it may be released from its curtailment state. This duration is used to protect the load's hardware from excess cycling. However, it may also be used to maintain comfort levels, or meet safety code requirements.
            It is used to set the QueueTimeRemaining attribute when placing the load in the minCurtailQueue state.
            Constraint:  This attribute's value shall be greater than 0. 
            Constraint:  This attribute's value shall be less than or equal to the maximumCurtailTime attribute's value. 
            "/>
        <Boolean name="overridden" optional="true" documentation="
            This attribute is typically controlled by an external entity to affect eligibility of the load. For example, an Energy Manager may override this load if the present price of energy is falls within a defined economic threshold. If the present price of energy exceeds the threshold, the Energy Manager might toggle this attribute to allow the load to be curtailed.
            This attribute differs from the loadLocked attribute in that this attribute is meant to be connected to an automation system and only persists while the override is in effect. The loadLocked attribute persists indefinitely and meant to be set by manual intervention.
            "/>
        <Real name="priceThreshold" optional="true" documentation="
            This attribute defines the marginal operational cost per unit of power basis for this load.  The priority is not created within the load; this is a placeholder for the Energy Manager. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Integer name="priority" optional="true" documentation="
            This attribute defines the curtailment priority which defines the order upon which curtailment occurs across a set of loads.  A priority value of 1 is considered a critical load that may not be shed except during a critical event.
            Constraint:  How eligible loads of the same priority curtail is a local matter. 
            Constraint:  Priorities range from 1 to 1000 
            Constraint:  Priority 1 loads curtail last 
            Constraint:  Priority 1000 loads curtail earliest 
            "/>
        <String name="queueTimeRemaining" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the duration that a controlled load has been on a queue. As the load transitions from the minCurtailQueue to the maxCurtailQueue and the releaseQueue this attribute is set to its maximum extent upon entry in the queue and counts down to zero on the queue when it transitions off the queue.  This attribute should be updated at least once each 60 seconds.
            Constraint:  actualQueueTimeRemaining > = 0 
            "/>
        <String name="releaseTime" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the number of seconds that a load shall be released from curtailment before it is again eligible for curtailment. This duration is used to protect the load's hardware from excess cycling.  However, it may also be used to restore comfort levels, or meet safety code requirements. It is used to set the queueTimeRemaining attribute when placing the load in the releaseQueue state.
            If this attribute is not present, the releaseTime shall be considered to be zero (0) and immediately become available for curtailment.
            Constraint:  This attribute's value shall be greater than 0. 
            "/>
        <Sequence name="requestedCurtailmentLevel" type="Ei.FSGIMEventSignalType" documentation="
            This attribute defines the demand level the Energy Manager is requesting the load to operate.  The request by the Energy Manager is always a curtailment amount; however, the load will compare this curtailment requested amount to the present demand of the load and may then a) curtail it more, b) restore it more or c) leave the load at its present demand state.
            The request is made in one of four ways defined by the value requestedCurtailmentLevel.signalType :
            1)  When the requestedCurtailmentLevel.signalType attribute is set to ‘setpoint’, the requestedCurtailmentLevel.currentValue attribute describes the fixed amount of demand to which the load should operate. currentValue must be a positive number or zero. The currentValue is compared against the actualCurtailableAmount and maximumCurtailmentAmount to determine the curtailment or restoration needed to meet the request.  
            a) If currentValue equals the actualCurtailedAmount, no further curtailment or restoration will occur. The curtailmentStatus will be set to curtailmentCompliant.
            b)  If currentValue is less than the actualCurtailedAmount, then if the load has surpassed its minCurtailTime but has not yet reached the maxCurtailTime, the load will be considered for early release.  The load may be released in its entirety for a two-state load or partially for a multistate load until the actualCurtailedAmount reaches currentValue’s value. If the load cannot be released to exactly match the request, the load will be released as close as possible as it can be released without exceeding the request. The curtailmentStatus will remain as curtailmentCompliant. 
            c)  If currentValue is greater than the actualCurtailedAmount, the load may be further curtailed as possible upwards to the maximumCurtailmentAmount. The curtailmentStatus attribute will then be adjusted to reflect whether the curtailment is curtailmentCompliant or curtailmentNoncompliant.
            d)  If currentValue is greater than the maximumCurtailableAmount, the load will be completely curtailed and the curtailmentStatus will be set to curtailmentNoncompliant.
            Stated mathematically, 
            assure
            0 &lt;= currentValue &lt;= maximumCurtailmentAmount
            And if
            	currentValue >= actualCurtailableAmount; amount to curtail = currentValue – actualCurtailableAmount
            else if
            	currentValue &lt; actualCurtailableAmount; amount to restore = actualCurtailableAmount – currentValue.
            2) When the requestedCurtailmentLevel.signalType attribute is set to ‘delta’, the requestedCurtailmentLevel.currentValue attribute describes the relative amount of demand to which the load should be adjusted. currentValue may be a positive or negative number. The sum of currentValue and actualCurtailedAmount, is compared against zero and maximumCurtailmentAmount to determine if curtailment or restoration is needed to meet the request.
            a) If the value of currentValue is zero no further curtailment or restoration will occur. The curtailmentStatus will be set to curtailmentCompliant.
            b)  If currentValue is positive, the load will be further curtailed as possible upwards to the maximumCurtailmentAmount. If the sum of currentValue and actualCurtailedAmount is greater than maximumCurtailmentAmount, the load will be completely curtailed and the curtailmentStatus will be set to curtailmentNoncompliant otherwise it will be set to curtailment Compliant.
            c)  If currentValue is negative, then if the load has surpassed its minCurtailTime but has not yet reached the maxCurtailTime, the load will be considered for early release.  The load may be released in its entirety for a two-state load or partially for a multistate load until the currentValue value is reached or actualCurtailableAmount is zero. If the sum of currentValue and actualCurtailedAmount is less than zero, the load will be completely released and the curtailmentStatus will be set to curtailmentNoncompliant otherwise it will be set to curtailment Compliant.
            Stated mathematically, 
            assure
            0 &lt;= currentValue+ actualCurtailableAmount &lt;= maximumCurtailmentAmount
            And if
            	currentValue >= 0, amount to curtail = currentValue
            else if
            	currentValue &lt; 0, amount to restore = currentValue.
            3) When the requestedCurtailmentLevel.signalType attribute is set to ‘multiplier’, the requestedCurtailmentLevel.currentValue attribute divided by 100 describes the percentage of the maximumCurtailableAmount value to which the load should be adjusted. currentValue must be a positive number in the range of 0 to 100. The calculated value of product of currentValue/100 and maximumCurtailmentAmount is compared to the actualCurtailedAmount to determine the curtailment or restoration needed to meet the request.
            a) If this calculated value is equal to actualCurtailedAmount, then no further curtailment or restoration will occur. The curtailmentStatus will be set to curtailmentCompliant.
            b)  If this calculated value is less the actualCurtailedAmount, then if the load has surpassed its minCurtailTime but has not yet reached the maxCurtailTime the load will be considered for early release.  The load may be released in its entirety for a two-state load or partially for a multistate load until the actualCurtailedAmount reaches the calculated value.. The curtailmentStatus will remain as curtailmentCompliant.
            c)  If the calculated value is greater than the actualCurtailedAmount, the load will be further curtailed as possible upwards to the maximumCurtailmentAmount. The curtailmentStatus attribute will then be adjusted to reflect whether the curtailment is curtailmentCompliant or curtailmentNoncompliant.
            Stated mathematically, 
            If
            (currentValue/100)*maximumCurtailmentAmount >= actualCurtailableAmount; amount to curtail = ((currentValue/100)*maximumCurtailmentAmount) – actualCurtailableAmount
            else if
            (currentValue/100)*maximumCurtailmentAmount &lt; actualCurtailableAmount; amount to release = actualCurtailableAmount-((currentValue/100)*maximumCurtailmentAmount) 
            4)  When the requestedCurtailmentLevel.signalType attribute is set to ‘level’, requestedCurtailmentLevel.currentValue attribute describes the predefined level to which the load will be adjusted. currentValue must be a positive number within the range of 1 to n, where n is defined as the number of entries in the curtailmentRatingsLevel array. When the request is received, the load will adjust its curtailment to the level defined by curtailmentRatingsLevel(currentValue).curtailmentAmount
            a) If curtailmentAmount equals the actualCurtailedAmount, no further curtailment or restoration will occur. The curtailmentStatus will be set to curtailmentCompliant.
            b)  If curtailmentAmount is less than the actualCurtailedAmount, then if the load has surpassed its minCurtailTime but has not yet reached the maxCurtailTime, the load will be considered for early release.  The load may be released in its entirety for a two-state load or partially for a multistate load until the actualCurtailedAmount reaches curtailmentAmount’s value. The curtailmentStatus will remain as curtailmentCompliant. 
            c)  If curtailmentAmount is greater than the actualCurtailedAmount, the load may be further curtailed as possible upwards to the maximumCurtailmentAmount. The curtailmentStatus attribute will then be adjusted to reflect whether the curtailment is curtailmentCompliant or curtailmentNoncompliant.
            Stated mathematically, 
            if
            curtailmentRatingsLevel(currentValue).curtailmentAmount >= actualCurtailableAmount; amount to curtail = curtailmentRatingsLevel(currentValue). – actualCurtailableAmount
            else if
            curtailmentRatingsLevel(currentValue).curtailmentAmount &lt; actualCurtailableAmount; amount to release = actualCurtailableAmount -curtailmentRatingsLevel(currentValue). 
            NOTE:  A load that may be curtailed multiple times can be curtailed only when in the eligible, minCurtailQueue or maxCurtailQueue states. Upon additional curtailments, the curtailment timers may or may not be reset as a local matter.
            "/>
    </Sequence>

    <Sequence name="Fsgim.CurtailmentArrayElement" documentation="This class defines a single array element of the curtailmentRatingsLevel attribute. Each array element defines the fixed demand to which the load shall be controlled as a function of the stated level. The array is ordered by the curtailmentRatingsLevel.levelIndex attribute.  ">
        <Sequence name="curtailmentAmount" type="Fsgim.PowerMeasurementsSet" documentation="This attribute defines the absolute demand to be achieved upon receipt of a request from an energy manager as specified in the requestedCurtailmentLevel.currentValue attribute.  When deployed in the curtailmentRatingsLevel array, this attribute defines the absolute demand the load should target for each of the defined levels. When deployed in the curtailmentRatingsPercent array, this attribute defines the absolute demand the load should target for each of the defined percents."/>
        <Integer name="levelIndex" documentation="This attribute defines the level or percentage index when used in the curtailmentRatingsLevel or curtailmentRatingsMultiplier attributes respectively.  When used in the curtailmentRatingsLevel array , this attribute is matched to the requestedCurtailmentLevel.currentValue as supplied by the Energy Manager to transform the level request to the absolute demand requested. When used in the curtailmentRatingsMultiplier array, this attribute is matched to the requestedCurtailmentLevel.currentValue as supplied by the Energy Manager to transform the multiplier (percentage) request to the absolute demand requested."/>
    </Sequence>

    <Sequence name="Fsgim.PowerRampSegmentType" documentation="The PowerRampSegmentType data structure is used to define a single array element of the recoveryRamp and stagingRamp array of the Load class. Each array element defines the beginning demand for the line segment and the rate of rise or drop. These attributes combined with the duration completely forms a line segment defining a portion of the ramp.">
        <Sequence name="beginRamp" type="Fsgim.PowerMeasurementsSet" optional="true" documentation="The attribute defines the quantity of power at the start of the ramp segment. If this attribute is not defined in the segment, the start of the ramp is assumed to be the end of the ramp of the previous segment."/>
        <String name="duration" type="Fsgim.Duration" documentation="
            The attribute defines the time horizon in seconds upon which the associated rise or drop is valid.  
            Constraint:  This attribute shall be greater than 0. 
            "/>
        <Boolean name="rampToCompletion" optional="true" documentation="The attribute defines whether the ramping up or down of this load may be halted in midstream (false) or once started must complete through all segments of the ramp (true). As an example, a multistate fan may only use a portion of the ramp, as it sequences from low to medium to high speed levels (false); whereas, a production line, once started, may need to run through its complete set of ramp segments (true). If the attribute is not defined it is assumed to be false."/>
        <Sequence name="rate" type="Fsgim.PowerMeasurementsSet" documentation="The attribute defines rate of rise (positive value) in demand or the rate of drop (negative value) in demand when a load either powers up or shuts down respectively.  Its sister attribute, duration, defines the time frame upon which the rate is defined."/>
    </Sequence>

    <Sequence name="Fsgim.Load" extends="Fsgim.ComponentElement" documentation="The Load Class is the central class of the Load Component.  It contains, directly through its attributes and indirectly through its associations, the information elements that support the functionality of a load.">
        <Sequence name="actualDemand" type="Fsgim.PowerMeasurementsSet" optional="true" documentation="
            This attribute defines the power being consumed by the device (as measured by the present subinterval demand) at the present time in units specified by PowerMeasurementsSet.
            Constraint:  The &quot;quantity&quot; that makes up the PowerRealQuantity of the PowerMeasurementsSet shall be greater than or equal to 0. 
            "/>
        <Sequence name="demandLimits" type="Fsgim.PowerRatings" optional="true" documentation="The operational demand characteristics and their associated end points for the load."/>
        <Array name="downRamp" memberType="Fsgim.PowerRampSegmentType" documentation="
            This attribute defines the reduction in power over time when a load being partially or fully de-energized has a complex load reduction profile. For each element of the Load.downRamp array, the downRamp[n].rate defines the amount of power decrease and the downRamp[n].duration defines the length of time in seconds upon which the decrease is in effect. If the downRamp[n].beginRamp attribute is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment.
            Although the downRamp attribute name implies that the rise is monotonically decreasing, individual array elements may have slopes less than, greater than, or equal to 0.  However, the overall trend of the function shall be decreasing.
            The downRamp function shall measure the time from the load being fully energized until the power is completely depleted. If downRamp is not present, the power decrease to 0 shall be instantaneous.
            When a curtailable load is partially curtailed (less than the maximumCurtailableDemand) and curtailment is increased, the power will decrease starting at n-th downRamp of the sum from 0 to n of the downRamp[n].rate that is closest to the actualCurtailedDemand.
            "/>
        <Array name="upRamp" memberType="Fsgim.PowerRampSegmentType" documentation="
            This attribute defines the increase in power over time when a load being partially or fully energized has a complex demand restoration profile. For each element of the Load.upRamp array, the upRamp[n].rate defines the amount of power increase and the upRamp[n].duration defines the length of time in seconds upon which the increase is in effect. If the upRamp[n].beginRamp attribute is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment.
            Although the upRamp attribute name implies that the rise is monotonically increasing, individual array elements may have slopes less than, greater than, or equal to 0.  However, the overall trend of the function shall be increasing.
            The upRamp function shall measure the time from the load being fully de-energized until the power is completely restored as defined by Load.maximumDemand. If this attribute is not present, the power increase upon restoration shall be instantaneous.
            When a curtailable load is partially curtailed (less than the maximumCurtailableDemand) and curtailment is reduced, the power will increase starting at n-th recoveryRamp of the sum from 0 to n of the upRamp[n].rate that is closest to the actualCurtailedDemand.
            "/>
        <Boolean name="locked" optional="true" documentation="
            This attribute defines whether the load is locked and therefore ineligible for curtailment; or unlocked and available for curtailment.  
            Load locking behavior changes depending on the load’s curtailmentStatus attribute value at the time the load was locked. If the Load.locked attribute is set to TRUE and the:
            1)  load is not curtailable, the load is immediately locked. The behavior of this operation is a local matter;
            2)  curtailmentStatus is curtailmentInactive, the load will immediately be locked out from curtailment eligibility;
            3) curtailmentStatus is curtailmentNoncompliant, the load will cycle to its curtailmentInactive state then immediately be locked out of curtailment eligibility;
            4) If the CurtailableLoad supports multi-stage curtailment, the load will cycle to its curtailmentInactive state for the present curtailment stage and then be locked out of any further curtailment eligibility.
            5) curtailmentStatus is curtailmentNoncompliant, the load will cycle to its curtailmentInactive state then immediately be locked out of curtailment eligibility;
            6) If the CurtailableLoad supports multi-stage curtailment, the load will cycle to its curtailmentInactive state for the present curtailment stage and then be locked out of any further curtailment eligibility.
            Loads that are locked will remain in the locked state indefinitely until the Load.locked attribute is reset to FALSE. The mechanism used to unlock the load is a local matter.
            "/>
        <Enumerated name="status" type="Fsgim.LoadStatusType" optional="true" documentation="This attribute defines the current status of the load. For non-curtailable loads, it provides the present communication status and reliability of the data.  For curtailable loads, it also defines if the load is eligible for curtailment or why it is ineligible for curtailment."/>
        <!-- associations -->
        <Sequence name="input" type="Fsgim.ConnectionPoint" documentation="The connection point associated with the input of this Load."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMPayloadFloatType" extends="Fsgim.FSGIMPayloadBaseType" documentation="The curtailment request is of the form of either an absolute or relative demand curtailment value from the load's maximum demand as specified in the Load.maximumLoad attribute.  This class supports both the 'setpoint' and 'delta' signal types.">
        <Sequence name="value" type="Fsgim.PowerMeasurementsSet" documentation="This attribute defines an absolute amount of demand to curtail or release in units defined by the PowerMeasurementsSet. For values greater than zero, the load will attempt to curtail this specified amount.  For values less than zero, the load will attempt to release control of the specified amount.  The latter functionality facilitates the ancillary services market."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMPayloadLevelType" extends="Fsgim.FSGIMPayloadBaseType" documentation="The curtailment request is of the form of a predefined level of curtailment. This curtailment level's range is specified by the array size of the curtailmentRatingsLevelIndex attribute. The value of the integer requestedCurtailmentLevel.curtailmentValue.patloadBase.level is the index into the curtailmentRatingsLevel  array. This class supports the 'level' signal type.">
        <Integer name="level" documentation="
            This attribute defines the number of curtailment levels of the load. Its value shall equal the number of defined array elements defined in the curtailmentRatings attribute.  When directed to be curtailed by 'level', the load will curtail the demand as specified by curtailmentRatings[level].
            Constraint:  This attribute's value shall be positive. 
            Constraint:  This attribute's value shall not exceed the number of array elements defined in the curtailmentRatings attribute. 
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMPayloadQuantityType" extends="Fsgim.FSGIMPayloadBaseType" documentation="
            The curtailment request is of the form of a percentage of the present baseline demand curtailment.
            The curtailment request is of the form of a percentage of demand curtailment value from the load's maximum demand as specified in the Load.maximumLoad attribute.  This class supports the 'multiplier' signal type.
            Constraint:  0 &lt; Percentage &lt;= 100 
            ">
        <Sequence name="quantity" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines a relative amount of demand to curtail the load in the units defined in PowerMeasurementsSet. The relative amount is a percentage of the present demand baseline.
            Constraint:  percentage &lt;= 100 
            Constraint:  percentage >= 0 
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMPayloadBaseType" documentation="This class is the union of the different classes used to define the needed curtailment of an individual load.  ">
    </Sequence>

    <Enumerated name="Fsgim.CurtailmentStatusType" documentation="This enumeration indicates if the load is presently curtailed and if curtailed is in compliance with the curtailment request received.">
        <NamedValues>
            <Unsigned name="curtailmentInactive" value="1" documentation="This load is not presently curtailed"/>
            <Unsigned name="curtailmentRequestPending" value="2" documentation="The curtailment request has been processed and is pending."/>
            <Unsigned name="curtailmentCompliant" value="3" documentation="The curtailment request has been processed. The load is compliant with the request."/>
            <Unsigned name="curtailmentNoncompliant" value="4" documentation="The curtailment request has been processed. The load is not compliant with the request."/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.LoadStatusType" documentation="This enumeration provides the present overall state of the load.">
        <NamedValues>
            <Unsigned name="NA" value="1" documentation="Not applicable"/>
            <Unsigned name="eligible" value="2" documentation="The load is presently communicating properly and its data values are correct. In addition, for curtailable loads this load is presently eligible to be curtailed."/>
            <Unsigned name="loadLocked" value="3" documentation="The load is ineligible for curtailment since it has been locked."/>
            <Unsigned name="loadOverridden" value="4" documentation="An external process has set this override attribute prohibiting curtailment."/>
            <Unsigned name="lostCommunication" value="5" documentation="The load presently cannot be accessed."/>
            <Unsigned name="maxCurtailQueue" value="6" documentation="The load is in curtailment and presently being timed for the maximum curtailment time."/>
            <Unsigned name="maxCyclesThisPeriod" value="7" documentation="The load has been cycled the maximum number of times this period."/>
            <Unsigned name="minCurtailQueue" value="8" documentation="The load is in curtailment and presently being timed for the minimum curtailment time."/>
            <Unsigned name="pointNotConsumingEnergy" value="9" documentation="The load is ineligible for curtailment since the point associated with the load is already shut off and not consuming any energy."/>
            <Unsigned name="pointUnreliable" value="10" documentation="The load is ineligible for curtailment since the point associated with the load is unreliable. 'Unreliable' is an error condition when the present value of a point is questioned due to some hardware or software failure. When a point is unreliable, it still may present a value (e.g., Space Temp Present Value = 67 DegF) but carries along a second attribute that indicates this value is suspect. When a point is in the unreliable state, it shall not be curtailed."/>
            <Unsigned name="ramping" value="11" documentation="The load is ramping.  That is, it is a transitional state and is either starting up or shutting down.  While in this temporary state, it is not eligible for curtailment."/>
            <Unsigned name="releaseQueue" value="12" documentation="The load is ineligible for curtailment. The load has completed its curtailment and is presently timing down the restore time before it is again eligible for curtailment."/>
            <Unsigned name="unlocked" value="13" documentation="The load has recently been unlocked. It will analyze all conditions and set its present eligibility state after analysis completes."/>
        </NamedValues>
    </Enumerated>

    <Sequence name="Fsgim.DERDatasheetEmissions" documentation="A class that summarizes data sheet emissions information for a generator.">
        <Sequence name="datasheetEmissions" type="Fsgim.EmissionsMeasurementsSet" documentation="
            An EmissionsMeasurementSet containing rated emissions.
            Constraint:  EmissionsMeasurementSet.perWhat = kWh 
            "/>
        <Enumerated name="operatingMode" type="Iec61850.ScheduleOperatingModeKind" documentation="The operating mode of the containing generator Component."/>
    </Sequence>

    <Sequence name="Fsgim.Generator" extends="Fsgim.ComponentElement" documentation="The Generator Class is the central class of the Generator Component.  It contains, directly through its attributes and indirectly through its associations, the information elements that support the functionality of a generator.  A generator produces energy or retrieves it from storage.">
        <Sequence name="actualStoredEnergy" type="Fsgim.StoreableEnergyQuantity" optional="true" documentation="This attribute defines the amount of stored energy available at the present time. The value can be derived from the DERUnitGenerator.TotalWh and DERUnitGenerator.PeriodWh attributes."/>
        <Sequence name="actualSupply" type="Fsgim.PowerMeasurementsSet" optional="true" documentation="This attribute defines the power being generated by the device at the present time in units specified by PowerMeasurementsSet. The value can be derived from the DERMeasurement.TotW, DERMeasurement.TotVAr and, DERMeasurement.TotVA attributes."/>
        <Array name="downRamp" memberType="Fsgim.PowerRampSegmentType" documentation="
            This attribute defines the Real power component reduction in power over time when a generator being partially or fully de-energized has a complex power ramp.  It can be generated from the DERComplexOutputRamping.RmpDwn attribute for complex generators.  Simple generators can use DERDeviceControllerCharacteristics.LoadRampRate to generate the single ramp segment needed.
            For each element of the Generator.generatorDwnRamp array, the generatorDownRamp[n].rate defines the amount of power increase and the generatorDownRamp[n].duration defines the length of time in seconds upon which the increase is in effect. If the generatorDownRamp[n].beginRamp attribute is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment.
            Although the generatorDwnRamp attribute name implies that the rise is monotonically decreasing, individual array elements may have slopes less than, greater than, or equal to 0.  However, the overall trend of the function shall be decreasing.
            The generatorDwnRamp function shall measure the time from the generator being fully energized until the power is completely depleted.
            If generatorDwnRamp is not present, the power decrease to 0 shall be instantaneous.
            "/>
        <Boolean name="locked" optional="true" documentation="This attribute defines whether the generator is unavailable for use.   It can be generated from the DERUnitStatus.ModeOffUnavailable attribute."/>
        <Sequence name="ratedStoredEnergy" type="Fsgim.StoreableEnergyQuantity" optional="true" documentation="This attribute defines the maximum amount of stored energy available. The value can be derived from the DERGeneratorRatings.WHRating attribute."/>
        <Enumerated name="status" type="Iec61850.GeneratorOperationStatusEnumeration" optional="true" documentation="This attribute defines the current operational status of the generator. It can be generated from the DERUnitGenerator.GeneratorOperationStatus attribute."/>
        <Enumerated name="storage" type="Fsgim.StorageType" documentation="
            This attribute defines whether this instance of the Generator Class models electrical energy storage, thermal energy storage, or neither.
            The value of this attribute can be generated from DERDeviceControllerCharacteristics.DERType. If the value of DERDeviceControllerCharacteristics.DERType is “compressedAir”, “pumpedHydroelectric”, “flywheel”,  “electroChemicalBattery”, “flowBattery”, “capacitor”, or “superconductingMagneticEnergy”, then the value of this enumeration shall be electricalStorage.  If the value of DERDeviceControllerCharacteristics.DERType is “thermalEnergyStorage&quot;, then the value of this enumeration shall be &quot;thermalStorage.&quot;
            "/>
        <Sequence name="supplyLimits" type="Fsgim.PowerRatings" optional="true" documentation="The operational demand characteristics and their associated end points for the generator."/>
        <Enumerated name="type" type="Iec61850.DRCT.DERtyp.ING" optional="true" documentation="This attribute defines the type of generator or storage system"/>
        <Array name="upRamp" memberType="Fsgim.PowerRampSegmentType" documentation="
            This attribute defines the Real power component increase in power over time when a generator being partially or fully energized has a complex power ramp. It can be determined from the DERComplexOutputRamping.RmpUp attribute for complex generators.  Simple generators can use DERDeviceControllerCharacteristics.LoadRampRate to derive the single ramp segment needed.
            For each element of the Generator.upRamp array, the upRamp[n].rate defines the amount of power increase and the upRamp[n].duration defines the length of time in seconds upon which the increase is in effect. If the upRamp[n].beginRamp attribute is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment.
            Although the upRamp attribute name implies that the rise is monotonically increasing, individual array elements may have slopes less than, greater than, or equal to 0. However, the overall trend of the function shall be increasing.
            The upRamp shall measure the time from the generator being stopped until the power is completely restored as defined by DERGeneratorRatings.MaximumWOutput. If this attribute is not present, the power increase upon restoration shall be instantaneous.
            "/>
        <!-- associations -->
        <Sequence name="DERComplexOutputRamping" type="Iec61850.DERComplexOutputRamping" optional="true" documentation="Generator ramping behavior"/>
        <Sequence name="DERCostParameters" type="Iec61850.DERCostParameters" optional="true" documentation="Key economic statistics on generator operation."/>
        <Sequence name="DERDeviceControllerCharacteristics" type="Iec61850.DERDeviceControllerCharacteristics" optional="true" documentation="Device control characteristics and control setpoints."/>
        <Sequence name="DERGeneratorRatings" type="Iec61850.DERGeneratorRatings" optional="true" documentation="Nameplate ratings of the generator/storage unit."/>
        <Sequence name="DERMeasurement" type="Iec61850.DERMeasurement" optional="true" documentation="Basic generator measurements."/>
        <Sequence name="DEROperationalModeControls" type="Iec61850.DEROperationalModeControls" optional="true" documentation="Control of the operational modes of the generator/storage."/>
        <Sequence name="DERThermalStorage" type="Iec61850.DERThermalStorage" optional="true" documentation="Characteristics of the thermal storage."/>
        <Sequence name="DERUnitControlActions" type="Iec61850.DERUnitControlActions" optional="true" documentation="Basic generator control operations."/>
        <Sequence name="DERUnitGenerator" type="Iec61850.DERUnitGenerator" optional="true" documentation="Detailed status of generator/storage."/>
        <Sequence name="DERUnitStatus" type="Iec61850.DERUnitStatus" optional="true" documentation="Operational status of the generator/storage."/>
        <Array name="nameplateEmissions" memberType="Fsgim.DERDatasheetEmissions" maximumSize="11" documentation="Generator emissions per operating mode."/>
        <Sequence name="output" type="Fsgim.ConnectionPoint" documentation="The connection point associated with the output of this Generator."/>
    </Sequence>

    <Sequence name="Fsgim.DispatchableGenerator" extends="Fsgim.Generator" documentation="The DispatchableGeneraror class defines the attributes that are unique to power generating devices that can supply power when needed. The attributes define the information needed to represent supply policies based on criteria including priorities, cost constraints, protection of physical equipment, and safety considerations. The DispatchableGenerator class also provides attributes for orderly reduction  of generated supply.">
        <Sequence name="eligibleSupply" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines the amount of supply still eligible to be added by the generator. For two-state generators this value will either be the value of maximumSupply as defined in the Generator class or zero. For multi-state generators this value is the total remaining supply that can be added as defined in the supplyRatingsLevel attribute.
            Constraint:  The value of this attribute shall be greater or equal to 0. 
            Constraint:  The value of this attribute shall not be greater than the value of the Load.maximumLoad attribute. 
            "/>
        <Sequence name="generatedSupplySetpoint" type="Fsgim.PowerMeasurementsSet" documentation="
            This attribute defines the maximum power threshold of the generator at the present time. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <DateTime name="lastSupplyCycleDateTime" optional="true" documentation="This attribute defines the date and time on which the generator last supplied power.  For multistage generators, each time a stage is switched, this attribute shall be updated."/>
        <Integer name="maximumSupplyCyclesInPeriod" optional="true" documentation="
            This attribute defines the maximum number of times this generator may supply energy within the specified period. When the supplyCyclesInPeriod reaches this attribute’s value, the generatorStatus attribute will be set to maxCyclesThisPeriod rendering the generator ineligible to supply energy until the period information is reset.   The duration of the period and the resetting of this attribute is a local matter.
            .
            Constraint:  If the actualCurtailmentsInPeriod attribute is defined, then this attribute shall be defined. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <String name="maximumSupplyTime" type="Fsgim.Duration" documentation="
            This attribute specifies the maximum number of seconds that a generator may supply power before it shall be released.   This duration is often used to manage emission levels, or meet safety code requirements.  It is used to set the queueTimeRemaining attribute when placing the generator in the maxSupplyQueue state.
            Constraint:  This attribute's value shallt be greater than or equal to the minimumCurtailTime attribute's value. 
            Constraint:  This attribute's value shall be greater than 0. 
            "/>
        <String name="minimumSupplyTime" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the minimum number of seconds that a generator shall be powered up before it may be released. This duration may be used to protect the generator's hardware from excess cycling or to meet safety code requirements.
            It is used to set the QueueTimeRemaining attribute when placing the load in the minCurtailQueue state.
            Constraint:  This attribute's value shall be less than or equal to the maximumCurtailTime attribute's value. 
            Constraint:  This attribute's value shall be greater than 0. 
            "/>
        <Boolean name="overridden" optional="true" documentation="
            This attribute is typically controlled by an external entity to affect eligibility of the generator. For example, the Energy Manager may override this generator if the present price of fuel is outside a defined economic threshold. 
            This attribute differs from the generatorLocked attribute in that this attribute is meant to be connected to an automation system and only persists while the override is in effect. The generatorLocked attribute persists indefinitely and meant to be set by manual intervention.
            "/>
        <Real name="priceThreshold" optional="true" documentation="
            This attribute defines the marginal operational cost per unit of power basis for this generator. The priority is not created within the generator; this is a placeholder for the Energy Manager. This attribute can be derived from the DERCostParameters.OperatingWCost attribute.
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Integer name="priority" optional="true" documentation="
            This attribute defines the order upon which a generator starts across a set of generators. If the attribute is not present, it shall be assumed to have the lowest priority. The priority is not created within the generator, this is a placeholder for the Energy Manager. 
            Constraint:  How eligible loads of the same priority curtail is a local matter. 
            Constraint:  Priorities range from 1 to 1000 
            Constraint:  Priority 1 loads curtail last 
            Constraint:  Priority 1000 loads curtail earliest 
            "/>
        <String name="queueTimeRemaining" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the duration of time that a dispatchable generator has remaining on either the minimum supply time, the maximum supply time or release time queue.  When entered in the queue, this value will be set to the minimumSupply time, the (maximumSupplyTime – minimumSupplyTime) or the releaseTime respectively. This value will be down counted at a rate of not less than once per minute until the timer expires.  At the expiration time, the generator state will transition to the next state and the queue time reset.
            Constraint:  actualQueueTimeRemaining > = 0 
            "/>
        <String name="releaseTime" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the number of seconds that a generator shall be turned off before it is again eligible to supply power. This duration may be used to protect the generator's hardware from excess cycling or meet safety code requirements. It is used to set the queueTimeRemaining attribute when placing the generator in the releaseQueue state.
            If this attribute is not present, the releaseTime shall be considered to be zero (0) and immediately become available to supply power.
            Constraint:  This attribute's value shall be greater than 0. 
            "/>
        <Sequence name="requestedSupplyLevel" type="Ei.FSGIMEventSignalType" documentation="
            This attribute defines the power level to which the Energy Manager is requesting the generator to operate.  The request by the Energy Manager is always a supply amount; however, the generator will compare this supply requested amount to the present supply of the generator and may then a) supply more power, b) reduce the power or c) leave the generator at its present supply state.
            The request is made in one of four ways defined by the value requestedSupplyLevel.signalType :
            1)  When the requestedSupplyLevel.signalType attribute is set to ‘setpoint’, the requestedSupplyLevel.currentValue attribute describes the absolute amount of supply the generator may deliver. The currentValue must be a positive number or zero. The currentValue is compared against
            the generatedSupplySetpoint and maximumSupply to determine the adjustment needed to the generation supply setpoint.  
            a) If the currentValue equals the generatedSupplySetpoint, no further adjustment will occur. The supplyStatus will be set to supplyCompliant.
            b)  If the currentValue is zero, the generator will be powered down if the generator has surpassed its minSupplyTime and the supplyStatus will be set to supplyCompliant. If the minSupplyTime has not yet been surpassed, the generator will be powered down as soon as it reaches the minSupplyTime. The supplyStatus will be set to minSupplyQueue until the minSupplyTime is reached where upon the supplyStatus will then be set to supplyCompliant.
            c)  If the currentValue is less than the generatedSupplySetpoint but not zero, the generator setpoint will be reduced if the generator has surpassed its minSupplyTime. If not, the generator will reduce the power setpoint as soon as it reaches the minSupplyTime. The supplyStatus will be set to supplyCompliant.
            d)  If the currentValue is greater than the generatedSupplySetpoint but less than the maximumSupply, the generator setpoint will be increased if the generator has surpassed its minSupplyTime.  If not, the generator setpoint will be increased once the generator reaches the minSupplyTime.
            e)  If the currentValue is greater than  the maximumSupply, the generator setpoint will be increased to the maximumSupply and the supplyStatus will be set to supplyNoncompliant
            2) When the requestedSupplyLevel.signalType attribute is set to ‘delta’, the requestedSupplyLevel.currentValue attribute defines the relative amount of supply the generator may deliver. The currentValue may be a positive or negative number. The sum of currentValue and actualGeneratedSupply, is compared against zero and maximumSupply to determine the adjustment needed to the generation supply setpoint.  
            a) If the currentValue is zero no further curtailment or restoration will occur. The supplyStatus will be set to supplyCompliant.
            b)  If the currentValue is positive, the generatedSupplySetpoint will be increased to the sum of the currentValue plus the generatedSupplySetpoint, but not to exceed the maximumSupply. If the sum of the currentValue and the generatedSupplySetpoint is less than the maximumSupply the supplyStatus will be set to supplyCompliant.  . If the sum of the currentValue and the generatedSupplySetpoint is greater than the maxSupply the supplyStatus will be set to supplyNonCompliant.  
            c)  If the currentValue is negative, the generatedSupplySetpoint will be decreased to the sum of the currentValue plus the generatedSupplySetpoint, but not less than zero. If the sum of the currentValue and the generatedSupplySetpoint is greater than zero, the supplyStatus will be set to supplyCompliant.  If the sum of the currentValue and the generatedSupplySetpoint is less than zero, generatedSupplySetpoint will be set to zero and the supplyStatus will be set to supplyCompliant.  
            3) When the requestedSupplyLevel.signalType attribute is set to ‘multiplier’, the requestedSupplyLevel.currentValue attribute divided by 100 defines the percentage of the generatedSupplySetpoint value to which the generator should be adjusted. That is:
            generatedSupplySetpoint &lt;= generatedSupplySetpoint*(currentValue/100)
            where the currentValue must be a positive number in the range of 0 to 100.  The supplyStatus will be set to supplyCompliant.  
            4)  When the requestedSupplyLevel.signalType attribute is set to ‘level’, the requestedSupplyLevel.currentValue attribute describes the predefined level to which the generator will be adjusted. The currentValue must be a positive number within the range of 1 to n, where n is defined as the number of entries in the supplyRatingsLevel array. When the request is received, the generator will adjust its generatedSupplySetpoint to the level defined by supplyRatingsLevel(currentValue).supplyAmount.
            If the value of currentValue is not within the range of n supported by the generator, the request will not be honored.
            "/>
        <Real name="supplyCost" optional="true" documentation="This attribute defines the monetary value of the fixed and variable cost associated with supplying power (when positive) or the savings associated with supplying power (when negative) on a per unit of power basis. This attribute is derived from DERCostParameters.OperatingCost, DERCostParameters.StartCost, DERCostParameters.RampCost, and DERCostParameters.StopCost."/>
        <Integer name="supplyCyclesInPeriod" optional="true" documentation="
            This attribute defines the number of times the generator has supplied power since this attribute was last reset. This attribute shall be increased by one each time a dispatchable generator becomes operational and supplies power to a load. This attribute is derived from DERUnitGenerator.PeriodStartCount.
            Constraint:  If the maximumCurtailmentsInPeriod attribute is defined, then this attribute shall be defined. 
            Constraint:  This attribute's value shall be greater than or equal to 0. 
            "/>
        <Array name="supplyRatingsLevel" memberType="Fsgim.SupplyArrayElement" documentation="
            This attribute defines the array of supply when the requestedSupplyLevel.signalType equals 'level'.  This array transforms the level requested by the Energy Manager as specified by the attribute requestedSupplyLevel.level into the supply to which the generator shall be controlled. This attribute is derived from DERGeneratorRatings.MaximumWOutput, DERGeneratorRatings.MinimumWOutput, DERComplexRamping.StepPs, and DERComplexRamping.StepNg.
            Constraint:  This attribute is required if requestedCurtailmentLevel.signalType may equal 'level' 
            "/>
        <Enumerated name="supplyStatus" type="Fsgim.SupplyStatusType" documentation="This attribute indicates whether the generator is presently supplying power and, if so, is in compliance with the power request received. This attribute is derived from DERUnitGenerator.GeneratorOperationStatus and DERUnitStatus.ModeOnConnected."/>
    </Sequence>

    <Sequence name="Fsgim.SupplyArrayElement" documentation="This class defines a single array element of the supplyRatingsLevel attribute. Each array element defines the fixed supply to which the generator shall be controlled as a function of the stated level. The array is ordered by the supplyRatingsLevel.levelIndex attribute.  ">
        <Sequence name="supplyAmount" type="Fsgim.PowerMeasurementsSet" documentation="This attribute defines the absolute supply to be achieved upon receipt of a request from an energy manager as specified in the requestedSupplyLevel.currentValue attribute.  When deployed in the supplyRatingsLevel array, this attribute defines the absolute supply the generator should target for each of the defined levels."/>
        <Integer name="levelIndex" documentation="This attribute defines the level or percentage index when used in the supplyRatingsLevel or supplyRatingsMultiplier attributes respectively. When used in the supplyRatingsLevel array , this attribute is matched to the requestedSupplyLevel.currentValue as supplied by the Energy Manager to transform the level request to the absolute supply requested. "/>
    </Sequence>

    <Enumerated name="Fsgim.StorageType" documentation="An enumeration that defines the energy storage characteristics of an instance of the Generator Class.">
        <NamedValues>
            <Unsigned name="none" value="1" documentation="This value indicates that this instance of the Generator Class models a device that does not produce energy from storage."/>
            <Unsigned name="electricalStorage" value="2" documentation="This value indicates that this instance of the Generator Class models a device that produces electricity from storage."/>
            <Unsigned name="thermalStorage" value="3" documentation="This value indicates that this instance of the Generator Class models a device that produces thermal energy from storage."/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.SupplyStatusType" documentation="This enumeration indicates if the load is presently curtailed and if curtailed is in compliance with the curtailment request received.">
        <NamedValues>
            <Unsigned name="supplyInactive" value="1" documentation="This generator is not presently operating"/>
            <Unsigned name="supplyRequestPending" value="2" documentation="A request has been received and is pending."/>
            <Unsigned name="supplyCompliant" value="3" documentation="The generator operation is compliant with the last request."/>
            <Unsigned name="supplyNoncompliant" value="4" documentation="The generator is not compliant with the last request."/>
        </NamedValues>
    </Enumerated>

    <Sequence name="Fsgim.DemandTarget" documentation="This class defines a demand target during a time interval.">
        <Sequence name="applicableTimePeriod" type="Wscal.AvailabilityType" optional="true" documentation="The time period during which a demand target applies."/>
        <Sequence name="peakDemandTarget" type="Fsgim.PowerRealType" documentation="The targeted peak demand not to be exceeded during the applicableTimePeriod."/>
    </Sequence>

    <Sequence name="Fsgim.EM" extends="Fsgim.ComponentElement" documentation="The EM Class is the central class of the Energy Manager Component.  It contains indirectly through its associations the information elements that support the functionality of an energy manager. An energy manager reports on and makes decisions involving meters, loads, generators, storage devices, other energy managers, and external information.">
        <!-- associations -->
        <Array name="billingCycle" memberType="Fsgim.Sequence" documentation="Sequences of actual archived historical interval data that are synchronized to the facility's billing cycle."/>
        <Array name="eMs" memberType="Fsgim.EM" documentation="Energy Managers managed by this Energy Manager."/>
        <Array name="energyRouter" memberType="Fsgim.EnergyRouter" documentation="The energy router(s) managed by this Energy Manager."/>
        <Array name="forecasts" memberType="Fsgim.ForecastSequence" documentation="Sequences of projections of interval data."/>
        <Array name="generators" memberType="Fsgim.Generator" documentation="Generators managed by this Energy Manager."/>
        <Array name="loads" memberType="Fsgim.Load" documentation="Loads managed by this Energy Manager."/>
        <Array name="meters" memberType="Fsgim.Meter" documentation="Meters monitored by this Energy Manager."/>
        <Array name="presentAggregationData" memberType="Fsgim.EMPresentData" minimumSize="1" documentation="
            The set of data associated with the present (filling) interval. 
            Note: All direct subordinate Meters, Loads, Generators, and Energy Managers have one or more ConnectionPoints that link them to a Circuit. There is one set of EMPresentData for each of these Circuits.
            "/>
        <Array name="userSequence" memberType="Fsgim.Sequence" documentation="User defined Sequences of Intervals used by this Energy Manager."/>
    </Sequence>

    <Sequence name="Fsgim.EMGenerationType" extends="Emix.GenerationType" documentation="
            This class represents net demand reductions resulting from supply increases. The class supports power ramps that describe the power profile for a generation resource when it is energized (stagingRamps) or de-energized (recoveryRamps). 
            For each array element of a generation stagingRamp, the stagingRamp[n].rate defines the amount of power increase and the stagingRamp[n].duration defines the length of time in seconds upon which this increase is in effect. If the stagingRamp[n].beginRamp is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment. Although the generation stagingRamp attribute name implies that the demand is monotonically increasing, individual array elements may have slopes less than, greater than, or equal to 0. However, the overall trend of the function shall be increasing.
            For each array element of a generator recoveryRamp, the recoveryRamp[n].rate defines the amount of power decrease and the recoveryRamp[n].duration defines the length of time in seconds upon which this decrease is in effect. If the recoveryRamp[n].beginRamp is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment. Although the generator recoveryRamp attribute name implies that the demand reduction is monotonically decreasing, individual array elements may have slopes less than, greater than, or equal to 0. However, the overall trend of the function shall be increasing.
            ">
        <!-- associations -->
        <Array name="actualIntervalSupplyChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment was achieved."/>
        <Sequence name="actualPresentSupplyChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was achieved."/>
        <Array name="committedIntervalSupplyChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment is made."/>
        <Sequence name="committedPresentSupplyChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was made."/>
        <Sequence name="generatorEmissions" type="Fsgim.EmissionsMeasurementsSet" optional="true" documentation="Emissions associated with operating a generator."/>
        <Array name="measuredAt" memberType="Fsgim.EMUsagePoint" minimumSize="1" documentation="Points in the facility power network at which measurements of generation are made."/>
    </Sequence>

    <Sequence name="Fsgim.EMIntervalData" extends="Wscal.AttachType" documentation="This class represents data in the domain of concern of an Energy Manager over some complete interval of time. This time interval may be in the past or future.">
        <Sequence name="aggregateAdjustedFullDRDemand" type="Fsgim.AdjustedFullDRDemandAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate demand calculated by applying the AdjustedFullDRDemandRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads, with the largest acceptable demand response, directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateAdjustedFullDRSupply" type="Fsgim.AdjustedFullDRSupplyAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate supply calculated by applying the AdjustedFullDRSupplyRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate supply of generators and electrical storage devices, with the largest acceptable demand response, directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateAdjustedNoDRDemand" type="Fsgim.AdjustedNoDRDemandAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate demand calculated by applying the AdjustedNoDRDemandRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads, as if no demand response was in effect, directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateAdjustedNoDRSupply" type="Fsgim.AdjustedNoDRSupplyAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate supply calculated by applying the AdjustedNoDRSupplyRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of generators and electrical storage devices, as if no demand response was in effect, directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateDemand" type="Fsgim.DemandAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate demand calculated by applying the DemandRuleset algorithm averaged over the interval referenced by the IntervalDataContainer.  Alternatively, this could be determined by calculating EnergyConsumedAggregation divided by the interval duration.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateElectricalEnergyStored" type="Fsgim.ElectricalEnergyStoredAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate stored electrical energy calculated by applying the ElectricalEnergyStoredRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate electrical energy stored by electrical storage devices directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="aggregateEmissionsGenerated" type="Fsgim.EmissionsGeneratedAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate generated emissions calculated by applying the EmissionsGeneratedRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate emissions produced by generators and electrical storage devices directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="aggregateEmissionsGenerationRate" type="Fsgim.EmissionsGenerationRateAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate emissions generation rate calculated by applying the EmissionsGenerationRateRuleset algorithm averaged over the interval referenced by the IntervalDataContainer.  Alternatively, this could be determined by calculating EmissionsGeneratedAggregation/ divided by the interval duration.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate emissions generation rate of generators and electrical storage devices directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateEnergyConsumed" type="Fsgim.EnergyConsumedAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate consumed energy calculated by applying the EnergyConsumedRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate energy consumed by loads directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="aggregateEnergySupplied" type="Fsgim.EnergySuppliedAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate supplied energy calculated by applying the EnergySuppliedRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate energy supplied by generators and electrical storage devices directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="aggregateNetDemand" type="Fsgim.NetDemandAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate net demand calculated by applying the NetDemandRuleset algorithm averaged over the interval referenced by the IntervalDataContainer.  Alternatively, this could be determined by calculating NetEnergyConsumedAggregation divided by the interval duration.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate net demand of loads, generators, and electrical storage devices directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateNetEnergyConsumed" type="Fsgim.NetEnergyConsumedAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate net consumed energy calculated by applying the NetEnergyConsumedRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate net energy consumption of loads, generators, and electrical storage devices directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="aggregateSupply" type="Fsgim.SupplyAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate supply calculated by applying the SupplyRuleset algorithm averaged over the interval referenced by the IntervalDataContainer.  Alternatively, this could be determined by calculating EnergySuppliedAggregation divided by the interval duration.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate supply of generators and electrical storage devices directly or indirectly managed by the associated EM, averaged over the identified time interval.
            "/>
        <Sequence name="aggregateThermalEnergyStored" type="Fsgim.ThermalEnergyStoredAggregation" optional="true" documentation="
            For an interval that is not part of a ForecastSequence, this attribute represents the aggregate stored thermal energy calculated by applying the ThermalEnergyStoredRuleset algorithm at the end of the interval referenced by the IntervalDataContainer.
            For an interval that is part of a ForecastSequence, the exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate thermal energy stored by thermal storage devices directly or indirectly managed by the associated EM, during the identified time interval.
            "/>
        <Sequence name="resources" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="The set of all of the loads, generators, meters, and EMs that are directly managed by the energy manager during the interval referenced by the IntervalDataContainer through the attach relation."/>
        <!-- associations -->
        <Array name="actualIntervalDemandChange" memberType="Fsgim.EMLoadReductionType" documentation="This attribute represents the demand profile change in response to a  request from the grid.  The process for calculating this is a local matter."/>
        <Array name="actualIntervalNetDemandChange" memberType="Fsgim.EMPowerResponseType" documentation="This attribute represents the net demand profile change in response to a  request from the grid.  The process for calculating this is a local matter."/>
        <Array name="actualIntervalSupplyChange" memberType="Fsgim.EMGenerationType" documentation="This attribute represents the actual supply profile change in response to a request from the grid.  The process for calculating this is a local matter."/>
        <Sequence name="aggregationMetadata" type="Fsgim.AggregationProperties" documentation="The metadata that applies to a Circuit for which an aggregation is being computed."/>
        <Array name="committedIntervalDemandChange" memberType="Fsgim.EMLoadReductionType" documentation="This represents the demand profile change commitment made to the energy provider in response to a curtailment request. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="committedIntervalNetDemandChange" memberType="Fsgim.EMPowerResponseType" documentation="This represents the net demand profile change commitment made to the energy provider in response to a curtailment request. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="committedIntervalSupplyChange" memberType="Fsgim.EMGenerationType" documentation="This represents the supply profile change commitment made to the energy provider in response to a dispatch request. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="eiEvents" memberType="Ei.EiEventType" documentation="Energy events of interest to this energy manager for this interval."/>
        <Array name="energySuppliers" memberType="Fsgim.ServiceSupplierData" documentation="
            Organizations available to the EM for supplying energy during the interval.
            An EMIntervalData instance for an ESI energy manager will have at least one energySupplier.
            "/>
        <Array name="intervalMeasurementQuantity" memberType="Fsgim.MeasurementQuantity" documentation="User defined MeasurementQuantity relevant to the EM for the interval."/>
        <Array name="intervalMeasurementSet" memberType="Fsgim.MeasurementSet" documentation="User defined MeasurementSet relevent to the EM for the interval."/>
        <Array name="intervalPowerQualitySummary" memberType="NAESB.ElectricPowerQualitySummary" documentation="Power quality summary associated with the Interval ."/>
        <Array name="intervalWeatherReportMeasured" memberType="Fsgim.FSGIMWeatherReport" documentation="The weather associated with the interval.  This weather report is provided by a source internal to the facility"/>
        <Array name="intervalWeatherReportProvided" memberType="Fsgim.FSGIMWeatherReport" documentation="The weather associated with the interval.  This weather report is provided by an external source."/>
        <Sequence name="intervalWeatherTrendMeasured" type="Fsgim.FSGIMWeatherTrend" optional="true" documentation="The weather trend associated with the interval.  This weather trend is provided by a source internal to the facility."/>
        <Sequence name="intervalWeatherTrendProvided" type="Fsgim.FSGIMWeatherTrend" optional="true" documentation="The weather trend associated with the interval.  This weather trend is provided by an external source."/>
        <Array name="prices" memberType="Emix.EmixBaseType" documentation="Price information for energy consumed during the interval."/>
        <Sequence name="usageSummary" type="NAESB.UsageSummary" optional="true" documentation="Summary data related to energy for the interval(s). Note that this UsageSummary is distinct from any UsageSummary generated by the supplier."/>
    </Sequence>

    <Sequence name="Fsgim.EMLoadReductionType" extends="Emix.LoadReductionType" documentation="
            This class represents demand reductions from Loads in response to a demand response event. The class supports power ramps that describe the power profile for a resource when it is de-energized (stagingRamps) or energized (recoveryRamps). 
            For each array element of a stagingRamp, the stagingRamp[n].rate defines the amount of power decrease and the stagingRamp[n].duration defines the length of time in seconds upon which this decrease is in effect. If the stagingRamp[n].beginRamp is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment. Although the stagingRamp attribute name implies that the demand reduction is monotonically decreasing, individual array elements may have slopes less than, greater than, or equal to 0. However, the overall trend of the function shall be decreasing.
            For each array element of a recoveryRamp, the recoveryRamp[n].rate defines the amount of power increase and the recoveryRamp[n].duration defines the length of time in seconds upon which this increase is in effect. If the recoveryRamp[n].beginRamp is defined for a ramp segment, this is the initial value of the ramp segment; if it is not present the initial value of the ramp equals the ending value of the previous ramp segment. Although the recoveryRamp attribute name implies that the demand is monotonically increasing, individual array elements may have slopes less than, greater than, or equal to 0. However, the overall trend of the function shall be increasing.
            ">
        <!-- associations -->
        <Array name="actualIntervalDemandChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment was achieved."/>
        <Sequence name="actualPresentDemandChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was achieved."/>
        <Array name="committedIntervalDemandChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment is made."/>
        <Sequence name="committedPresentDemandChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was made."/>
        <Array name="measuredAt" memberType="Fsgim.EMUsagePoint" minimumSize="1" documentation="Points in the facility power network at which measurements of usage are made."/>
    </Sequence>

    <Sequence name="Fsgim.EMPowerResponseType" extends="Emix.PowerResponseType" documentation="This class represents net demand reductions resulting from a combination of reductions in demand (EMLoadReductionType) and increases in supply (EMGenerationType).">
        <!-- associations -->
        <Array name="actualIntervalNetDemandChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment was achieved."/>
        <Sequence name="actualPresentNetDemandChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was achieved."/>
        <Array name="committedIntervalNetDemandChangeBasis" memberType="Fsgim.EMIntervalData" documentation="This value identifies the affected intervals upon which the grid commitment is made."/>
        <Sequence name="committedPresentNetDemandChangeBasis" type="Fsgim.EMPresentData" documentation="This value provides the technical data provenance upon which the grid commitment was made."/>
    </Sequence>

    <Sequence name="Fsgim.EMPresentData" documentation="
            The container that directly holds all of the aggregated present data and indirectly holds the associated present context.
            Constraint:  If the attributes required by a standard aggregation's Ruleset are present, then that aggregation must be present. 
            ">
        <Sequence name="partialIntervalAggregateElectricalEnergyStored" type="Fsgim.ElectricalEnergyStoredAggregation" optional="true" documentation="The aggregate stored electrical energy calculated by applying the ElectricalEnergyStoredAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="partialIntervalAggregateEmissionsGenerated" type="Fsgim.EmissionsGeneratedAggregation" optional="true" documentation="The aggregate emissions calculated by applying the EmissionsGeneratedAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="partialIntervalAggregateEnergyConsumed" type="Fsgim.EnergyConsumedAggregation" optional="true" documentation="The aggregate consumed energy calculated by applying the EnergyConsumedAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="partialIntervalAggregateEnergySupplied" type="Fsgim.EnergySuppliedAggregation" optional="true" documentation="The aggregate generated energy calculated by applying the EnergySuppliedAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="partialIntervalAggregateNetEnergyConsumed" type="Fsgim.NetEnergyConsumedAggregation" optional="true" documentation="The net consumed energy calculated by applying the NetEnergyConsumedAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="partialIntervalAggregateThermalEnergyStored" type="Fsgim.ThermalEnergyStoredAggregation" optional="true" documentation="The aggregate stored thermal energy calculated by applying the ThermalEnergyStoredAggregation algorithm in a partially completed (filling) demand interval."/>
        <Sequence name="presentAggregateAdjustedFullDRDemand" type="Fsgim.AdjustedFullDRDemandAggregation" optional="true" documentation="The aggregate demand calculated by applying the AdjustedFullDRDemandAggregation algorithm averaged over the time since the beginning of the present demand interval."/>
        <Sequence name="presentAggregateAdjustedFullDRSupply" type="Fsgim.AdjustedFullDRSupplyAggregation" optional="true" documentation="The aggregate supply calculated by applying the AdjustedFullDRupplyAggregation algorithm averaged over the time since the beginning of the present demand interval."/>
        <Sequence name="presentAggregateAdjustedNoDRDemand" type="Fsgim.AdjustedNoDRDemandAggregation" optional="true" documentation="The aggregate demand calculated by applying the AdjustedNoDRDemandAggregation algorithm averaged over the time since the beginning of the present demand interval."/>
        <Sequence name="presentAggregateAdjustedNoDRSupply" type="Fsgim.AdjustedNoDRSupplyAggregation" optional="true" documentation="The aggregate supply calculated by applying the AdjustedNoDRSupplyAggregation algorithm averaged over the time since the beginning of the present demand interval."/>
        <Sequence name="presentAggregateDemand" type="Fsgim.DemandAggregation" optional="true" documentation="The aggregate demand calculated by applying the DemandAggregation algorithm at the present time."/>
        <Sequence name="presentAggregateEmissionsGenerationRate" type="Fsgim.EmissionsGenerationRateAggregation" optional="true" documentation="
            The aggregate emissions generation rate calculated by applying the EmissionsGenerationRateAggregation algorithm at the present time.
            "/>
        <Sequence name="presentAggregateNetDemand" type="Fsgim.NetDemandAggregation" optional="true" documentation="The net demand calculated by applying the NetDemandAggregation algorithm at the present time."/>
        <Sequence name="presentAggregateSupply" type="Fsgim.SupplyAggregation" optional="true" documentation="The aggregate supply calculated by applying the SupplyAggregation algorithm at the present time."/>
        <Sequence name="presentResources" type="Fsgim.AllResourcesInEMDomain" documentation="The set of all of the loads, generators, meters, and EMs that are directly managed by the energy manager at this instant in time."/>
        <!-- associations -->
        <Array name="actualPresentDemandChange" memberType="Fsgim.EMLoadReductionType" documentation="This represents the actual demand profile change in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="actualPresentNetDemandChange" memberType="Fsgim.EMPowerResponseType" documentation="This represents the actual net demand profile change in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="actualPresentSupplyChange" memberType="Fsgim.EMGenerationType" documentation="This represents the actual supply profile change in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Sequence name="aggregationMetadata" type="Fsgim.AggregationProperties" documentation="The metadata that applies to a Circuit for which an aggregation is being computed."/>
        <Array name="committedPresentDemandChange" memberType="Fsgim.EMLoadReductionType" documentation="This represents the demand profile change commitment made to the energy provider in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="committedPresentNetDemandChange" memberType="Fsgim.EMPowerResponseType" documentation="This represents the net demand profile change commitment made to the energy provider in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Array name="committedPresentSupplyChange" memberType="Fsgim.EMGenerationType" documentation="This represents the supply profile change commitment made to the energy provider in response to a signal from the grid. The value is based upon the applicable technical aggregations and enterprise policy decisions."/>
        <Sequence name="currentEnergySupplier" type="Fsgim.ServiceSupplierData" optional="true" documentation="Organization currently available to the EM for supplying energy."/>
        <Array name="currentPrices" memberType="Emix.EmixBaseType" documentation="Current energy price information known by the EM at the present time."/>
        <Sequence name="partialIntervalPowerQualitySummary" type="NAESB.ElectricPowerQualitySummary" optional="true" documentation="Power quality summary in a partially completed interval."/>
        <Array name="presentEIEvents" memberType="Ei.EiEventType" documentation="Energy events underway that are relevant to the EM at the present time."/>
        <Array name="presentMeasurementQuantity" memberType="Fsgim.MeasurementQuantity" documentation="User defined MeasurementQuantity relevant to the EM at the present time."/>
        <Array name="presentMeasurementSet" memberType="Fsgim.MeasurementSet" documentation="User defined MeasurementSet relevent to the EM at the present time."/>
        <Array name="presentWeatherReportMeasured" memberType="Fsgim.FSGIMWeatherReport" documentation="The weather at the present time and place.  This weather report is provided by a source internal to the facility."/>
        <Array name="presentWeatherReportProvided" memberType="Fsgim.FSGIMWeatherReport" documentation="The weather at the present time and place.  This weather report is provided by an external source."/>
        <Sequence name="presentWeatherTrendMeasured" type="Fsgim.FSGIMWeatherTrend" optional="true" documentation="The weather trend at the present time and place.  This weather trend is provided by a source internal to the facility."/>
        <Sequence name="presentWeatherTrendProvided" type="Fsgim.FSGIMWeatherTrend" optional="true" documentation="The weather trend at the present time and place.  This weather trend is provided by an external source."/>
        <Sequence name="usageSummary" type="NAESB.UsageSummary" optional="true" documentation="The facility's Summary data related to energy for the present time. Note that this UsageSummary is distinct from any UsageSummary generated by the supplier."/>
        <Array name="userAggregations" memberType="Fsgim.Aggregation" documentation="User defined aggregations used by this Energy Manager."/>
    </Sequence>

    <Sequence name="Fsgim.EMUsagePoint" extends="NAESB.UsagePoint" documentation="
            Logical point on a network at which consumption or production is either measured (e.g., metered) or estimated (e.g., unmetered street lights).
            Constraint:  For the FSGIM, the associations from the parent UsagePoint Class to the other NAESB classes all have a multiplicity of 0 with the exception of ElectricPowerQualitySummary because this information is captured in other ways in the FSGIM model. 
            ">
        <!-- associations -->
        <Array name="demandSources" memberType="Fsgim.EMLoadReductionType" documentation="Sources of demand contributing to values measured at an EMUsagePoint."/>
        <Sequence name="emixInterfaceType" type="Emix.EmixInterfaceType" optional="true" documentation="Identifies the corresponding EmixInterfaceType for external EMUsagePoints."/>
        <Sequence name="localTimeParameters" type="Fsgim.LocalTimeParameters" optional="true" documentation="Defines the local time conversions from a UTC timestamp."/>
        <Array name="measurements" memberType="Fsgim.Measurement" documentation="Measurements at a specific EMUsagePoint."/>
        <Sequence name="physicalConnectionPoint" type="Fsgim.ConnectionPoint" optional="true" documentation="The representation of the point that connects to a Circuit in the facility’s physical electrical topology."/>
        <Array name="supplySources" memberType="Fsgim.EMGenerationType" documentation="Sources of supply contributing to values measured at an EMUsagePoint."/>
    </Sequence>

    <Sequence name="Fsgim.ServiceSupplierData" extends="Fsgim.FSGIMIdentifiedObject" documentation="This class contains information associated with the generated emissions, quality of power, and energy-price units associated with an identified supplier of energy.">
        <Integer name="cpp" documentation="The critical peak period bucket to which the reading is attributed. A value of 0 means that there is no applicable critical peak period. Even though critical peak period is usually considered a specialized form of time-of-use pricing, this attribute is defined explicitly to provide flexibility."/>
        <Sequence name="emissions" type="Fsgim.EmissionsMeasurementsSet" optional="true" documentation="The emissions generated by this supplier for the energy used."/>
        <Sequence name="emissionsRate" type="Fsgim.EmissionsRateMeasurementsSet" optional="true" documentation="The rate of emissions generated by this supplier for the energy used."/>
        <Sequence name="energyPrice" type="Emix.UnitEnergyPriceType" optional="true" documentation="The unit energy price associated with this supplier for the energy used."/>
        <Array name="marketContext" memberType="Fsgim.AnyURI" documentation="The  overall market or program rules that govern relations between the energy supplier and the facility."/>
        <Integer name="tou" documentation="The time-of-use bucket to which the reading value is attributed. A value of 0 means not applicable."/>
        <!-- associations -->
        <Sequence name="energySupplier" type="NAESB.ServiceSupplier" documentation="The supplier of the energy referenced by this data."/>
        <Sequence name="supplierUsageSummary" type="NAESB.UsageSummary" optional="true" documentation="The supplier's summary for this energySupplierData. Note that this UsageSummary is distinct from any UsageSummary generated by the facility."/>
        <Array name="target" memberType="Fsgim.DemandTarget" documentation="The internal demand goal or target for this energy supplier."/>
    </Sequence>

    <Sequence name="Fsgim.PeakPowerData" documentation="This class contains information associated with peak power intervals within a Sequence.">
        <Sequence name="demandPrice" type="Fsgim.MonetaryQuantity" optional="true" documentation="This attribute represents the demand price associated with a billingCycle."/>
        <Sequence name="supplyPrice" type="Fsgim.MonetaryQuantity" optional="true" documentation="This attribute represents the supply price associated with a billingCycle. This is analogous to the concept of a demand price, for facilities that have local generation."/>
        <Sequence name="rachetPrice" type="Fsgim.MonetaryQuantity" optional="true" documentation="This attribute represents the rachet price associated with a Sequence applicable to the rachet period."/>
        <!-- associations -->
        <Sequence name="peakNetDemand" type="Fsgim.EMIntervalData" optional="true" documentation="
            This value is only applicable to the EM.billingCycle sequence of an energy manager that is serving in an ESI EM role.  
            The value identifies the EMIntervalData instance containing the most positive EMIntervalData.aggregateNetDemand within the sequence of intervals. The applicable tariff rules are used to determine which instance of EMIntervalData represents this peak net demand.
            If the information is available and there is at least one instance that meets the tariff rules and where the EMIntervalData.aggregateNetDemand is positive, then this information must be provided.
            "/>
        <Sequence name="peakNetSupply" type="Fsgim.EMIntervalData" optional="true" documentation="
            This value is only applicable to the EM.billingCycle sequence of an energy manager that is serving in an ESI EM role.  
            The value identifies the EMIntervalData instance containing the most negative EMIntervalData.aggregateNetDemand within the sequence of intervals. The applicable tariff rules are used to determine which instance of EMIntervalData represents this peak net supply.
            If the information is available and there is at least one instance that meets the tariff rules and where the EMIntervalData.aggregateNetDemand is negative, then this information must be provided.
            "/>
    </Sequence>

    <Sequence name="Fsgim.ForecastSequence" extends="Fsgim.Sequence" documentation="The Sequence that is used for storing all forecasts, including forecasts for time periods where the originally forecasted time period has now passed.">
        <DateTime name="timeOfForecast" optional="true" documentation="Time at which the forecast was made."/>
    </Sequence>

    <Sequence name="Fsgim.IntervalDataContainer" extends="Wscal.IntervalType" documentation="
            This class represents an interval of time that attaches to a collection of data pertinent to the interval.
            Constraint:  At any time, at most two of the attributes (dtStart, dtEnd, duration) may have a value. 
            Constraint:  Only dtStart, dtEnd, duration may be specified. 
            Constraint:  When the 'duration' attribute is defined, the duration must be greater than zero. 
            Constraint:  When the dtStart and dtEnd attriubtes are defined, the dtStart attribute must precede the dtEnd attribute in time. 
            ">
        <!-- associations -->
        <Array name="aggregations" memberType="Fsgim.Aggregation" documentation="Aggregations for the Interval."/>
        <Array name="attach" memberType="Fsgim.EMIntervalData" documentation="
            Associates a set of EMIntervalData with this IntervalDataContainer.
            (This association redefines the attach association between the IntervalType Class (see Clause 5.7.3.2.7) and the AttachType Class (see Clause 5.7.3.2.4).)  
            "/>
        <Sequence name="localTimeParameters" type="Fsgim.LocalTimeParameters" optional="true" documentation="Defines the local time conversions from a UTC timestamp."/>
    </Sequence>

    <Sequence name="Fsgim.Sequence" extends="Wscal.GluonType" documentation="A sequence is a set of time related ordered intervals.  These can represent a schedule of events or just a set of data related by time. Each interval of a sequence is time referenced to indicate the duration of the interval. The concatenation of these intervals forms a time-series. There is no explicit means to indicate missing interval data within the sequence.  Missing data, for periodic time-series, can be surmised by monitoring the time references.">
        <String name="intervalDuration" type="Fsgim.Duration" optional="true" documentation="
            This attribute specifies the duration of individual intervals in the common case of a sequence of contiguous intervals, all having the same duration. This attribute is derived from the path vavailability.availability.availInterval.duration.
            Constraint:  If the duration of the individual intervals is not the common case of a sequence of contiguous intervals, all having the same duration, then the multiplicity of this attribute shall be 0. 
            "/>
        <String name="name" documentation="Name used to identify the sequence."/>
        <DateTime name="timeOfLastSync" optional="true" documentation="This attribute represents the most recent time that IntervalDataContainer.timeReference was synchronized with the energy provider. Synchronization is sometimes implemented using a demand end-of-interval (EOI) pulse obtained from the meter. To determine the next expected EOI this attribute is summed with the Sequence.intervalDuration attribute."/>
        <!-- associations -->
        <Array name="intervals" memberType="Fsgim.IntervalDataContainer" minimumSize="1" documentation="Time related Intervals that are part of this Sequence."/>
        <Sequence name="localTimeParameters" type="Fsgim.LocalTimeParameters" optional="true" documentation="Defines the local time conversions from a UTC timestamp."/>
        <Sequence name="peakPower" type="Fsgim.PeakPowerData" optional="true" documentation="This association is only applicable to an energy manager that is serving in an ESI EM role.  It identifies information associated with any peaks during the given Sequence."/>
    </Sequence>

    <Sequence name="Fsgim.Aggregation" extends="Fsgim.FSGIMIdentifiedObject" documentation="An aggregation allows the assembly of statistics of interest arrived at through defined algorithms applied to other parts of the model.  The description of an aggregation includes all of the inputs that comprise the algorithms as well as the outputs of the algorithm.  An aggregation instance represents one or more aggregateQuantities that are computed by applying aggregation rules for each quantity against a Collection or FilteredCollection of Components.">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.Measurement" documentation="The resulting measurement quantity values for an Aggregation."/>
        <Sequence name="aggregationRuleset" type="Fsgim.Ruleset" documentation="The rulesest that defines how an AggegateQuantity is derived from a collection."/>
        <Array name="collection" memberType="Fsgim.Collection" documentation="The collection used as a source for deriving aggregate values."/>
    </Sequence>

    <Sequence name="Fsgim.AllResourcesInEMDomain" extends="Fsgim.Collection" documentation="The AllResourcesInEMDomain collection describes the set of all of the loads, generators, meters, and EMs that are directly managed by the energy manager.  Contributions of loads, generators, meters, and EMs that are indirect subordinates of a given energy manager are proxied by the standard aggregations that are contained in the direct subordinate energy managers.">
    </Sequence>

    <Sequence name="Fsgim.Collection" extends="Fsgim.ComponentElement" documentation="This class defines a set of entities that is identified as a group because the members share some trait.  A Collection can contain other Collections.">
        <!-- associations -->
        <Array name="part" memberType="Fsgim.ComponentElement" documentation="The component elements that make up a collection."/>
    </Sequence>

    <Sequence name="Fsgim.FilteredCollection" extends="Fsgim.Collection" documentation="A FilteredCollection &quot;filters&quot; one or more inputCollections according to a set of filteringRules to produce a new instance of a Collection with the subset defined by the Ruleset.">
        <!-- associations -->
        <Sequence name="filteringRuleset" type="Fsgim.Ruleset" documentation="The ruleset that defines how to derive the members of a filtered collection from the members of the input collections."/>
        <Array name="inputCollection" memberType="Fsgim.Collection" minimumSize="1" documentation="The collections from which a filtered collection's members are derived."/>
        <Array name="ruleBasedPart" memberType="Fsgim.ComponentElement" documentation="The parts of a FilteredCollection that are derived from its inputCollections according to the filteringRuleset."/>
    </Sequence>

    <Sequence name="Fsgim.Ruleset" extends="Fsgim.FSGIMIdentifiedObject" documentation="A Ruleset contains a set of ordered rules that defines how the value of an AggregateQuantity is derived or how the members of a FilteredCollection are selected. The text in Ruleset.rules is meant to convey the intent of the set of rules. It is not meant to imply requirements for a parsable Ruleset language. The exact format used for the rules in the Ruleset is a local matter.">
        <Array name="rules" memberType="Fsgim.String" documentation="The rules attribute contains a set of strings that specifies the rules contained in the ruleset.  These rules should be interpreted in the order listed.  In the standards document, the rules are shown in the Ruleset subclass notes."/>
    </Sequence>

    <Sequence name="Fsgim.AdjustedFullDRDemandAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate demand of loads directly or indirectly managed by the associated EM averaged over the identified time interval assuming the largest acceptable response to demand response events occurred.
            For a partially completed (filling) demand interval, this is the expected demand of loads directly or indirectly managed by the associated EM as if the largest acceptable response to a demand response event was in effect, averaged over the time since the beginning of the present demand interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads, with the largest acceptable demand response, directly or indirectly managed by the associated EM averaged over the identified time interval.
            For example, in a production line this could be the demand of the production line when it was providing the largest acceptable demand reduction in response to a DR request. For an HVAC system, this could be the demand that still meets code requirements and acceptable comfort conditions assuming a certain set of weather conditions and occupancy levels.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from an AdjustedFullDRDemandAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.AdjustedFullDRDemandRuleset" documentation="
            The rules that define how an AdjustedFullDRDemandAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the AdjustedFullDRDemandAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.AdjustedFullDRDemandRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “full DR adjusted demand from loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) where Load.demandLimits.adjustedFullDRPower is available, sum Load.demandLimits.adjustedFullDRPower.
            Calculate “full DR adjusted demand from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData.presentAggregateAdjustedFullDRDemand is available, sum the subordinate EMPresentData.presentAggregateAdjustedFullDRDemand.aggregateQuantity.
            Calculate final result:
            •	Sum “full DR adjusted demand from loads” and “full DR adjusted demand from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.AdjustedFullDRSupplyAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval assuming the largest acceptable response to demand response events occurred.
            For a partially completed (filling) demand interval, this is the expected supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM as if the largest acceptable response to a demand response event was in effect, averaged over the time since the beginning of the present demand interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of electrical generators and electrical storage devices, with the largest acceptable demand response, directly or indirectly managed by the associated EM averaged over the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from an AdjustedFullDRSupplyAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.AdjustedFullDRSupplyRuleset" documentation="
            The rules that define how an AdjustedFullDRSupplyAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the AdjustedFullDRSupplyAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.AdjustedFullDRSupplyRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “full DR adjusted supply from generators”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) where Generator.supplyLimits.adjustedFullDRPower is available, sum Generator.supplyLimits.adjustedFullDRPower.
            Calculate “full DR adjusted supply from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData.presentAggregateAdjustedFullDRSupply is available, sum the subordinate EMPresentData.presentAggregateAdjustedFullDRSupply.aggregateQuantity.
            Calculate final result:
            •	Sum “full DR adjusted supply from generators” and “full DR adjusted supply from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.AdjustedNoDRDemandAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate demand of loads directly or indirectly managed by the associated EM averaged over the identified time interval assuming no demand response events occurred.
            For a partially completed (filling) demand interval, this is the expected demand of loads directly or indirectly managed by the associated EM as if no demand response was in effect, averaged over the time since the beginning of the present demand interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads, without demand response, directly or indirectly managed by the associated EM averaged over the identified time interval.
            For example, in a production line this could be the expected average demand of the production line assuming that the production line was operating at a certain capacity.  For an HVAC system, this could be the expected average demand assuming a certain set of weather conditions and occupancy levels.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from an AdjustedNoDRDemandAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.AdjustedNoDRDemandRuleset" documentation="
            The rules that define how an AdjustedNoDRDemandAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the AdjustedNoDRDemandAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.AdjustedNoDRDemandRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “no DR adjusted demand from loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) where Load.demandLimits.adjustedNoDRPower is available, sum Load.demandLimits.adjustedNoDRPower.
            Calculate “no DR adjusted demand from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData.presentAggregateAdjustedNoDRDemand is available, sum the subordinate EMPresentData.presentAggregateAdjustedNoDRDemand.aggregateQuantity.
            Calculate final result:
            •	Sum “no DR adjusted demand from loads” and “no DR adjusted demand from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.AdjustedNoDRSupplyAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval assuming no demand response events occurred.
            For a partially completed (filling) demand interval, this is the expected supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM as if no demand response was in effect, averaged over the time since the beginning of the present demand interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate supply of electrical generators and electrical storage devices, without demand response, directly or indirectly managed by the associated EM averaged over the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from an AdjustedNoDRSupplyAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Array name="aggregationRuleset" memberType="Fsgim.AdjustedNoDRSupplyRuleset" minimumSize="1" documentation="
            The rules that define how an AdjustedNoDRSupplyAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the AdjustedNoDRSupplyAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.AdjustedNoDRSupplyRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate &quot;no DR adjusted supply from generators”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) where Generator.demandLimits.adjustedNoDRPower is available, sum Generator.demandLimits.adjustedNoDRPower.
            Calculate “no DR adjusted supply from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData.presentAggregateAdjustedNoDRSupply is available, sum the subordinate EMPresentData.presentAggregateAdjustedNoDRSupply.aggregateQuantity.
            Calculate final result:
            •	Sum “no DR adjusted supply from generators” and “no DR adjusted supply from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.DemandAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate demand of loads directly or indirectly managed by the associated EM averaged over the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate present subinterval demand of loads directly or indirectly managed by the associated EM.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate demand of loads directly or indirectly managed by the associated EM averaged over the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from a DemandAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.DemandRuleset" documentation="
            The rules that define how a DemandAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the DemandAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.DemandRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered demand”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class where only
            1.	direct subordinate instances of the Load Class (including instances of the CurtailableLoad Class) and/or
            2.	direct subordinate instances of the EM Class where EM.hasElectricalGenerators is False
            are connected to its output ConnectionPoint and where ElectricMeter.powerReading is available, sum ElectricMeter.powerReading.
            Calculate “demand from unmetered loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) that is not included in &quot;metered demand&quot; and where Load.actualDemand is available, sum Load.actualDemand.
            Calculate “demand from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered demand&quot; and where EMPresentData.presentAggregateDemand is available, sum the subordinate EMPresentData.presentAggregateDemand.aggregateQuantity.
            Calculate final result:
            •	Sum “metered demand”, “demand from unmetered loads”, and “demand from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.ElectricalEnergyStoredAggregation" extends="Fsgim.Aggregation" documentation="
            For historical or forecast aggregations, this is the energy stored in electrical storage directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the energy stored in electrical storage directly or indirectly managed by the associated EM since the beginning of the interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EnergyMeasurementsSet" documentation="
            The EnergyMeasureementsSet resulting from an ElectricalEnergyStoredAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.ElectricalEnergyStoredRuleset" documentation="
            The rules that define how an EnergyStoredAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the ElectricalEnergyStoredAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.ElectricalEnergyStoredRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “stored electrical energy from storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) where Generator.storage has the value “electricalStorage” and where Generator.actualStoredEnergy is available, sum Generator.actualStoredEnergy.
            Calculate “stored electrical energy from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData.partialIntervalAggregateElectricalEnergyStored is available, sum the subordinate EMPresentData.partialIntervalAggregateElectricalEnergyStored.aggregateQuantity.
            Calculate final result:
            •	Sum “stored electrical energy from storage devices” and “stored electrical energy from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsGeneratedAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate emissions generated by electrical generators and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate emissions generated by electrical generators and electrical storage devices directly or indirectly managed by the associated EM since the beginning of the interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate emissions generated by electrical generators and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EmissionsMeasurementsSet" documentation="
            The EmissionsMeasurementsSet resulting from an EmissionsGeneratedAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.EmissionsGeneratedRuleset" documentation="
            The rules that define how an EmissionsGeneratedAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the EmissionsGeneratedAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsGenerationRateAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate rate of emissions generated by electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval.
            For a partally completed (filling) emissions interval, this is the aggregate present subinterval rate of emissions generated by electrical generators and electrical storage devices directly or indirectly managed by the associated EM.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate rate of emissions generation of electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the indentified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EmissionsRateMeasurementsSet" documentation="
            The EmissionsRateMeasurementsSet resulting from an EmissionsGenerationRateAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.EmissionsGenerationRateRuleset" documentation="
            The rules that define how an EmissionsGenerationRateAggregation aggregateQuantity is derived from the resources in an EM’s domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the EmissionsGenerationRateAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsGenerationRateRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate &quot;metered emissions rate&quot;:
            •	For each direct subordinate that is an instance of the EmissionsMeter Class where EmissionsMeter.emissionsRateReading is available, sum EmissionsMeter.emissionsRateReading.
            Calculate “emissions rate from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where presentAggregateEmissionsGenerationRate is available, sum the subordinate presentAggregateEmissionsGenerationRate.aggregateQuantity.
            Calculate final result:
            •	Sum “metered emissions rate” and “emissions rate from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsGeneratedRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate &quot;metered emissions&quot;:
            •	For each direct subordinate that is an instance of the EmissionsMeter Class where EmissionsMeter.emissionsReading is available, sum EmissionsMeter.emissionsReading. 
            Calculate “emissions from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where partialIntervalAggregateEmissionsGenerated is available, sum the subordinate partialIntervalAggregateEmissionsGenerated.aggregateQuantity. 
            Calculate final result:
            •	Sum “metered emissions” and “emissions from energy managers.” 
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyConsumedAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate energy consumed by loads directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate energy consumed by loads directly or indirectly managed by the associated EM since the beginning of the interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate energy consumed by loads directly or indirectly managed by the associated EM during the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EnergyMeasurementsSet" documentation="
            The EnergyMeasurementsSet resulting from an EnergyConsumedAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.EnergyConsumedRuleset" documentation="
            The rules that define how an EnergyConsumedAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the EnergyConsumedAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EnergyConsumedRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered consumption”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class where only
            1.	direct subordinate instances of the Load Class (including instances of the CurtailableLoad Class) and/or
            2.	direct subordinate instances of the EM Class where EM.hasElectricalGenerators is False
            are connected to its output ConnectionPoint and where either
            1.	ElectricMeter.intervalEnergyReading or
            2.	the present ElectricMeter.accumulatedEnergyReading and the ElectricMeter.accumulatedEnergyReading at the beginning of the interval
            are available, either sum
            1.	ElectricMeter.intervalEnergyReading or
            2.	(the present ElectricMeter.accumulatedEnergyReading minus the ElectricMeter.accumulatedEnergyReading at the beginning of the interval)
            respectively.
            Calculate “consumption from unmetered loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) that is not included in &quot;metered consumption&quot; and where Load.actualDemand is available, sum (integral of the Load.actualDemand over the time since the beginning of the interval).
            Calculate “consumption from unmetered energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered consumption&quot; and where EMPresentData.partialIntervalAggregateEnergyConsumed is available, sum the subordinate EMPresentData.partialIntervalAggregateEnergyConsumed.aggregateQuantity.
            Calculate final result:
            •	Sum “metered consumption”, “consumption from unmetered loads”, and “consumption from unmetered energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergySuppliedAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate energy supplied by electrical generators and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate energy supplied by electrical generators and electrical storage devices directly or indirectly managed by the associated EM since the beginning of the interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate energy supplied by electrical generators and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EnergyMeasurementsSet" documentation="
            The EnergyMeasurementsSet resulting from an EnergySuppliedAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.EnergySuppliedRuleset" documentation="
            The rules that define how an EnergySuppliedAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the EnergySuppliedAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EnergySuppliedRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered supplied energy”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class where only
            1.	direct subordinate instances of the Generator Class (including instances of the DispatchableGenerator Class) and/or
            2.	direct subordinate instances of the EM Class where EM.hasLoads is False
            are connected to its output ConnectionPoint and where either
            1.	ElectricMeter.intervalEnergyReading or
            2.	the present ElectricMeter.accumulatedEnergyReading and the ElectricMeter.accumulatedEnergyReading at the beginning of the interval
            are available, either sum
            1.	-1*ElectricMeter.intervalEnergyReading or
            2.	-1*(the present ElectricMeter.accumulatedEnergyReading - ElectricMeter.accumulatedEnergyReading at the beginning of the interval)
            respectively.
            Calculate “supplied energy from unmetered generators and electrical storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) that is not included in &quot;metered supplied energy&quot; and where Generator.actualSupply is available, sum (integral of the Generator.actualSupply over the time since the beginning of the interval).
            Calculate “supplied energy from unmetered energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered supplied energy&quot; and where EMPresentData.partialIntervalAggregateEnergySupplied is available, sum the subordinate EMPresentData.partialIntervalAggregateEnergySupplied.aggregateQuantity.
            Calculate final result:
            •	Sum “metered supplied energy”, “supplied energy from unmetered generators and electrical storage devices”, and “supplied energy from unmetered energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.NetDemandAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate net demand of loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate present subinterval net demand of loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate net demand of loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from a NetDemandAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.NetDemandRuleset" documentation="
            The rules that define how a NetDemandAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the NetDemandAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.NetDemandRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered net demand”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class, sum ElectricMeter.powerReadings.
            Calculate “net demand from unmetered loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) that is not included in &quot;metered net demand&quot; and where actualDemand is available, sum actualDemand.
            Calculate “net demand from unmetered generators and electrical storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) that is not included in &quot;metered net demand&quot; and where actualGeneration is available, sum (-1*actualGeneration).
            Calculate “net demand from unmetered energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered net demand&quot; and where presentAggregateNetDemand is available, sum the subordinate presentAggregateNetDemand.aggregateQuantity.
            Calculate final result:
            •	Sum “metered net demand”, “net demand from unmetered loads”, &quot;net demand from unmetered generators and electrical storage devices,&quot; and “net demand from unmetered energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.NetEnergyConsumedAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate net energy consumed by loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate net energy consumed by loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM since the beginning of the interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate net energy consumed by loads, electrical generators, and electrical storage devices directly or indirectly managed by the associated EM during the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EnergyMeasurementsSet" documentation="
            The EnergyMeasurementsSet resulting from a NetEnergyConsumedAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.NetEnergyConsumedRuleset" documentation="
            The rules that define how a NetEnergyConsumedAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the NetEnergyConsumedAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.NetEnergyConsumedRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered net energy consumed”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class, either sum ElectricMeter.intervalEnergyReading or sum (the present ElectricMeter.accumulatedEnergyReading - ElectricMeter.accumulatedEnergyReading at the beginning of the interval).
            Calculate “net energy consumed from unmetered loads”:
            •	For each direct subordinate that is an instance of the Load Class (including instances of the CurtailableLoad Class) that is not included in &quot;metered net energy consumed&quot; and where Load.actualDemand is available, sum (integral of the Load.actualDemand over the time since the beginning of the interval).
            Calculate “net energy consumed from unmetered generators and electrical storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) that is not included in &quot;metered net energy consumed&quot; and where Generator.actualSupply is available, sum (-1*(integral of the Generator.actualSupply over the time since the beginning of the interval)).
            Calculate “net energy consumed from unmetered energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered net energy consumed&quot; and where EMPresentData.partialIntervalAggregateNetEnergyConsumed is available, sum the subordinate EMPresentData.partialIntervalAggregateNetEnergyConsumed.aggregateQuantity.
            Calculate final result:
            •	Sum “metered net energy consumed”, “net energy consumed from unmetered loads”, &quot;net energy consumed from unmetered generators and electrical storage devices,&quot; and “net energy consumed from unmetered energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.SupplyAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate present subinterval supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate supply of electrical generators and electrical storage devices directly or indirectly managed by the associated EM averaged over the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.PowerMeasurementsSet" documentation="
            The PowerMeasurementsSet resulting from a SupplyAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.SupplyRuleset" documentation="
            The rules that define how a SupplyAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the SupplyAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.SupplyRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “metered supply”:
            •	For each direct subordinate that is an instance of the ElectricMeter Class where only
            1.	direct subordinate instances of the Generator Class (including instances of the DispatchableGenerator Class) and/or
            2.	direct subordinate instances of the EM Class where EM.hasLoads is False
            are connected to its outputConnectionPoint and where ElectricMeter.powerReading is available, sum ElectricMeter.powerReading.
            Calculate “supply from unmetered generators and electrical storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) that is not included in &quot;metered supply&quot; and where Generator.actualSupply is available, sum Generator.actualSupply.
            Calculate “supply from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class that is not included in &quot;metered supply&quot; and where EMPresentData.presentAggregateSupply is available, sum the subordinate EMPresentData.presentAggregateSupply.aggregateQuantity.
            Calculate final result:
            •	Sum “metered supply”, “supply from unmetered generators and electrical storage devices”, and “supply from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.ThermalEnergyStoredAggregation" extends="Fsgim.Aggregation" documentation="
            For historical aggregations, this is the aggregate thermal energy stored by thermal storage devices directly or indirectly managed by the associated EM during the identified time interval.
            For a partially completed (filling) demand interval, this is the aggregate thermal energy stored by thermal storage devices directly or indirectly managed by the associated EM since the beginning of the interval.
            The exact manner in which a forecast aggregation is determined is a local matter.  It shall represent the expected aggregate thermal energy stored by thermal storage devices directly or indirectly managed by the associated EM during the identified time interval.
            ">
        <!-- associations -->
        <Sequence name="aggregateQuantity" type="Fsgim.EnergyThermalQuantity" documentation="
            The EnergyThermalQuantityt resulting from a ThermalEnergyStoredAggregation.
            (This association redefines the aggregateQuantity association between the Aggregation Class (see Clause 5.6.7.11.1) and the Measurement Class (see Clause 6.6.4.1).)  
            "/>
        <Sequence name="aggregationRuleset" type="Fsgim.ThermalEnergyStoredRuleset" documentation="
            The rules that define how a ThermalEnergyStoredAggregation aggregateQuantity is derived from the resources in an EM's domain.
            (This association redefines the aggregationRuleset association between the Aggregation Class (see Clause 5.6.7.11.1) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
        <Sequence name="collection" type="Fsgim.AllResourcesInEMDomain" optional="true" documentation="
            The instance of AllResourcesInEMDomain used as a source for deriving the ThermalEnergyStoredAggregation.aggregateQuantity. The multiplicity 0..1 reflects the fact that the associated Collection is required in order to compute the aggregateQuantity, but it is optional as to whether this Collection is retained.
            (This association redefines the collection association between the Aggregation Class (see Clause 5.6.7.11.1) and the Collection Class (see Clause 5.6.7.11.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.ThermalEnergyStoredRuleset" extends="Fsgim.Ruleset" documentation="
            Calculate “stored thermal energy from storage devices”:
            •	For each direct subordinate that is an instance of the Generator Class (including instances of the DispatchableGenerator Class) where Generator.storage has the value “thermalStorage” and where Generator.actualStoredEnergy is available, sum Generator.actualStoredEnergy.
            Calculate “stored thermal energy from energy managers”:
            •	For each direct subordinate that is an instance of the EM Class and where EMPresentData. partialIntervalAggregateThermalEnergyStored is available, sum the subordinate EMPresentData.partialIntervalAggregateThermalEnergyStored.aggregateQuantity.
            Calculate final result:
            •	Sum “stored thermal energy from storage devices” and “stored thermal energy from energy managers.”
            ">
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeather" extends="WXXM-AVWX.AerodromeWx" documentation="This class is a weather feature based on the Weather Exchange Model (WXXM) model (see Model Elements from external Sources).">
        <Sequence name="diffuseIrradiance" type="Fsgim.Irradiance" optional="true" documentation="Solar radiation that has been scattered in passing through the earth’s atmosphere. It is equal to the global irradiance less the direct normal and ground-reflected components."/>
        <Sequence name="directNormalIrradiance" type="Fsgim.Irradiance" optional="true" documentation="Irradiance received from the sun without significant change of direction from the apparent position of the sun."/>
        <Sequence name="globalHorizontalIrradiance" type="Fsgim.Irradiance" optional="true" documentation="The global (or hemispheric) solar radiant energy is the quantity of solar energy incident upon a unit surface area in unit time through a unit hemisphere above the surface, expressed in W/m2)."/>
        <Sequence name="maxTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="Maximum air temperature."/>
        <Sequence name="minTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="Minimum air temperature."/>
        <Sequence name="planeOfArrayIrradiance" type="Fsgim.Irradiance" optional="true" documentation="The hemispheric solar radiant energy incident on a planar surface that is tilted relative to the surface of the earth."/>
        <Sequence name="precipitation" type="WXXM-WX.Precipitation" optional="true" documentation="Describes precipitation."/>
        <DateTime name="sunriseTime" optional="true" documentation="Time of day of sunrise."/>
        <DateTime name="sunsetTime" optional="true" documentation="Time of day of sunset."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherArea" extends="WXXM-AVWX.Aerodrome" documentation="Defines the area of interest for a weather observation or forecast.">
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherForecast" extends="WXXM-WX.Forecast" documentation="The weather forecast of observations at a future time and with a defined confidence and probability.">
        <!-- associations -->
        <Array name="result" memberType="Fsgim.FSGIMWeatherBase" documentation="
            Contents of the Forecast are FSGIMWeather objects.
            (This association redefines the result association between the Observation Class (see Clause 5.7.6.6.5.1.2) and the AbstractObject Class (see Clause 5.7.6.6.3.1.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherObservation" extends="UNK.Observation" documentation="Weather observation. This class comprises the measurements and observed phenomena at a point in time and for a given weather area.">
        <!-- associations -->
        <Sequence name="featureOfInterest" type="Fsgim.FSGIMWeatherArea" documentation="
            Area of interest associated with this Observation.
            (This association redefines the featureOfInterest association between the Observation Class (see Clause 5.7.6.6.5.1.2) and the AbstractFeature Class (see Clause 5.7.6.6.3.1.1).)  
            "/>
        <Array name="result" memberType="Fsgim.FSGIMWeatherBase" documentation="
            Contents of the Observation are FSGIMWeather objects.
            (This association redefines the result association between the Observation Class (see Clause 5.7.6.6.5.1.2) and the AbstractObject Class (see Clause 5.7.6.6.3.1.3).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherReport" extends="WXXM-AVWX.AbstractReport" documentation="A container class for weather observations, forecasts, and trends.">
        <!-- associations -->
        <Sequence name="appliesTo" type="Fsgim.FSGIMWeatherArea" optional="true" documentation="
            The area of interest to which this report applies.
            (This association redefines the appliesTo association between the AbstractReport Class (see Clause 5.7.6.6.1.9.1) and the Aerodrome Class (see Clause 5.7.6.6.1.3.1).)  
            "/>
        <Array name="FSGIMObservation" memberType="Fsgim.FSGIMWeatherObservation" minimumSize="1" documentation="
            Observations that are associated with this report.
            (This association redefines the wxObservation association between the AbstractReport Class (see Clause 5.7.6.6.1.9.1) and the Observation Class (see Clause 5.7.6.6.2.10.1).)  
            "/>
        <Array name="wxForecast" memberType="Fsgim.FSGIMWeatherForecast" documentation="
            Forecasts associated with this report.
            (This association redefines the wxForecast association between the AbstractReport Class (see Clause 5.7.6.6.1.9.1) and the Forecast Class (see Clause 5.7.6.6.2.7.1).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherTrend" extends="WXXM-AVWX.TREND" documentation="A sequence of forecasts of weather in increments of a defined duration such as hourly. ">
        <!-- associations -->
        <Sequence name="appliesTo" type="Fsgim.FSGIMWeatherArea" optional="true" documentation="The area of interest to which this trend applies."/>
        <Array name="forecast" memberType="Fsgim.FSGIMWeatherForecast" documentation="
            Sequence of forecasts for this Trend.
            (This association redefines the forecast association between the TREND Class (see Clause 5.7.6.6.1.9.2) and the Forecast Class (see Clause 5.7.6.6.2.7.1).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.Irradiance" extends="WXXM-WX.AbstractMeasure" documentation="The power of electromagnetic radiation per unit area incident on a surface, measured in W/m2.">
        <!-- associations -->
        <Enumerated name="uom" type="Fsgim.UnitSymbolKind" documentation="
            Unit of measure for irradience.
            (This association redefines the uom association between the AbstractMeasure Class (see Clause 5.7.6.6.2.1.1) and the UnitSymbolKind Enumeration (see Clause 6.6.2.6).)
            Constraint:  must be WPerM2  
            "/>
    </Sequence>

    <Sequence name="Fsgim.RelativeHumidity" extends="WXXM-WX.AbstractMeasure" documentation="The relative humidity, the ratio of the partial pressure of water vapor to the equilibrium vapor pressure at constant temperature.">
        <!-- associations -->
        <Enumerated name="uom" type="Fsgim.UnitSymbolKind" documentation="
            Unit of measure for relative humidity.
            (This association redefines the uom association between the AbstractMeasure Class (see Clause 5.7.6.6.2.1.1) and the UnitSymbolKind Enumeration (see Clause 6.6.2.6).)
            Constraint:  must be none (dimensionless)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWeatherBase" extends="WXXM-WX.AbstractWxFeature" documentation="This class defines the basic weather information including temperature and humidity data.">
        <Sequence name="airPressure" type="WXXM-WX.Pressure" optional="true" documentation="The air pressure."/>
        <Sequence name="airTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="The air temperature."/>
        <Sequence name="dewpointTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="The dew point temperature."/>
        <Sequence name="isDefinedFor" type="WXXM-ISO.AbstractFeature" optional="true" documentation="Provides a means to explicitly link to the corresponding feature."/>
        <Sequence name="maxTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="Maximum air temperature."/>
        <Sequence name="minTemperature" type="WXXM-WX.AirTemperature" optional="true" documentation="Minimum air temperature."/>
        <Sequence name="relativeHumidity" type="Fsgim.RelativeHumidity" optional="true" documentation="The relative humidity as a fraction. This value may be derived from the airTemperature and dewpointTemperature attributes."/>
        <DateTime name="sunriseTime" optional="true" documentation="Time of day of sunrise."/>
        <DateTime name="sunsetTime" optional="true" documentation="Time of day of sunset."/>
        <!-- associations -->
        <Sequence name="precipitation" type="Fsgim.FSGIMPrecipitation" optional="true" documentation="Precipitations measurements."/>
        <Sequence name="solar" type="Fsgim.FSGIMSolar" optional="true" documentation="Solar irradience measurments."/>
        <Sequence name="wind" type="Fsgim.FSGIMWind" optional="true" documentation="Wind measurements"/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMPrecipitation" documentation="This class extends the basic weather data with precipitation data.">
        <Sequence name="Precipitation" type="WXXM-WX.Precipitation" optional="true" documentation="Describes precipitation."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMSolar" documentation="This class extends the basic weather data with solar data.">
        <Sequence name="diffuseIrradiance" type="Fsgim.Irradiance" optional="true" documentation="Solar radiation that has been scattered in passing through the earth’s atmosphere. It is equal to the global irradiance less the direct normal and ground-reflected components. "/>
        <Sequence name="directNormalIrradiance" type="Fsgim.Irradiance" optional="true" documentation="Irradiance received from the sun without significant change of direction from the apparent position of the sun."/>
        <Sequence name="globalHorizontlIrradiance" type="Fsgim.Irradiance" optional="true" documentation="The global (or hemispheric) solar radiant energy is the quantity of solar energy incident upon a unit surface area in unit time through a unit hemisphere above the surface, expressed in W/m2)."/>
        <Sequence name="planeOfArrayIrradiance" type="Fsgim.Irradiance" optional="true" documentation="The hemispheric solar radiant energy incident on a planar surface that is tilted relative to the surface of the earth."/>
    </Sequence>

    <Sequence name="Fsgim.FSGIMWind" documentation="This class extends the basic weather data with wind data.">
        <Sequence name="verticalWindGust" type="WXXM-WX.WindGust" optional="true" documentation="Vertical wind gust."/>
        <Sequence name="windDirection" type="WXXM-WX.WindDirection" optional="true" documentation="Wind direction."/>
        <Sequence name="windGust" type="WXXM-WX.WindGust" optional="true" documentation="Wind gust."/>
        <Sequence name="windSpeed" type="WXXM-WX.WindSpeed" optional="true" documentation="Wind speed."/>
    </Sequence>

    <Sequence name="Fsgim.AggregationProperties" documentation="This class defines a set of attributes that characterize a Circuit with respect to Loads and Generators that are directly connected to it or indirectly connected through other Circuits that contribute to aggregations performed on this Circuit.">
        <Sequence name="circuitOfAggregation" type="Fsgim.Circuit" documentation="The Circuit for which an aggregation is being computed."/>
        <Boolean name="hasElectricalGenerators" documentation="
            This attribute indicates whether (True) or not (False) this Circuit has 
            •	one or more direct subordinate instances of the Generator Class (including instances of the DispatchableGenerator) or  
            •	one or more direct subordinate instances of the EM Class with the “hasElectricalGenerators” attribute for this Circuit set to True.  
            "/>
        <Boolean name="hasLoads" documentation="
            This attribute indicates whether (True) or not (False) this energy manager has 
            •	one or more direct subordinate instances of the Load Class (including instances of the CurtailableLoad Class) or  
            •	one or more direct subordinate instances of the EM Class with the “hasLoads” attribute for this Circuit set to True.  
            "/>
    </Sequence>

    <Sequence name="Fsgim.BidirectionalCombiner" extends="Fsgim.EnergyRouter" documentation="
            This class is used to model bidirectional combiner boxes, which are devices that allow two sources of energy to be connected to one or more loads in a way that allows energy to flow from the onsite generation source to the utility grid but not from the utility grid to the onsite generation source.  The effect of the constraints that are placed on this class results in the following behavior for the bidirectional combiner box:
            •	If the amount of power available from the onsite generation side of the combiner box is less than the amount of power consumed by the equipment connected to load side of the combiner box, then the amount of power drawn from utility grid side of combiner box is the difference between the amount of power drawn from load side of the combiner box and the amount of power injected into the onsite generation side of the combiner box. 
            •	If the amount of power available from the onsite generation side of the combiner box is greater than the amount of power consumed by the equipment connected to load side of the combiner box, then the amount of power sent back to the grid is the amount of power available from the onsite generation side of the combiner box minus the amount of power drawn from load side of the combiner box.
            Constraint:  connection[0] connects to the utility grid side of the electrical system. 
            Constraint:  connection[0].mayBeBidirectional = true 
            Constraint:  connection[0].mayBeDisconnected = false 
            Constraint:  connection[0].mayBeInput = false 
            Constraint:  connection[0].mayBeOutput = false 
            Constraint:  connection[0].presentState = bidirectional 
            Constraint:  connection[1] connects to the onsite generation side of the electrical system. 
            Constraint:  connection[1].mayBeBidirectional = false 
            Constraint:  connection[1].mayBeDisconnected = false 
            Constraint:  connection[1].mayBeInput = true 
            Constraint:  connection[1].mayBeOutput = false 
            Constraint:  connection[2] connects to the load side of the electrical system. 
            Constraint:  connection[2].mayBeBidirectional = false 
            Constraint:  connection[2].mayBeDisconnected = false 
            Constraint:  connection[2].mayBeInput = false 
            Constraint:  connection[2].mayBeOutput = true 
            Constraint:  connection[2].presentState = input 
            Constraint:  connection[2].presentState = output 
            ">
        <!-- associations -->
        <Sequence name="aggregationRuleset" type="Fsgim.BidirectionalCombinerAggregationRuleset" documentation="
            The rulesest that defines how an Aggegation.aggregateQuantity is influenced by an BidirectionalCombiner.
            (This association redefines the aggregationRuleset association between the EnergyRouter Class (see Clause 5.6.7.14.3) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.BidirectionalCombinerAggregationRuleset" extends="Fsgim.Ruleset" documentation="
            •	When calculating an Aggregation on Circuits connected to a BidirectionalCombiner, calculate the Aggregation for the Circuit connected to BidirectionalCombiner.connection[1] and BidirectionalCombiner.connection[2] separately and then:
            1.	take the logical OR of AggregationProperties.hasElectricalGenerators for the Circuit connected to BidirectionalCombiner.connection[1] and AggregationProperties.hasElectricalGenerators for the Circuit connected to BidirectionalCombiner.connection[2];
            2.	take the logical OR of AggregationProperties.hasLoads for the Circuit connected to BidirectionalCombiner.connection[1] and AggregationProperties.hasLoads for the Circuit connected to BidirectionalCombiner.connection[2] and;
            3.	sum the Aggregation.aggregateQuanitity for the Circuit connected to BidirectionalCombiner.connection[1] and the Aggregation.aggregateQuanitity for the Circuit connected to BidirectionalCombiner.connection[2],
            to yield the resulting contributions of the BidirectionalCombiner to the Aggregation for the Circuit connected to BidirectionalCombiner.connection[0].
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyRouter" documentation="
            This class is used to model the various devices that are capable of connecting a load to more than one source of energy.
            Constraint:  The power into an EnergyRouter equals the power out of the EnergyRouter. 
            ">
        <!-- associations -->
        <Sequence name="aggregationRuleset" type="Fsgim.Ruleset" documentation="The rulesest that defines how an Aggegation.aggregateQuantity is influenced by an EnergyRouter"/>
        <Array name="connection" memberType="Fsgim.RouterConnectionPoint" minimumSize="3" maximumSize="3" documentation="The connection points that are a part of this EnergyRouter."/>
    </Sequence>

    <Sequence name="Fsgim.GridTransferSwitch" extends="Fsgim.EnergyRouter" documentation="
            This class is used to model switchgear that are used to allow a load to be switched between two utility feeds without allowing the two utility feeds to be connected together through the switchgear.
            Constraint:  connection[0] connects to the first utility grid side of the electrical system. 
            Constraint:  connection[0].mayBeBidirectional = false 
            Constraint:  connection[0].mayBeDisconnected = true 
            Constraint:  connection[0].mayBeInput = true 
            Constraint:  connection[0].mayBeOutput = false 
            Constraint:  connection[1] connects to the second utility grid side of the electrical system. 
            Constraint:  connection[1].mayBeBidirectional = false 
            Constraint:  connection[1].mayBeDisconnected = true 
            Constraint:  connection[1].mayBeInput = true 
            Constraint:  connection[1].mayBeOutput = false 
            Constraint:  connection[2] connects to the load side of the electrical system. 
            Constraint:  connection[2].mayBeBidirectional = false 
            Constraint:  connection[2].mayBeDisconnected = false 
            Constraint:  connection[2].mayBeInput = false 
            Constraint:  connection[2].mayBeOutput = true 
            Constraint:  connectionl[2].presentState = output 
            Constraint:  If connection[0].presentState is set to input then connection[1].presentState must be disconnected. 
            Constraint:  If connection[1].presentState is set to input then connection[0].presentState must be disconnected. 
            ">
        <!-- associations -->
        <Sequence name="aggregationRuleset" type="Fsgim.GridTransferSwitchAggregationRuleset" documentation="
            The rulesest that defines how an Aggegation.aggregateQuantity is influenced by a GridTransferSwitch.
            (This association redefines the aggregationRuleset association between the EnergyRouter Class (see Clause 5.6.7.14.3) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.GridTransferSwitchAggregationRuleset" extends="Fsgim.Ruleset" documentation="
            •	When calculating an Aggregation on Circuits connected to a GridTransferSwitch, calculate the Aggregation for the Circuit connected to GridTransferSwitch.connection[2].      
            •	If GridTransferSwitch.connection[0].presentState has a value of &quot;input,&quot; report:  
            1.	the Aggregation.aggregateQuantity for the Circuit connected to GridTransferSwitch.connection[2] as the contribution of the GridTransferSwitch to the Aggregation for the Circuit connected to GridTransferSwitch.connection[0], and with  
            2.	the AggregationProperties.hasElectricalGenerators, and the AggregationProperties.hasLoads for the Circuit connected to GridTransferSwitch.connection[2] as the contribution of the GridTransferSwitch to the AggregationProperties for the Circuit connected to GridTransferSwitch.connection[0].   
            •	If GridTransferSwitch.connection[0].presentState has a value of &quot;disconnected,&quot; report:  
            1.	the results of the Aggregation for the Circuit connected to GridTransferSwitch.connection[2] with all associated MeasurementQuantity.values, including those indirectly associated as part of a MeasurementSet, set to 0 and all associated MeasurementQuantity.uncertainty values, including those indirectly associated as part of a MeasurementSet, set to 0, as the contribution of the GridTransferSwitch to the Aggregation for the Circuit connected to GridTransferSwitch.connection[0], and with  
            2.	AggregationProperties.hasElectricalGenerators set to False and AggregationProperties.hasLoads set to False as the contribution of the GridTransferSwitch to the AggregationProperties for the Circuit connected to GridTransferSwitch.connection[0].  
            •	If GridTransferSwitch.connection[1].presentState has a value of &quot;input,&quot; report:  
            1.	the Aggregation.aggregateQuantity for the Circuit connected to GridTransferSwitch.connection[2] as the contribution of the GridTransferSwitch to the Aggregation for the Circuit connected to GridTransferSwitch.connection[1], and with   
            2.	the AggregationProperties.hasElectricalGenerators, and the AggregationProperties.hasLoads for the Circuit connected to GridTransferSwitch.connection[2] as the contribution of the GridTransferSwitch to the AggregationProperties for the Circuit connected to GridTransferSwitch.connection[1].  
            •	If GridTransferSwitch.connection[1].presentState has a value of &quot;disconnected,&quot; report:  
            1.	the results of the Aggregation for the Circuit connected to GridTransferSwitch.connection[2] with all associated MeasurementQuantity.values, including those indirectly associated as part of a MeasurementSet, set to 0 and all associated MeasurementQuantity.uncertainty values, including those indirectly associated as part of a MeasurementSet, set to 0 as the contribution of the GridTransferSwitch to the Aggregation for the Circuit connected to GridTransferSwitch.connection[1], and with  
            2.	AggregationProperties.hasElectricalGenerators set to False, and AggregationProperties.hasLoads set to False as the contribution of the GridTransferSwitch to the AggregationProperties for the Circuit connected to GridTransferSwitch.connection[1].
            ">
    </Sequence>

    <Sequence name="Fsgim.RouterConnectionPoint" extends="Fsgim.ConnectionPoint" documentation="This class is used to model the input/output characteristics of connections from an EnergyRouter to a source or sink of energy.">
        <Boolean name="mayBeInput" documentation="This RouterConnectionPoint may be used as a connection that allows energy to flow into, but not out of, the EnergyRouter."/>
        <Boolean name="mayBeOutput" documentation="This RouterConnectionPoint may be used as a connection that allows energy to flow out of, but not into, the EnergyRouter."/>
        <Boolean name="mayBeBidirectional" documentation="This RouterConnectionPoint may be used as a connection that allows energy to flow into and out of the EnergyRouter."/>
        <Boolean name="mayBeDisconnected" documentation="This RouterConnectionPoint may be used as a connection that may be disconnected from the EnergyRouter."/>
        <Enumerated name="presentState" type="Fsgim.ConnectionPointState" documentation="The present state of this RouterConnectionPoint .  The allowable states for this particular RouterConnectionPoint are determined by the boolean attributes of this class."/>
    </Sequence>

    <Sequence name="Fsgim.TransferSwitch" extends="Fsgim.EnergyRouter" documentation="
            This class is used to model transfer switches, which are devices that allow a load or set of loads to be switched between two power sources without allowing the two power sources to be connected together.
            Constraint:  connection[0] connects to the utility grid side of the electrical system. 
            Constraint:  connection[0].mayBeBidirectional = false 
            Constraint:  connection[0].mayBeDisconnected = true 
            Constraint:  connection[0].mayBeInput = true 
            Constraint:  connection[0].mayBeOutput = false 
            Constraint:  connection[1] connects to the onsite generation side of the electrical system. 
            Constraint:  connection[1].mayBeBidirectional = false 
            Constraint:  connection[1].mayBeDisconnected = true 
            Constraint:  connection[1].mayBeInput = true 
            Constraint:  connection[1].mayBeOutput = false 
            Constraint:  connection[2] connects to the load side of the electrical system. 
            Constraint:  connection[2].mayBeBidirectional = false 
            Constraint:  connection[2].mayBeDisconnected = false 
            Constraint:  connection[2].mayBeInput = false 
            Constraint:  connection[2].mayBeOutput = true 
            Constraint:  connectionl[2].presentState = output 
            Constraint:  If connection[0].presentState is set to input then connection[1].presentState must be disconnected. 
            Constraint:  If connection[1].presentState is set to input then connection[0].presentState must be disconnected. 
            ">
        <!-- associations -->
        <Sequence name="aggregationRuleset" type="Fsgim.TransferSwitchAggregationRuleset" documentation="
            The rulesest that defines how an Aggegation.aggregateQuantity is influenced by a TransferSwitch.
            (This association redefines the aggregationRuleset association between the EnergyRouter Class (see Clause 5.6.7.14.3) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.TransferSwitchAggregationRuleset" extends="Fsgim.Ruleset" documentation="
            •	When calculating an Aggregation on Circuits connected to a TransferSwitch, calculate the Aggregation for the Circuit connected to TransferSwitch.connection[1] and TransferSwitch.connection[2] separately and then execute the following steps:     
            1.	Set AggregationProperties.hasLoads for the Circuit connected to TransferSwitch.connection[0] = True;   
            2.	Set AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[0] = False;   
            3.	If TransferSwitch.connection[0].presentState is “input” and AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[2] is True, set AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[0] to True;  
            4.	If TransferSwitch.connection[1].presentState is “input” and AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[1] is True, set AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[0] to True, and;  
            5.	If AggregationProperties.hasLoads for the Circuit connected to TransferSwitch.connection[1] is True and AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[1] is True, set AggregationProperties.hasElectricalGenerators for the Circuit connected to TransferSwitch.connection[0] to True.  
            •	Use the resulting aggregateQuantity, hasLoads flag, and hasElectricalGenerators flag for the resulting contributions of the TransferSwitch to the Aggregation and AggregationProperties for the Circuit connected to TransferSwitch.connection[0].  
            ">
    </Sequence>

    <Sequence name="Fsgim.UnidirectionalCombiner" extends="Fsgim.EnergyRouter" documentation="
            This class is used to model unidirectional combiner boxes, which are devices that allow two sources of energy to be connected to one or more loads in a way that does not allow energy to flow from one source to another.  The effect of the constraints that are placed on this class results in the following behavior for the unidirectional combiner box:
            •	If the amount of power available from the onsite generation side of the combiner box is less than the amount of power consumed by the equipment connected to load side of the combiner box, then the amount of power drawn from utility grid side of the combiner box  is the difference between the amount of power drawn from load side of the combiner box and the amount of power injected into the onsite generation side of the combiner box. 
            •	If the amount of power available from the onsite generation side of the combiner box is greater than the amount of power consumed by the equipment connected to load side of the combiner box , then the amount of power drawn from utility grid side of the combiner box is zero and the amount of power actually injected into the onsite generation side of the combiner box  is equal to the amount of power drawn from load side of the combiner box.
            Constraint:  connection[0] connects to the utility grid side of the electrical system. 
            Constraint:  connection[0].mayBeBidirectional = false 
            Constraint:  connection[0].mayBeDisconnected = false 
            Constraint:  connection[0].mayBeInput = true 
            Constraint:  connection[0].mayBeOutput = false 
            Constraint:  connection[0].presentState = input 
            Constraint:  connection[1] connects to the onsite generation side of the electrical system. 
            Constraint:  connection[1].mayBeBidirectional = false 
            Constraint:  connection[1].mayBeDisconnected = false 
            Constraint:  connection[1].mayBeInput = true 
            Constraint:  connection[1].mayBeOutput = false 
            Constraint:  connection[1].presentState = input 
            Constraint:  connection[2] connects to the load side of the electrical system. 
            Constraint:  connection[2].mayBeBidirectional = false 
            Constraint:  connection[2].mayBeDisconnected = false 
            Constraint:  connection[2].mayBeInput = false 
            Constraint:  connection[2].mayBeOutput = true 
            Constraint:  connection[2].presentState = output 
            ">
        <!-- associations -->
        <Sequence name="aggregationRuleset" type="Fsgim.UnidirectionalCombinerAggregationRuleset" documentation="
            The rulesest that defines how an Aggegation.aggregateQuantity is influenced by a UnidirectionalCombiner.
            (This association redefines the aggregationRuleset association between the EnergyRouter Class (see Clause 5.6.7.14.3) and the Ruleset Class (see Clause 5.6.7.11.5).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.UnidirectionalCombinerAggregationRuleset" extends="Fsgim.Ruleset" documentation="
            •	When calculating an Aggregation on Circuits connected to a UnidirectionalCombiner, calculate the Aggregation for the Circuit connected to UnidirectionalCombiner.connection[1] and UnidirectionalCombiner.connection[2] separately and then: 
            1.	take the logical OR of AggregationProperties.hasElectricalGenerators for the Circuit connected to UnidirectionalCombiner.connection[1] and AggregationProperties.hasElectricalGenerators for the Circuit connected to UnidirectionalCombiner.connection[2]; 
            2.	take the logical OR of AggregationProperties.hasLoads for the Circuit connected to UnidirectionalCombiner.connection[1] and AggregationProperties.hasLoads for the Circuit connected to UnidirectionalCombiner.connection[2] and; 
            3.	sum the Aggregation.aggregateQuanitity for the Circuit connected to UnidirectionalCombiner.connection[1] and the Aggregation.aggregateQuanitity for the Circuit connected to UnidirectionalCombiner.connection[2], 
            to yield the resulting contributions of the UnidirectionalCombiner to the Aggregation for the Circuit connected to UnidirectionalCombiner.connection[0].
            ">
    </Sequence>

    <Enumerated name="Fsgim.ConnectionPointState" documentation="This enumeration is used to specify the present configuration of a ConnectionPoint.">
        <NamedValues>
            <Unsigned name="input" value="1" documentation="This RouterConnectionPoint is currently configured as an input which allows energy to flow into, but not out of, the EnergyRouter."/>
            <Unsigned name="output" value="2" documentation="This RouterConnectionPoint is currently configured as an input which allows energy to flow out of, but not into, the EnergyRouter."/>
            <Unsigned name="bidirectional" value="3" documentation="This RouterConnectionPoint is currently configured as an input which allows energy to flow into and out of the EnergyRouter."/>
            <Unsigned name="disconnected" value="4" documentation="This RouterConnectionPoint is currently disconnected from the EnergyRouter."/>
        </NamedValues>
    </Enumerated>

    <Sequence name="Fsgim.DateTimeInterval" documentation="An abstract class representing an interval of date and time.">
    </Sequence>

    <Sequence name="Fsgim.DstTransitionRule" documentation="Rules for DST transition.">
        <Enumerated name="month" type="Fsgim.MonthType" documentation="Month at which DST transition occurs 1-12."/>
        <Enumerated name="rule" type="Fsgim.DstRule" documentation="Rule by which DST transition is determined."/>
        <Integer name="dayofmonth" documentation="Day of the month 0 = not applicable, 1 - 31"/>
        <Enumerated name="dow" type="Fsgim.WeekdayType" documentation="Day of week at which DST transition occurs: 0 = not applicable, 1 - 7 (Monday = 1)."/>
        <Integer name="hours" documentation="Hour at which DST transition occurs 0-23."/>
        <Integer name="seconds" documentation="Seconds at which transition occurs 0-3599."/>
    </Sequence>

    <Sequence name="Fsgim.LocalDateTimeInterval" extends="Fsgim.DateTimeInterval" documentation="An interval of date and time where the start and end times are expressed in local time.">
        <String name="duration" type="Fsgim.Duration" optional="true" documentation="The length of time for this interval. If duration is specified, it must be greater than zero."/>
        <DateTime name="end" type="Fsgim.LocalDateTime" optional="true" documentation="The date and time at which this interval terminates."/>
        <DateTime name="start" type="Fsgim.LocalDateTime" optional="true" documentation="The date and time at which this interval begins."/>
    </Sequence>

    <Sequence name="Fsgim.UTCDateTimeInterval" extends="Fsgim.DateTimeInterval" documentation="
            Interval of date and time.
            Constraint:  An interval planned for the future need only have those attributes that have been determined. For example one might know the duration of a future production run as well as projected characteristics of its energy use, but not have yet scheduled it precisel 
            Constraint:  At least one at at most two of the attributes start, end, and duration must be specified. 
            Constraint:  When the start and end attriubtes are defined, the start attribute must precede the end attribute in time. 
            ">
        <DateTime name="start" optional="true" documentation="Date and time that this interval started."/>
        <DateTime name="end" optional="true" documentation="Date and time that this interval ended."/>
        <String name="duration" type="Fsgim.Duration" optional="true" documentation="
            The duration of this interval, in seconds
            Constraint:  If duration is specified, it must be greater than zero. 
            "/>
    </Sequence>

    <Sequence name="Fsgim.LocalTimeParameters" documentation="Contains attributes related to the configuration of the time service.">
        <Sequence name="dstEndRule" type="Fsgim.DstTransitionRule" documentation="Rule to calculate end of daylight savings time in the current year.  "/>
        <Integer name="dstOffset" documentation="Daylight savings time offset from local standard time in seconds."/>
        <Sequence name="dstStartRule" type="Fsgim.DstTransitionRule" documentation="Rule to calculate start of daylight savings time in the current year."/>
        <Integer name="tzOffset" documentation="Local time zone offset from UTCTime in seconds. Does not include any daylight savings time offsets."/>
        <String name="tzid" optional="true" documentation="Time Zone Database ID as per IANA &lt;a href=&quot;$inet://https://www.iana.org/time-zones&quot;>https://www.iana.org/time-zones&lt;/a>. This optional attribute can be used to retrieve the IANA database and construct the values for the other attributes of this class."/>
    </Sequence>

    <Enumerated name="Fsgim.DstRule" documentation="Enumeration of the rules for Daylight Savings Time transitions.">
        <NamedValues>
            <Unsigned name="dayOfMonth" value="1" documentation="DST starts/ends on this day of the month."/>
            <Unsigned name="onOrAfter" value="2" documentation="DST starts/ends on the Day of the Week that is on or after the Day of the Month"/>
            <Unsigned name="firstOccurance" value="3" documentation="DST starts/ends on the first occurrence of the Day of the Week in a month"/>
            <Unsigned name="secondOccurence" value="4" documentation="DST starts/ends on the second occurrence of the Day of the Week in a month."/>
            <Unsigned name="thirdOccurence" value="5" documentation="DST starts/ends on the third occurrence of the Day of the Week in a month."/>
            <Unsigned name="fourthOccurrence" value="6" documentation="DST starts/ends on the forth occurrence of the Day of the Week in a month."/>
            <Unsigned name="fifthOccurrence" value="7" documentation="DST starts/ends on the fifth occurrence of the Day of the Week in a month."/>
            <Unsigned name="last" value="8" documentation="DST starts/ends on the last occurrence of the Day of the Week in a month."/>
        </NamedValues>
    </Enumerated>

    <DateTime name="Fsgim.DateTime" documentation="An abstract primitive datatype representing a date and time.">
    </DateTime>

    <Date name="Fsgim.Date" documentation="This represents a local date without a time.">
    </Date>

    <String name="Fsgim.Duration" documentation="This primitive data type represents a length of time.">
    </String>

    <DateTime name="Fsgim.LocalDateTime" extends="Fsgim.DateTime" documentation="This primitive datatype allows the specification of a date with time of day in the local time of the location to which it pertains.">
    </DateTime>

    <DateTime name="Fsgim.UTCDateTime" extends="Fsgim.DateTime" documentation="This primitive datatype represents a specific UTC time on a specific UTC date consistent with the time, date, and UTC concepts described in ISO 8601.">
    </DateTime>

    <Enumerated name="Fsgim.CurrencyKind" documentation="Currency is represented in FSGIM as an enumeration. The use of this is optional so it can be omitted when an actual currency is not known. The enumeration is based on ISO 4217 three character codes and the FSIM model contains a snapshot of this list. Any implementation can extend this list as needed but must unambiguously identify how extensions are separate from the ISO standard set.">
        <NamedValues>
            <Unsigned name="AED" value="1" documentation="United Arab Emirates dirham"/>
            <Unsigned name="AFN" value="2" documentation="Afghan afghani"/>
            <Unsigned name="ALL" value="3" documentation="Albanian lek"/>
            <Unsigned name="AMD" value="4" documentation="Armenian dram"/>
            <Unsigned name="ANG" value="5" documentation="Netherlands Antillean guilder"/>
            <Unsigned name="AOA" value="6" documentation="Angolan kwanza"/>
            <Unsigned name="ARS" value="7" documentation="Argentine peso"/>
            <Unsigned name="AUD" value="8" documentation="Australian dollar"/>
            <Unsigned name="AWG" value="9" documentation="Aruban florin"/>
            <Unsigned name="AZN" value="10" documentation="Azerbaijani manat"/>
            <Unsigned name="BAM" value="11" documentation="Bosnia and Herzegovina convertible mark"/>
            <Unsigned name="BBD" value="12" documentation="Barbados dollar"/>
            <Unsigned name="BDT" value="13" documentation="Bangladeshi taka"/>
            <Unsigned name="BGN" value="14" documentation="Bulgarian lev"/>
            <Unsigned name="BHD" value="15" documentation="Bahraini dinar"/>
            <Unsigned name="BIF" value="16" documentation="Burundian franc"/>
            <Unsigned name="BMD" value="17" documentation="Bermudian dollar (customarily known as Bermuda dollar)"/>
            <Unsigned name="BND" value="18" documentation="Brunei dollar"/>
            <Unsigned name="BOB" value="19" documentation="Boliviano"/>
            <Unsigned name="BOV" value="20" documentation="Bolivian Mvdol (funds code)"/>
            <Unsigned name="BRL" value="21" documentation="Brazilian real"/>
            <Unsigned name="BSD" value="22" documentation="Bahamian dollar"/>
            <Unsigned name="BTN" value="23" documentation="Bhutanese ngultrum"/>
            <Unsigned name="BWP" value="24" documentation="Botswana pula"/>
            <Unsigned name="BYR" value="25" documentation="Belarusian ruble"/>
            <Unsigned name="BZD" value="26" documentation="Belize dollar"/>
            <Unsigned name="CAD" value="27" documentation="Canadian dollar"/>
            <Unsigned name="CDF" value="28" documentation="Congolese franc"/>
            <Unsigned name="CHF" value="29" documentation="Swiss franc"/>
            <Unsigned name="CLF" value="30" documentation="Unidad de Fomento (funds code), Chile"/>
            <Unsigned name="CLP" value="31" documentation="Chilean peso"/>
            <Unsigned name="CNY" value="32" documentation="Chinese yuan"/>
            <Unsigned name="COP" value="33" documentation="Colombian peso"/>
            <Unsigned name="COU" value="34" documentation="Unidad de Valor Real"/>
            <Unsigned name="CRC" value="35" documentation="Costa Rican colon"/>
            <Unsigned name="CUC" value="36" documentation="Cuban convertible peso"/>
            <Unsigned name="CUP" value="37" documentation="Cuban peso"/>
            <Unsigned name="CVE" value="38" documentation="Cape Verde escudo"/>
            <Unsigned name="CZK" value="39" documentation="Czech koruna"/>
            <Unsigned name="DJF" value="40" documentation="Djiboutian franc"/>
            <Unsigned name="DKK" value="41" documentation="Danish krone"/>
            <Unsigned name="DOP" value="42" documentation="Dominican peso"/>
            <Unsigned name="DZD" value="43" documentation="Algerian dinar"/>
            <Unsigned name="EEK" value="44" documentation="Estonian kroon"/>
            <Unsigned name="EGP" value="45" documentation="Egyptian pound"/>
            <Unsigned name="ERN" value="46" documentation="Eritrean nakfa"/>
            <Unsigned name="ETB" value="47" documentation="Ethiopian birr"/>
            <Unsigned name="EUR" value="48" documentation="Euro"/>
            <Unsigned name="FJD" value="49" documentation="Fiji dollar"/>
            <Unsigned name="FKP" value="50" documentation="Falkland Islands pound"/>
            <Unsigned name="GBP" value="51" documentation="Pound sterling"/>
            <Unsigned name="GEL" value="52" documentation="Georgian lari"/>
            <Unsigned name="GHS" value="53" documentation="Ghanaian cedi"/>
            <Unsigned name="GIP" value="54" documentation="Gibraltar pound"/>
            <Unsigned name="GMD" value="55" documentation="Gambian dalasi"/>
            <Unsigned name="GNF" value="56" documentation="Guinean franc"/>
            <Unsigned name="GTQ" value="57" documentation="Guatemalan quetzal"/>
            <Unsigned name="GYD" value="58" documentation="Guyanese dollar"/>
            <Unsigned name="HKD" value="59" documentation="Hong Kong dollar"/>
            <Unsigned name="HNL" value="60" documentation="Honduran lempira"/>
            <Unsigned name="HRK" value="61" documentation="Croatian kuna"/>
            <Unsigned name="HTG" value="62" documentation="Haitian gourde"/>
            <Unsigned name="HUF" value="63" documentation="Hungarian forint"/>
            <Unsigned name="IDR" value="64" documentation="Indonesian rupiah"/>
            <Unsigned name="ILS" value="65" documentation="Israeli new sheqel"/>
            <Unsigned name="INR" value="66" documentation="Indian rupee"/>
            <Unsigned name="IQD" value="67" documentation="Iraqi dinar"/>
            <Unsigned name="IRR" value="68" documentation="Iranian rial"/>
            <Unsigned name="ISK" value="69" documentation="Icelandic króna"/>
            <Unsigned name="JMD" value="70" documentation="Jamaican dollar"/>
            <Unsigned name="JOD" value="71" documentation="Jordanian dinar"/>
            <Unsigned name="JPY" value="72" documentation="Japanese yen"/>
            <Unsigned name="KES" value="73" documentation="Kenyan shilling"/>
            <Unsigned name="KGS" value="74" documentation="Kyrgyzstani som"/>
            <Unsigned name="KHR" value="75" documentation="Cambodian riel"/>
            <Unsigned name="KMF" value="76" documentation="Comoro franc"/>
            <Unsigned name="KPW" value="77" documentation="North Korean won"/>
            <Unsigned name="KRW" value="78" documentation="South Korean won"/>
            <Unsigned name="KWD" value="79" documentation="Kuwaiti dinar"/>
            <Unsigned name="KYD" value="80" documentation="Cayman Islands dollar"/>
            <Unsigned name="KZT" value="81" documentation="Kazakhstani tenge"/>
            <Unsigned name="LAK" value="82" documentation="Lao kip"/>
            <Unsigned name="LBP" value="83" documentation="Lebanese pound"/>
            <Unsigned name="LKR" value="84" documentation="Sri Lanka rupee"/>
            <Unsigned name="LRD" value="85" documentation="Liberian dollar"/>
            <Unsigned name="LSL" value="86" documentation="Lesotho loti"/>
            <Unsigned name="LTL" value="87" documentation="Lithuanian litas"/>
            <Unsigned name="LVL" value="88" documentation="Latvian lats"/>
            <Unsigned name="LYD" value="89" documentation="Libyan dinar"/>
            <Unsigned name="MAD" value="90" documentation="Moroccan dirham"/>
            <Unsigned name="MDL" value="91" documentation="Moldovan leu"/>
            <Unsigned name="MGA" value="92" documentation="Malagasy ariary"/>
            <Unsigned name="MKD" value="93" documentation="Macedonian denar"/>
            <Unsigned name="MMK" value="94" documentation="Myanma kyat"/>
            <Unsigned name="MNT" value="95" documentation="Mongolian tugrik"/>
            <Unsigned name="MOP" value="96" documentation="Macanese pataca"/>
            <Unsigned name="MRO" value="97" documentation="Mauritanian ouguiya"/>
            <Unsigned name="MUR" value="98" documentation="Mauritian rupee"/>
            <Unsigned name="MVR" value="99" documentation="Maldivian rufiyaa"/>
            <Unsigned name="MWK" value="100" documentation="Malawian kwacha"/>
            <Unsigned name="MXN" value="101" documentation="Mexican peso"/>
            <Unsigned name="MYR" value="102" documentation="Malaysian ringgit"/>
            <Unsigned name="MZN" value="103" documentation="Mozambican metical"/>
            <Unsigned name="NAD" value="104" documentation="Namibian dollar"/>
            <Unsigned name="NGN" value="105" documentation="Nigerian naira"/>
            <Unsigned name="NIO" value="106" documentation="Cordoba oro"/>
            <Unsigned name="NOK" value="107" documentation="Norwegian krone"/>
            <Unsigned name="NPR" value="108" documentation="Nepalese rupee"/>
            <Unsigned name="NZD" value="109" documentation="New Zealand dollar"/>
            <Unsigned name="OMR" value="110" documentation="Omani rial"/>
            <Unsigned name="PAB" value="111" documentation="Panamanian balboa"/>
            <Unsigned name="PEN" value="112" documentation="Peruvian nuevo sol"/>
            <Unsigned name="PGK" value="113" documentation="Papua New Guinean kina"/>
            <Unsigned name="PHP" value="114" documentation="Philippine peso"/>
            <Unsigned name="PKR" value="115" documentation="Pakistani rupee"/>
            <Unsigned name="PLN" value="116" documentation="Polish zloty"/>
            <Unsigned name="PYG" value="117" documentation="Paraguayan guaraní"/>
            <Unsigned name="QAR" value="118" documentation="Qatari rial"/>
            <Unsigned name="RON" value="119" documentation="Romanian new leu"/>
            <Unsigned name="RSD" value="120" documentation="Serbian dinar"/>
            <Unsigned name="RUB" value="121" documentation="Russian rouble"/>
            <Unsigned name="RWF" value="122" documentation="Rwandan franc"/>
            <Unsigned name="SAR" value="123" documentation="Saudi riyal"/>
            <Unsigned name="SBD" value="124" documentation="Solomon Islands dollar"/>
            <Unsigned name="SCR" value="125" documentation="Seychelles rupee"/>
            <Unsigned name="SDG" value="126" documentation="Sudanese pound"/>
            <Unsigned name="SEK" value="127" documentation="Swedish krona/kronor"/>
            <Unsigned name="SGD" value="128" documentation="Singapore dollar"/>
            <Unsigned name="SHP" value="129" documentation="Saint Helena pound"/>
            <Unsigned name="SLL" value="130" documentation="Sierra Leonean leone"/>
            <Unsigned name="SOS" value="131" documentation="Somali shilling"/>
            <Unsigned name="SRD" value="132" documentation="Surinamese dollar"/>
            <Unsigned name="STD" value="133" documentation="São Tomé and Príncipe dobra"/>
            <Unsigned name="SYP" value="134" documentation="Syrian pound"/>
            <Unsigned name="SZL" value="135" documentation="Lilangeni"/>
            <Unsigned name="THB" value="136" documentation="Thai baht"/>
            <Unsigned name="TJS" value="137" documentation="Tajikistani somoni"/>
            <Unsigned name="TMT" value="138" documentation="Turkmenistani manat"/>
            <Unsigned name="TND" value="139" documentation="Tunisian dinar"/>
            <Unsigned name="TOP" value="140" documentation="Tongan pa?anga"/>
            <Unsigned name="TRY" value="141" documentation="Turkish lira"/>
            <Unsigned name="TTD" value="142" documentation="Trinidad and Tobago dollar"/>
            <Unsigned name="TWD" value="143" documentation="New Taiwan dollar"/>
            <Unsigned name="TZS" value="144" documentation="Tanzanian shilling"/>
            <Unsigned name="UAH" value="145" documentation="Ukrainian hryvnia"/>
            <Unsigned name="UGX" value="146" documentation="Ugandan shilling"/>
            <Unsigned name="USD" value="147" documentation="United States dollar"/>
            <Unsigned name="UYU" value="148" documentation="Uruguayan peso"/>
            <Unsigned name="UZS" value="149" documentation="Uzbekistan som"/>
            <Unsigned name="VEF" value="150" documentation="Venezuelan bolívar fuerte"/>
            <Unsigned name="VND" value="151" documentation="Vietnamese d?ng"/>
            <Unsigned name="VUV" value="152" documentation="Vanuatu vatu"/>
            <Unsigned name="WST" value="153" documentation="Samoan tala"/>
            <Unsigned name="XAF" value="154" documentation="CFA franc BEAC"/>
            <Unsigned name="XCD" value="155" documentation="East Caribbean dollar"/>
            <Unsigned name="XOF" value="156" documentation="CFA Franc BCEAO"/>
            <Unsigned name="XPF" value="157" documentation="CFP franc"/>
            <Unsigned name="YER" value="158" documentation="Yemeni rial"/>
            <Unsigned name="ZAR" value="159" documentation="South African rand"/>
            <Unsigned name="ZMK" value="160" documentation="Zambian kwacha"/>
            <Unsigned name="ZWL" value="161" documentation="Zimbabwe dollar"/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.MonthType" documentation="An enumerated list of months of the year.">
        <NamedValues>
            <Unsigned name="january" value="1" documentation="January"/>
            <Unsigned name="february" value="2" documentation="February"/>
            <Unsigned name="martch" value="3" documentation="March"/>
            <Unsigned name="april" value="4" documentation="April"/>
            <Unsigned name="may" value="5" documentation="May"/>
            <Unsigned name="june" value="6" documentation="June"/>
            <Unsigned name="july" value="7" documentation="July"/>
            <Unsigned name="august" value="8" documentation="August"/>
            <Unsigned name="september" value="9" documentation="September"/>
            <Unsigned name="october" value="10" documentation="October"/>
            <Unsigned name="november" value="11" documentation="November"/>
            <Unsigned name="december" value="12" documentation="December"/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.SiScaleCodeType" documentation="
            Unit multiplier, where the initial value of literal equals the exponent of the multiplier value in base 10.  Only the value &quot;none&quot; is normative to the FSGIM.
            Note: A value that is representing a percentage can use the UnitSymbolKind of 1 (none) and an SiScaleCodeType of -2 (centi).
            ">
        <NamedValues>
            <Unsigned name="y" value="1" documentation="yocto (10-24)"/>
            <Unsigned name="z" value="2" documentation="zepto (10-21)"/>
            <Unsigned name="a" value="3" documentation="atto (10-18)"/>
            <Unsigned name="f" value="4" documentation="femto (10-15)"/>
            <Unsigned name="p" value="5" documentation="pico (10-12)"/>
            <Unsigned name="n" value="6" documentation="nano (10-9)"/>
            <Unsigned name="micro" value="7" documentation="micro (10-6)"/>
            <Unsigned name="m" value="8" documentation="milli (10-3)"/>
            <Unsigned name="c" value="9" documentation="centi (10-2)"/>
            <Unsigned name="d" value="10" documentation="deci (10-1)"/>
            <Unsigned name="none" value="11" documentation="1 (100)"/>
            <Unsigned name="da" value="12" documentation="deca (101)"/>
            <Unsigned name="h" value="13" documentation="hecto (102)"/>
            <Unsigned name="k" value="14" documentation="kilo (103)"/>
            <Unsigned name="M" value="15" documentation="mega (106)"/>
            <Unsigned name="G" value="16" documentation="giga (109)"/>
            <Unsigned name="T" value="17" documentation="tera (1012)"/>
            <Unsigned name="P" value="18" documentation="petra (1015)"/>
            <Unsigned name="E" value="19" documentation="exa (1018)"/>
            <Unsigned name="Z" value="20" documentation="zetta (1021)"/>
            <Unsigned name="Y" value="21" documentation="yotta (1024)"/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.WeekdayType" documentation="An enumerated list of day of the week.">
        <NamedValues>
            <Unsigned name="sunday" value="1" documentation="Sunday"/>
            <Unsigned name="monday" value="2" documentation="Monday"/>
            <Unsigned name="tuesday" value="3" documentation="Tuesday"/>
            <Unsigned name="wednesday" value="4" documentation="Wednesday"/>
            <Unsigned name="thursday" value="5" documentation="Thursday"/>
            <Unsigned name="friday" value="6" documentation="Friday"/>
            <Unsigned name="saturday" value="7" documentation="Saturday"/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.QualityOfReading" documentation="List of codes indicating the quality of the reading.">
        <NamedValues>
            <Unsigned name="estimated" value="1" documentation="The quality is estimated."/>
            <Unsigned name="forecast" value="2" documentation="This is forecast data."/>
            <Unsigned name="mixed" value="3" documentation="There is a mixture of data quality."/>
            <Unsigned name="raw" value="4" documentation="This is raw data."/>
            <Unsigned name="validated" value="5" documentation="This data has been validated."/>
            <Unsigned name="normalizedForWeather" value="6" documentation="This data has been normalized for weather."/>
            <Unsigned name="other" value="7" documentation="There is no defined quality for this data."/>
        </NamedValues>
    </Enumerated>

    <Enumerated name="Fsgim.UnitSymbolKind" documentation="
            This identifies the units of measure based on the NIST Special Publication 811 2008 edition -- Guide for the Use of the International System of Units (SI). Note that these reference document supports SI units as well as common units of measurements in practice including CGS units.
            Only VA, W, var, VAh, Wh, varh, Btu, J, therm, BtuPerh, g, gPerM3, and gPerS are normative for the FSGIM standard.  The enumerated values of VA, W, var, VAh, Wh, and varh were changed from their original NAESB values of vA, w, vAr, vAH, wH, and vArH to make them consistent with the standard SI abbreviations for these units.  The enumerated values of Btu and BtuPerh were changed from their original NAESB values of btu and btuPerH to make them consistent with the standard abbreviations for British thermal units and hours.
            Note:  The abbreviation MBtu is often used to represent thousands of Btu's (where M represents the Roman numeral for 1000).  The FSGIM always uses the SI prefixes listed in the SiScaleCodeType enumeration and not the prefixes based on Roman numerals.  This means that 1000 Btu's would be represented in the FSGIM as EnergyThermalQuantity.quantity = 1, EnergyThermalType.itemUnits = Btu, and EnergyThermalType.siScaleCode = k, not EnergyThermalType.siScaleCode = M.
            ">
        <NamedValues>
            <Unsigned name="m" value="1" documentation="Length,meter"/>
            <Unsigned name="g" value="2" documentation="Mass,gram"/>
            <Unsigned name="a" value="3" documentation="Current,ampere"/>
            <Unsigned name="degK" value="4" documentation="Temperature,Kelvin (Note: the unit “degrees” is implied)"/>
            <Unsigned name="mol" value="5" documentation="Amount of substance,mole"/>
            <Unsigned name="cd" value="6" documentation="Luminous intensity,candela"/>
            <Unsigned name="s" value="7" documentation="Time,second"/>
            <Unsigned name="rad" value="8" documentation="Plane angle,Radian (m/m)"/>
            <Unsigned name="sr" value="9" documentation="Solid angle,Steradian (m2/m2)"/>
            <Unsigned name="gy" value="10" documentation="Absorbed dose,Gray (J/kg)"/>
            <Unsigned name="bq" value="11" documentation="Radioactivity,Becquerel (1/s)"/>
            <Unsigned name="degC" value="12" documentation="Relative temperature,degrees Celsius"/>
            <Unsigned name="sv" value="13" documentation="Dose equivalent,Sievert (J/kg)"/>
            <Unsigned name="f" value="14" documentation="Electric capacitance,Farad (C/V)"/>
            <Unsigned name="c" value="15" documentation="Electric charge,Coulomb (Amp second)"/>
            <Unsigned name="h" value="16" documentation="Electric inductance,Henry (Wb/A)"/>
            <Unsigned name="v" value="17" documentation="Electric potential,Volt (W/A)"/>
            <Unsigned name="ohm" value="18" documentation="Electric resistance,Ohm (V/A)"/>
            <Unsigned name="J" value="19" documentation="Energy joule,(N·m = C·V = W·s)"/>
            <Unsigned name="n" value="20" documentation="Force newton,(kg m/s²)"/>
            <Unsigned name="hz" value="21" documentation="Frequency,Cycles per second or (1/s)"/>
            <Unsigned name="lx" value="22" documentation="Illuminance lux,(lm/m²)"/>
            <Unsigned name="lm" value="23" documentation="Luminous flux,lumen (cd sr)"/>
            <Unsigned name="wb" value="24" documentation="Magnetic flux,Weber (V s)"/>
            <Unsigned name="t" value="25" documentation="Magnetic flux density,Tesla (Wb/m2)"/>
            <Unsigned name="W" value="26" documentation="Real power,Watt. By definition, one Watt equals one Joule per second. Electrical power may have real and reactive components. The real portion of electrical power (I²R) or VIcos?, is expressed in Watts. (See also apparent power and reactive power.)"/>
            <Unsigned name="pa" value="27" documentation="Pressure,Pascal (N/m²) (Note: the absolute or relative measurement of pressure is implied with this entry. See below for more explicit forms.)"/>
            <Unsigned name="siemens" value="28" documentation="Electric Conductance,Siemens (A / V = 1 / O)"/>
            <Unsigned name="paA" value="29" documentation="Pressure,Pascal, absolute pressure"/>
            <Unsigned name="paG" value="30" documentation="Pressure,Pascal, gauge pressure"/>
            <Unsigned name="kat" value="31" documentation="Catalytic activity,katal = mol / s"/>
            <Unsigned name="revPerS" value="32" documentation="Rotational speed,rotations per second (Note: compare to cycles per second, Hz)"/>
            <Unsigned name="m2" value="33" documentation="Area,square meter"/>
            <Unsigned name="m3" value="34" documentation="Volume,cubic meter"/>
            <Unsigned name="mPerS" value="35" documentation="Velocity,meter per second (m/s)"/>
            <Unsigned name="mPerS2" value="36" documentation="Acceleration,meter per second squared"/>
            <Unsigned name="m3PerS" value="37" documentation="Volumetric flow rate,cubic meters per second"/>
            <Unsigned name="mPerM3" value="38" documentation="Fuel efficiency,meter / cubic meter"/>
            <Unsigned name="gM" value="39" documentation="Moment of mass,kilogram meter (kg·m) (first moment of mass) (Note: users must supply the “k” prefix to obtain “kg m”.)"/>
            <Unsigned name="gPerM3" value="40" documentation="Density,gram/cubic meter (Note: users must supply the prefix multiplier “k” to form kg/ m³)"/>
            <Unsigned name="m2PerS" value="41" documentation="Viscosity,meter squared / second"/>
            <Unsigned name="wPerMK" value="42" documentation="Thermal conductivity,Watt/meter Kelvin"/>
            <Unsigned name="jPerK" value="43" documentation="Heat capacity,Joule/Kelvin"/>
            <Unsigned name="radPerS" value="44" documentation="Angular velocity,radians per second"/>
            <Unsigned name="VA" value="45" documentation="Apparent power,Volt Ampere (See also real power and reactive power.)"/>
            <Unsigned name="var" value="46" documentation="Reactive power,Volt Ampere reactive. The “reactive” or “imaginary” component of electrical power (VISin?). (See also real power and apparent power)."/>
            <Unsigned name="vS" value="47" documentation="Volt seconds,Volt seconds (Ws/A)"/>
            <Unsigned name="v2" value="48" documentation="Volts squared,Volt squared (W2/A2)"/>
            <Unsigned name="aS" value="49" documentation="Amp seconds,Amp seconds"/>
            <Unsigned name="a2" value="50" documentation="Amps squared,Amp squared"/>
            <Unsigned name="a2S" value="51" documentation="Amps squared time,square Amp second"/>
            <Unsigned name="VAh" value="52" documentation="Apparent energy,Volt Ampere hours"/>
            <Unsigned name="Wh" value="53" documentation="Real energy,Watt hours"/>
            <Unsigned name="varh" value="54" documentation="Reactive energy,Volt Ampere reactive hours"/>
            <Unsigned name="vPerHz" value="55" documentation="Magnetic flux,Volt per Hertz"/>
            <Unsigned name="hzPerS" value="56" documentation="Rate of change of frequency,Hertz per second"/>
            <Unsigned name="gM2" value="57" documentation="Moment of mass,kg m2 (Second moment of mass, commonly called the moment of inertia) (Note: users must supply the “k” prefix to obtain “kg m2”.)"/>
            <Unsigned name="wPerS" value="58" documentation="Ramp rate,Watt per second"/>
            <Unsigned name="lPerS" value="59" documentation="Volumetric flow rate,liters per second"/>
            <Unsigned name="q" value="60" documentation="Quantity power,Q"/>
            <Unsigned name="qh" value="61" documentation="Quantity energy,Qh"/>
            <Unsigned name="ohmM" value="62" documentation="resistivity,Ohm meter, ? (rho)"/>
            <Unsigned name="aPerM" value="63" documentation="A/m,magnetic field strength, Ampere per meter"/>
            <Unsigned name="v2H" value="64" documentation="volt-squared hour,Volt-squared-hours"/>
            <Unsigned name="a2H" value="65" documentation="ampere-squared hour,Ampere-squared hour"/>
            <Unsigned name="aH" value="66" documentation="Ampere-hours,Ampere-hours"/>
            <Unsigned name="wHPerM3" value="67" documentation="Wh/m3,energy per volume"/>
            <Unsigned name="timeStamp" value="68" documentation="Timestamp,time and date per ISO 8601 format"/>
            <Unsigned name="wHPerRev" value="69" documentation="Kh-Wh,active energy metering constant"/>
            <Unsigned name="vArHPerRev" value="70" documentation="Kh-VArh,reactive energy metering constant"/>
            <Unsigned name="vAHPerRev" value="71" documentation="Kh-Vah,apparent energy metering constant"/>
            <Unsigned name="m3PerH" value="72" documentation="Volumetric flow rate,cubic meter per hour"/>
            <Unsigned name="m3CompensatedPerH" value="73" documentation="Volumetric flow rate,compensated cubic meter per hour"/>
            <Unsigned name="m3UncompensatedPerH" value="74" documentation="Volumetric flow rate,uncompensated cubic meter per hour"/>
            <Unsigned name="lPerH" value="75" documentation="Volumetric flow rate,liter per hour"/>
            <Unsigned name="lUncompensatedPerH" value="76" documentation="Volumetric flow rate,liter (uncompensated) per hour"/>
            <Unsigned name="lCompensatedPerH" value="77" documentation="Volumetric flow rate,liter (compensated) per hour"/>
            <Unsigned name="q45" value="78" documentation="Quantity power,Q measured at 45º"/>
            <Unsigned name="q60" value="79" documentation="Quantity power,Q measured at 60º"/>
            <Unsigned name="q45H" value="80" documentation="Quantity energy,Qh measured at 45º"/>
            <Unsigned name="q60H" value="81" documentation="Quantity energy,Qh measured at 60º"/>
            <Unsigned name="jPerKg" value="82" documentation="Specific energy,Joule / kg"/>
            <Unsigned name="m3Uncompensated" value="83" documentation="Volume,cubic meter, with the value uncompensated for weather effects."/>
            <Unsigned name="m3Compensated" value="84" documentation="Volume,cubic meter, with the value compensated for weather effects."/>
            <Unsigned name="m1" value="85" documentation="Wavenumber,reciprocal meter, (1/m)"/>
            <Unsigned name="m3PerKg" value="86" documentation="Specific volume,cubic meter per kilogram, v"/>
            <Unsigned name="paS" value="87" documentation="Dynamic viscosity,Pascal second"/>
            <Unsigned name="nM" value="88" documentation="Moment of force,Newton meter"/>
            <Unsigned name="nPerM" value="89" documentation="Surface tension,Newton per meter"/>
            <Unsigned name="radPerS2" value="90" documentation="Angular acceleration,radian per second squared"/>
            <Unsigned name="wPerM2" value="91" documentation="Heat flux density, irradiance,Watt per square meter"/>
            <Unsigned name="jPerKgK" value="92" documentation="Specific heat capacity, specific entropy,Joule per kilogram kelvin"/>
            <Unsigned name="jPerM3" value="93" documentation="energy density,Joule per cubic meter"/>
            <Unsigned name="vPerM" value="94" documentation="electric field strength,Volt per meter"/>
            <Unsigned name="cPerM3" value="95" documentation="electric charge density,Coulomb per cubic meter"/>
            <Unsigned name="cPerM2" value="96" documentation="surface charge density,Coulomb per square meter"/>
            <Unsigned name="fPerM" value="97" documentation="permittivity,Farad per meter"/>
            <Unsigned name="hPerM" value="98" documentation="permeability,Henry per meter"/>
            <Unsigned name="jPerMol" value="99" documentation="molar energy,Joule per mole"/>
            <Unsigned name="jPerMolK" value="100" documentation="molar entropy, molar heat capacity,Joule per mole kelvin"/>
            <Unsigned name="cPerKg" value="101" documentation="exposure (x rays),Coulomb per kilogram"/>
            <Unsigned name="gyPerS" value="102" documentation="absorbed dose rate,Gray per second"/>
            <Unsigned name="wPerSr" value="103" documentation="radiant intensity,Watt per steradian"/>
            <Unsigned name="wPerM2Sr" value="104" documentation="radiance,Watt per square meter steradian"/>
            <Unsigned name="katPerM3" value="105" documentation="catalytic activity concentration,katal per cubic meter"/>
            <Unsigned name="min" value="106" documentation="Time,minute = 60 s"/>
            <Unsigned name="hr" value="107" documentation="Time,hour = 60 min = 3600 s"/>
            <Unsigned name="d" value="108" documentation="Time,day = 24 h = 86400 s"/>
            <Unsigned name="deg" value="109" documentation="Plane angle,degree"/>
            <Unsigned name="angleMin" value="110" documentation="Plane angle,minute"/>
            <Unsigned name="angleSec" value="111" documentation="Plane angle,second"/>
            <Unsigned name="ha" value="112" documentation="Area,hectare"/>
            <Unsigned name="l" value="113" documentation="Volume,liter= dm3 = m3/1000."/>
            <Unsigned name="tonne" value="114" documentation="mass,“tonne” or “metric ton” (1000 kg = 1 Mg)"/>
            <Unsigned name="none" value="115" documentation="N/A,none (not applicable)"/>
            <Unsigned name="cosTheta" value="116" documentation="Power factor,dimensionless"/>
            <Unsigned name="bel" value="117" documentation="Logrithmic ratio,Bel, Note: users must combine this unit with the multiplier prefix “d” to form decibels (dB)"/>
            <Unsigned name="status" value="118" documentation="State,status, where:&quot;1&quot; = &quot;true&quot;, &quot;live&quot;, &quot;on&quot;, &quot;high&quot;, &quot;set&quot;;&quot;0&quot; = &quot;false&quot;, &quot;dead&quot;, &quot;off&quot;, &quot;low&quot;, &quot;cleared&quot;Note: A Boolean value is preferred but other values may be supported"/>
            <Unsigned name="count" value="119" documentation="Amount of substance,Counter value"/>
            <Unsigned name="bm" value="120" documentation="Logrithmic ratio of signal strength,Bel-mW, normalized to 1mW. Note: to form “dBm” combine “Bm” with multiplier “d”."/>
            <Unsigned name="code" value="121" documentation="Application Value,Encoded value"/>
            <Unsigned name="meCode" value="122" documentation="EndDeviceEvent,Value to be interpreted as a EndDeviceEventCode"/>
            <Unsigned name="lPerL" value="123" documentation="Concentration,The ratio of the volume of a solute divided by the volume of the solution. (Note: Users may need use a prefix such a ‘µ’ to express a quantitye such as ‘µL/L’)"/>
            <Unsigned name="gPerG" value="124" documentation="Concentration,The ratio of the mass of a solute divided by the mass of the solution. (Note: Users may need use a prefix such a ‘µ’ to express a quantity such as ‘µg/g’)"/>
            <Unsigned name="molPerM3" value="125" documentation="Concentration,The amount of substance concentration, (c), the amount of solvent in moles divided by the volume of solution in m³."/>
            <Unsigned name="molPerMol" value="126" documentation="Concentration,Molar fraction, the ratio of the molar amount of a solute divided by the molar amount of the solution."/>
            <Unsigned name="molPerKg" value="127" documentation="Concentration,Molality, the amount of solute in moles and the amount of solvent in kilograms."/>
            <Unsigned name="mPerM" value="128" documentation="Length,Ratio of length"/>
            <Unsigned name="sPerS" value="129" documentation="Time,Ratio of time (Note: Users may need to supply a prefix such as ‘µ’ to show rates such as ‘µs/s’)"/>
            <Unsigned name="hzPerHz" value="130" documentation="Frequency,Rate of frequency change (Note: Users may need to supply a prefix such as ‘m’ to show rates such as ‘mHz/Hz’)"/>
            <Unsigned name="vPerV" value="131" documentation="Voltage,Ratio of voltages (Note: Users may need to supply a prefix such as ‘m’ to show rates such as ‘mV/V’)"/>
            <Unsigned name="aPerA" value="132" documentation="Current,Ratio of Amperages (Note: Users may need to supply a prefix such as ‘m’ to show rates such as ‘mA/A’)"/>
            <Unsigned name="wPerVA" value="133" documentation="Power factor,PF"/>
            <Unsigned name="rev" value="134" documentation="Amount of rotation,Revolutions"/>
            <Unsigned name="wPerW" value="135" documentation="Signal Strength,Ratio of power (Note: Users may need to supply a prefix such as ‘m’ to show rates such as ‘mW/W’)"/>
            <Unsigned name="refractiveIndexN" value="136" documentation="Refractive Index,n"/>
            <Unsigned name="relativePermeabilityMur" value="137" documentation="Relative Permeability,µr"/>
            <Unsigned name="np" value="138" documentation="Logarithmic ratio,neper"/>
            <Unsigned name="eV" value="139" documentation="energy,electronvolt (1 eV = 1.602 176 x 10-19J)"/>
            <Unsigned name="da" value="140" documentation="mass,dalton (1 Da = 1.660 538 x 10-27kg)"/>
            <Unsigned name="u" value="141" documentation="mass,unified atomic mass unit (1u = 1 Da)"/>
            <Unsigned name="ua" value="142" documentation="length,astronomical unit (1ua = 1.495 978 x1011m)"/>
            <Unsigned name="c0" value="143" documentation="speed,natural unit of speed (speed of light in a vacuum) 299 792 458 m/s"/>
            <Unsigned name="nuH" value="144" documentation="action,natural unit of action (reduced planck constant) 1.054 571 X 10-34J s"/>
            <Unsigned name="nuMe" value="145" documentation="mass,natural unit of mass (electron mass) 9.109 382 x 10-31 kg"/>
            <Unsigned name="nuHPerNuMeC02" value="146" documentation="time,natural unit of time"/>
            <Unsigned name="auE" value="147" documentation="charge,atomic units of charge (elementary charge) 1.602 176 x 10-19 C"/>
            <Unsigned name="auMe" value="148" documentation="mass,atomic units of mass (electron mass) 9.109 382 x 10-31 kg"/>
            <Unsigned name="auH" value="149" documentation="action,atomic unit of action (reduced planck constant) 1.054 571 X 10-34J s"/>
            <Unsigned name="auA0" value="150" documentation="length,atomic unit of length, bohr ( Bohr radius) 0.529 177 x 10-10 m"/>
            <Unsigned name="auEh" value="151" documentation="energy,atomic unit of energy, hartree 4.359 744"/>
            <Unsigned name="auHPerAuEh" value="152" documentation="time,atomic unit of time"/>
            <Unsigned name="char" value="153" documentation="Number of characters,characters"/>
            <Unsigned name="charPerSec" value="154" documentation="Data rate,characters per second"/>
            <Unsigned name="money" value="155" documentation="Monetary unit,Generic money (Note: Specific monetary units are identified the currency class)."/>
            <Unsigned name="ft3" value="156" documentation="Volume,cubic foot"/>
            <Unsigned name="ft3Compensated" value="157" documentation="Volume,cubic foot compensated for weather"/>
            <Unsigned name="ft3Uncompensated" value="158" documentation="Volume,cubic foot uncompensated for weather"/>
            <Unsigned name="ft3PerH" value="159" documentation="Volumetric flow rate,cubic foot per hour"/>
            <Unsigned name="ft3CompensatedPerH" value="160" documentation="Volumetric flow rate,compensated cubic feet per hour"/>
            <Unsigned name="ft3UncompensatedPerH" value="161" documentation="Volumetric flow rate,uncompensated cubic feet per hour"/>
            <Unsigned name="uSGal" value="162" documentation="Volume,US gallon (1 gal = 231 in3 = 128 fl oz.)"/>
            <Unsigned name="uSGalPerH" value="163" documentation="Volumetric flow rate,US gallon per hour"/>
            <Unsigned name="impGal" value="164" documentation="Volume,Imperial gallon"/>
            <Unsigned name="impGalPerH" value="165" documentation="Volumetric flow rate,Imperial gallon per hour"/>
            <Unsigned name="Btu" value="166" documentation="Energy, British Thermal Unit ref: 59 degrees F"/>
            <Unsigned name="BtuPerH" value="167" documentation="Power,BTU per hour"/>
            <Unsigned name="psiA" value="168" documentation="Pressure,Pound per square inch, absolute"/>
            <Unsigned name="psiG" value="169" documentation="Pressure,Pound per square inch, gauge"/>
            <Unsigned name="lUncompensated" value="170" documentation="Volume,Liter, with the value uncompensated for weather effects."/>
            <Unsigned name="lCompensated" value="171" documentation="Volume,Liter, with the value compensated for weather effects."/>
            <Unsigned name="therm" value="172" documentation="Energy,Therm"/>
            <Unsigned name="bar" value="173" documentation="Pressure,bar (1 bar = 100 kPa)"/>
            <Unsigned name="mmHg" value="174" documentation="Pressure,millimeter of mercury (1 mmHg ˜ 133.3 Pa)"/>
            <Unsigned name="angstrom" value="175" documentation="Length,ångström (1Å = 10-10m)"/>
            <Unsigned name="nmi" value="176" documentation="Length,nautical mile (1 M = 1852 m)"/>
            <Unsigned name="barn" value="177" documentation="Area,barn (1 b = 100 fm2 = 10-28 m2)"/>
            <Unsigned name="kn" value="178" documentation="Speed,knot (1 kn = 1852/3600) m/s"/>
            <Unsigned name="ci" value="179" documentation="Activity,curie (1 Ci = 3.7 x 1010Bq)"/>
            <Unsigned name="r" value="180" documentation="exposure,roentgen (1 R = 2.58 x 10-4 C/kg)"/>
            <Unsigned name="doseRad" value="181" documentation="absorbed dose,rad (1 rd = 1 cGy)"/>
            <Unsigned name="rem" value="182" documentation="dose equivalent,rem (1 rem = 10-2 Sv)"/>
            <Unsigned name="in" value="183" documentation="length,inch"/>
            <Unsigned name="ft" value="184" documentation="length,foot (1 ft = 12 in)"/>
            <Unsigned name="rod" value="185" documentation="length,rod (1 rod = 16.5 ft)"/>
            <Unsigned name="fur" value="186" documentation="length,furlong (1 fur = 660 ft)"/>
            <Unsigned name="mi" value="187" documentation="length,mile (1 statute mile = 8 fur = 80 chains = 320 rods = 5280 feet)"/>
            <Unsigned name="ft2" value="188" documentation="area,square foot (1 ft2 = 144 in2)"/>
            <Unsigned name="yd2" value="189" documentation="area,square yard (1 yd2 = 9 ft2)"/>
            <Unsigned name="rod2" value="190" documentation="area,square rod (1 rod2 = 272.25 ft2)"/>
            <Unsigned name="acre" value="191" documentation="area,acre (1 acre = 160 rd2 = 43 560 ft2)"/>
            <Unsigned name="mi2" value="192" documentation="area,square mile (1 mi2 = 640 acres)"/>
            <Unsigned name="sectionOfLand" value="193" documentation="area,section of land (1 mi2 = 1 section of land)"/>
            <Unsigned name="township" value="194" documentation="area,township (1 township = 6 miles square)"/>
            <Unsigned name="yd3" value="195" documentation="Volume,cubic yard (1 yd3 = 27 ft3)"/>
            <Unsigned name="li" value="196" documentation="length,link (1 li = 0.66 ft)"/>
            <Unsigned name="ch" value="197" documentation="length,chain (1 ch = 100 links = 4 rods = 66 ft)"/>
            <Unsigned name="uSLiqPt" value="198" documentation="Volume,US liquid pint (1 pt = 28.875 in3 = 128 fl dr)"/>
            <Unsigned name="uSLiqQt" value="199" documentation="Volume,US liquid quart (1 qt = 2 pt)"/>
            <Unsigned name="flDrAp" value="200" documentation="Volume,Apothecaries fluid dram"/>
            <Unsigned name="flOzAp" value="201" documentation="Volume,Apothecaries fluid ounce (1 fl oz ap = 8 fl dr ap)"/>
            <Unsigned name="usDryPt" value="202" documentation="Volume,US dry pint (1 pt = 67.2 in3)"/>
            <Unsigned name="usDryQt" value="203" documentation="Volume,US dry quart (1 qt = 2 pints)"/>
            <Unsigned name="usPk" value="204" documentation="Volume,US peck (1 pk = 8 qt)"/>
            <Unsigned name="usBu" value="205" documentation="Volume,US bushel (1 bu = 4 pk)"/>
            <Unsigned name="gr" value="206" documentation="Mass,grain (1 grain = 1/7000 avdp lb) Note: The “grain” is the same in the avoirdupois, troy, and apothecaries units of mass."/>
            <Unsigned name="avdpDr" value="207" documentation="Mass,Avoirdupois dram (1 Avdp dr = 27-11/32 gr) Note: The abbreviation “dr” may be used if there is no chance of confusing the avoirdupois dram with the troy or apothecaries dram."/>
            <Unsigned name="avdpOz" value="208" documentation="Mass,Avoirdupois ounce (1 Avdp oz = 16 Avdp dr) Note: The abbreviation “oz” may be used if there is no chance of confusing the avoirdupois ounce with the troy or apothecaries ounce."/>
            <Unsigned name="avdpLb" value="209" documentation="Mass,Avoirdupois pound (1 lb = 16 oz) Note: Although the term “pound” is commonly used in many countries simply as “pound (lb)”, the historical term “avoirdupois” is added to provide context and distinguish it in this setting from the troy and apothecaries systems of measure which use the same names. The abbreviation “lb” may be used instead of “avdp lb” if no confusion is possible with the pound named in these other systems."/>
            <Unsigned name="shortCwt" value="210" documentation="Mass,Avoirdupois hundredweight (1 cwt = 100 lbs)"/>
            <Unsigned name="shortTon" value="211" documentation="Mass,Avoirdupois ton (1 short ton = 2000 lbs)"/>
            <Unsigned name="longCwt" value="212" documentation="Mass,Avoirdupois gross or long hundredweight (1 long cwt = 112 lbs)"/>
            <Unsigned name="longTon" value="213" documentation="Mass,Avoirdupois gross or long ton (1 long ton = 20 long cwt)"/>
            <Unsigned name="dwt" value="214" documentation="Mass,Troy pennyweight (1 dwt = 24 grains)"/>
            <Unsigned name="ozT" value="215" documentation="Mass,Troy ounce (1 oz t = 20 dwt)"/>
            <Unsigned name="lbT" value="216" documentation="Mass,Troy pound (1 lb t = 12 oz t)"/>
            <Unsigned name="sAp" value="217" documentation="Mass,Apothecaries scruple (1 s ap = 20 grains)"/>
            <Unsigned name="drAp" value="218" documentation="Mass,Apothecaries dram (1 dr ap = 3 s ap)"/>
            <Unsigned name="ozAp" value="219" documentation="Mass,Apothecaries ounce (1 oz ap = 8 dr ap)"/>
            <Unsigned name="lbAp" value="220" documentation="Mass,Apothecaries pound (1 lp ap = 12 oz ap)"/>
            <Unsigned name="mpgImp" value="221" documentation="Fuel economy,mile per imperial gallon"/>
            <Unsigned name="mpgUS" value="222" documentation="Fuel economy,mile per US gallon"/>
            <Unsigned name="mPGeUS" value="223" documentation="Fuel economy,mile per US gallon equivalent"/>
            <Unsigned name="lPer100km" value="224" documentation="Fuel economy,liter per 100 km"/>
            <Unsigned name="wHPerMi" value="225" documentation="Fuel economy,watt-hour per mile (Note: users must supply the “k” prefix to create “kWh/mi”)"/>
            <Unsigned name="wHPer100Mi" value="226" documentation="Fuel economy,watt-hour per 100 mile (Note: users must supply the “k” prefix to create “kWh/(100 mi)”)"/>
            <Unsigned name="degF" value="227" documentation="Temperature,degrees Fahrenheit"/>
            <Unsigned name="erg" value="228" documentation="Energy,erg (1 erg = 10-7 J)"/>
            <Unsigned name="dyn" value="229" documentation="Force,dyne (1 dyn = 10-5 N)"/>
            <Unsigned name="p" value="230" documentation="Dynamic viscosity,poise (1 P = 0.1 Pa s)"/>
            <Unsigned name="st" value="231" documentation="Kinematic viscosity,stokes (1 St = 1 cm2/s)"/>
            <Unsigned name="sb" value="232" documentation="Luminance,stilb (1 sb = 104 cd/m2)"/>
            <Unsigned name="ph" value="233" documentation="Illuminance,phot (1 ph = 104 lx)"/>
            <Unsigned name="gal" value="234" documentation="Acceleration,gal (1 Gal = 10-2 m s-2) Note: This “Gal” is an abbreviation for “Galileo” not “gallon”"/>
            <Unsigned name="mx" value="235" documentation="Magnetic flux,Maxwell (1 Mx = 10-8 Wb)"/>
            <Unsigned name="gauss" value="236" documentation="Magnetic flux density,Gauss (1 G = 10-4 T)"/>
            <Unsigned name="oe" value="237" documentation="Magnetic field,Œrsted (1 Oe = (103/4p) A/m)"/>
            <Unsigned name="gPerS" value="238" documentation="Mass flow rate, g/s"/>
        </NamedValues>
    </Enumerated>

    <Any name="Fsgim.AnyType" documentation="This is a placeholder type for which any explicit data type can be substituted.">
    </Any>

    <String name="Fsgim.AnyURI" documentation="An AnyURI primitive data type is meant to identify something. It has a restricted syntax that follows RFC 2396 as amended by RFC 2732. It is often (but not necessarily) dereferencable to a URL.">
    </String>

    <Boolean name="Fsgim.Boolean" documentation="
            This primitive data type represents a binary value with allowable values of &quot;true&quot; and &quot;false.&quot;
            See http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Boolean.
            ">
    </Boolean>

    <String name="Fsgim.GlobalId" documentation="This primitive data type represents a globally unique identifier based on RFC 4122.  Note that UUIDs may be constructed from name-based systems (Version 5) using the procedure in Section 4.3 of the referenced RFC.">
    </String>

    <Integer name="Fsgim.Integer" documentation="
            This primitive data type represents whole numbers ranging from minus infinity to plus infinity.
            See http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer.
            ">
    </Integer>

    <Real name="Fsgim.Real" documentation="
            This primitive data type represents the continuous range of numbers from minus infinity to plus infinity.
            See http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Real.
            ">
    </Real>

    <String name="Fsgim.String" documentation="
            This primitive data type represents a contiguous sequence of characters.
            See http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String.
            ">
    </String>

    <Sequence name="Fsgim.Measurement" documentation="Abstraction of a measured value or related set of values.">
        <Sequence name="timeReference" type="Fsgim.UTCDateTimeInterval" optional="true" documentation="
            Applicable time reference associated with this Measurement. The duration, end, and start can be populated as needed to describe the time reference of the measurement. If only a timestamp is necessary then omit duration and end. If the measurement occurred over a period, use the duration attribute to indicate this period. Only two of the three attributes may be included.
            If the Measurement is a MeasurementSet the contained MeasurementQuantity will not populate timeReference.
            "/>
        <!-- associations -->
        <Sequence name="measuredAt" type="Fsgim.EMUsagePoint" documentation="The logical reference for a point of measurement."/>
    </Sequence>

    <Sequence name="Fsgim.MeasurementSet" extends="Fsgim.Measurement" documentation="An abstract container class used to hold either the power measurements, energy measurements, or emissions measurements that could be made for a given EMUsagePoint and time reference.">
    </Sequence>

    <Sequence name="Fsgim.ItemBaseType" documentation="Abstract base type for units for EMIX Product delivery, measurement, and warrants. Item as in PO Item, Requisition Item, Invoice Item, Lading Item. Item does not include Quantity or Price, because a single product description or transaction may have multiple quantities or prices associated with a single item.">
    </Sequence>

    <Sequence name="Fsgim.MeasurementMetadataType" extends="Fsgim.ItemBaseType" documentation="Metadata associated with a measurement.">
        <Enumerated name="accumulationCharacteristic" type="NAESB.AccumulationKind" optional="true" documentation="Accumulation behaviour of a reading over time, usually 'measuringPeriod', to be used with individual endpoints (as opposed to 'macroPeriod' and 'aggregate' that are used to describe aggregations of data from individual endpoints)."/>
        <Enumerated name="dataQualifier" type="NAESB.DataQualifierKind" optional="true" documentation="Salient attribute of the reading data aggregated from individual endpoints. This is mainly used to define a mathematical operation carried out over 'macroPeriod', but may also be used to describe an attribute of the data when the 'macroPeriod' is not defined."/>
        <String name="description" optional="true" documentation="User defined text describing this measurement or its usage."/>
        <String name="itemDescription" documentation="Pre-defined name for this type of measurement as specified by the derived class."/>
        <Enumerated name="itemUnits" type="Fsgim.UnitSymbolKind" documentation="Units for the measurement, not including any multiplier."/>
        <Enumerated name="measurementQuality" type="Fsgim.QualityOfReading" optional="true" documentation="Quality of the measurement if other than “good.”"/>
        <Real name="resolution" optional="true" documentation="
            The granularity of the measurement, corresponding to the smallest increment reportable by a measurement instrument.
            Constraint:  resolution > 0. 
            "/>
        <Enumerated name="siScaleCode" type="Fsgim.SiScaleCodeType" documentation="SI multiplier that applies to the unit of measure contained in the itemUnits enumeration."/>
    </Sequence>

    <Sequence name="Fsgim.MeasurementQuantity" extends="Fsgim.Measurement" documentation="The quantity portion of a generic quantity/metadata pair used to represent types of measurements.">
        <Real name="value" documentation="Quantity of the measurement."/>
        <Real name="uncertainty" documentation="A positive number which represents the possible positive or negative deviation from the claimed measured value. If this attribute is not defined, a default value may be used as defined by local policy."/>
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.MeasurementMetadataType" documentation="The metadata associated with a MeasurementQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.PowerApparentQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of apparent power measurements is calculated by first separately calculating the aggregate real power and aggregate reactive power. Using these two results, take the square root of the sum of their squares for the quantity of the resulting apparent power.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the aggregate absolute real power uncertainty and the aggregate absolute reactive power uncertainty.
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerCurve" documentation="This class describes the characteristics of a mathematical function used to estimate the power consuming characteristics of a load or the power generating characteristics of a generator.">
        <Array name="realPowerCurve" memberType="Fsgim.PiecewiseLinearSegment" documentation="This attribute defines the real component of a single piecewise linear curve mapping the percentage of power consumed by the device as a function of the present level of operation of the device."/>
        <Array name="reactivelPowerCurve" memberType="Fsgim.PiecewiseLinearSegment" documentation="This attribute defines the reactive component of a single piecewise linear curve mapping the percentage of power consumed by the device as a function of the present level of operation of the device."/>
        <Sequence name="maximumRealPower" type="Fsgim.PowerRealQuantity" optional="true" documentation="
            This attribute defines the maximum real power consumed (or supplied) by the device in units specified in PowerRealType.
            Constraint:  The maximumRealPower attribute has a multiplicity of 0..1 to allow for the modeling of loads with an unknown demand such as some plug loads. In cases where the maximum demand is known, the maximumRealPower attribute shall be required.  
            "/>
        <Sequence name="maximumReactivePower" type="Fsgim.PowerReactiveQuantity" optional="true" documentation="
            This attribute defines the maximum reactive power consumed (or supplied) by the device in units specified in PowerReactiveType.
            Constraint:  If reactivePowerCurve is specified, then the maximumReactivePower attribute must be specified. 
            "/>
    </Sequence>

    <Sequence name="Fsgim.PowerMeasurementRuleset" extends="Fsgim.Ruleset" documentation="•	In order to calculate the sum or difference of an Aggregation of PowerMeasurementSets, calculate the sum or difference of its PowerRealQuantity, PowerReactiveQuantity, and PowerApparentQuantity parts according to the rules for each of those classes.">
    </Sequence>

    <Sequence name="Fsgim.PowerRatings" documentation="This class describes the power characteristics of a Load (or Generator) component. The attributes defined allow specifying the minimum and maximum expected power draw from the load (supply from a generator).  It also allows a series of predefined operation power curves to be defined with one designated as presently being operational.">
        <Sequence name="adjustedNoDRPower" type="Fsgim.PowerMeasurementsSet" documentation="This attribute defines the maximum expected power draw of a load (or the minimum power supplied by a generator) during operation.  This value differs from the rated power since it may take into account operational considerations such as environmental, equipment safety or regulatory conditions."/>
        <Sequence name="adjustedFullDRPower" type="Fsgim.PowerMeasurementsSet" documentation="This attribute defines the minimum expected power draw of a load (or the maximum power supplied by a generator) during operation.  This value differs from the rated power since it may take into account operational considerations such as environmental, equipment safety or regulatory conditions."/>
        <Array name="powerCurves" memberType="Fsgim.PowerCurve" documentation="
            This attribute defines one or more piecewise linear curves mapping the percentage of power consumed by the device as a function of the present level of operation of the device.  Many loads draw power (or generators supply power) based on the present loading characteristics of the device. For example, a motor driving a fan will draw more power as the fan blade pitch is increased.
            The axes of the curve are defined in percent to allow loads of any type to utilize the attribute.  For example a simple 60W incandescent light bulb would likely be modeled by a linear segment (0,0), (100,100). Here as the bulb is energized (dimmed) from off (0%) to fully on (100%), the power needed to  energize the device also travels from 0% to 100%.  A more complicated device such as a room air-conditioner may have a non-linear power curve. Here, as the coolness setting is adjusted from warmest to coolest, the air conditioner will draw relative more power when set to maximum cooling than when set to minimum cooling. 
            When powerCurve is not present, the load or generator is assumed to be a two state device drawing no power when the device is off and adjustedNoDRPower when the device is on. When adjustedNoDRPower also is not present, the load or generator is assumed to be a two state device drawing no power when the device is off and maximumRealPower when the device is on.
            "/>
        <Integer name="activePowerCurve" optional="true" documentation="
            This attribute defines the index into the zero based array of powerCurves indicating which powerCurve is presently active.
            Constraint:  This attribute must be present if the powerCurves attribute is present. 
            "/>
    </Sequence>

    <Sequence name="Fsgim.PowerReactiveQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of reactive power measurements is calculated by treating inductive loads and generators that consume vars as positive quantities and capacitive loads and generators that supply vars as negative quantities, then calculating their arithmetic sum.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties.
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerRealQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of real power measurements is calculated by treating loads as positive quantities and generators as negative quantities, then calculating their arithmetic sum.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties.
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerThermalQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of thermal power measurements is calculated by converting the individual PowerThermalQuantities so that they have a consistent PowerThermalType.itemUnits (W or BtuPerh) and then calculating their arithmetic sum.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties. 
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerApparentQuantity" extends="Fsgim.PowerQuantityType" documentation="Quantity and pair used to represent apparent power measurements.">
        <!-- associations -->
        <Sequence name="apparentPowerAggregationRules" type="Fsgim.PowerApparentQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one PowerApparentQuantity."/>
        <Sequence name="measurementMetadata" type="Fsgim.PowerApparentType" documentation="
            The metadata associated with a PowerApparentQuantity.
            (This association redefines the measurementMetadata association between the PowerQuantityType Class (see Clause 6.6.4.6.12) and the PowerItemType Class (see Clause 6.6.4.6.10).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.PowerApparentType" extends="Fsgim.PowerItemType" documentation="
            Metadata associated with measurements of apparent power.
            Constraint:  itemDescription = &quot;ApparentPower&quot; 
            Constraint:  itemUnits = VA 
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerItemType" extends="Fsgim.MeasurementMetadataType" documentation="Metadata associated with a power measurement.">
    </Sequence>

    <Sequence name="Fsgim.PowerMeasurementsSet" extends="Fsgim.MeasurementSet" documentation="A container class used to hold one of each type of power measurement made at a given physical location and time.">
        <!-- associations -->
        <Sequence name="powerAggregationRules" type="Fsgim.PowerMeasurementRuleset" documentation="The ruleset that is associated with aggregating more than one PowerMeasurementSet."/>
        <Sequence name="quantityApparentPower" type="Fsgim.PowerApparentQuantity" optional="true" documentation="The apparent power portion of the PowerMeasurementSet."/>
        <Sequence name="quantityReactivePower" type="Fsgim.PowerReactiveQuantity" documentation="The reactive power portion of the PowerMeasurementSet."/>
        <Sequence name="quantityRealPower" type="Fsgim.PowerRealQuantity" documentation="The real power portion of the PowerMeasurementSet."/>
    </Sequence>

    <Sequence name="Fsgim.PowerQuantityType" extends="Fsgim.MeasurementQuantity" documentation="Quantity/metadata pair used to represent types of power measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.PowerItemType" documentation="
            The metadata associated with a PowerQuantityType.
            (This association redefines the measurementMetadata association between the MeasurementQuantity Class (see Clause 6.6.4.5) and the MeasurementMetadataType Class (see Clause 6.6.4.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.PowerReactiveQuantity" extends="Fsgim.PowerQuantityType" documentation="Quantity and pair used to represent reactive power measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.PowerReactiveType" documentation="
            The metadata associated with a PowerReactiveQuantity.
            (This association redefines the measurementMetadata association between the PowerQuantityType Class (see Clause 6.6.4.6.12) and the PowerItemType Class (see Clause 6.6.4.6.10).)  
            "/>
        <Sequence name="reactivePowerAggregationRules" type="Fsgim.PowerReactiveQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one PowerReactiveQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.PowerReactiveType" extends="Fsgim.PowerItemType" documentation="
            Metadata associated with measurements of reactive power.
            Constraint:  itemDescription = &quot;ReactivePower&quot; 
            Constraint:  itemUnits = VAr 
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerRealQuantity" extends="Fsgim.PowerQuantityType" documentation="Quantity and metadata pair used to represent real power measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.PowerRealType" documentation="
            The metadata associated with a PowerRealQuantity.
            (This association redefines the measurementMetadata association between the PowerQuantityType Class (see Clause 6.6.4.6.12) and the PowerItemType Class (see Clause 6.6.4.6.10).)  
            "/>
        <Sequence name="realPowerAggregationRules" type="Fsgim.PowerRealQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one PowerRealQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.PowerRealType" extends="Fsgim.PowerItemType" documentation="
            Metadata associated with measurements of real power.
            Constraint:  itemDescription = &quot;RealPower&quot; 
            Constraint:  itemUnits = W 
            ">
    </Sequence>

    <Sequence name="Fsgim.PowerThermalQuantity" extends="Fsgim.PowerQuantityType" documentation="Quantity/metadata pair used to represent thermal power measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.PowerThermalType" documentation="
            The metadata associated with a PowerThermalQuantity.
            (This association redefines the measurementMetadata association between the PowerQuantityType Class (see Clause 6.6.4.6.12) and the PowerItemType Class (see Clause 6.6.4.6.10).)  
            "/>
        <Sequence name="thermalPowerAggregationRules" type="Fsgim.PowerThermalQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one PowerThermalQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.PowerThermalType" extends="Fsgim.PowerItemType" documentation="
            Metadata associated with measurements of thermal power.
            Constraint:  itemDescription = &quot;ThermalPower&quot; 
            Constraint:  itemUnits = W, BtuPerh 
            ">
    </Sequence>

    <Sequence name="Fsgim.ThermalEnergyMeasurementRuleset" extends="Fsgim.Ruleset" documentation="
            The aggregation of thermal energy measurements is calculated by normalizing the units of measurement, then calculating their arithmetic sum.
            The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties.
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyApparentQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of apparent energy measurements is calculated by first separately calculating the aggregate real energy and aggregate reactive energy. Using these two results, take the square root of the sum of their squares for the quantity of the resulting apparent energy.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the aggregate absolute real energy uncertainty and the aggregate absolute reactive energy uncertainty.
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyMeasurementRuleset" extends="Fsgim.Ruleset" documentation="•	In order to calculate the sum or difference of an Aggregation of EnergyMeasurementSets, calculate the sum or difference of its EnergyRealQuantity, EnergyReactiveQuantity, and EnergyApparentQuantity parts according to the rules for each of those classes.">
    </Sequence>

    <Sequence name="Fsgim.EnergyReactiveQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of reactive energy measurements is calculated by treating inductive loads and generators that consume var-hours as positive quantities and capacitive loads and generators that supply var-hours as negative quantities, then calculating their arithmetic sum.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties.
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyRealQuantityRuleset" extends="Fsgim.Ruleset" documentation="
            •	The aggregation of real energy measurements is calculated by treating loads as positive quantities and generators as negative quantities, then calculating their arithmetic sum.
            •	The aggregate absolute uncertainty is calculated as the square root of the sum of the squares of the individual uncertainties.
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyApparentQuantity" extends="Fsgim.EnergyQuantityType" documentation="Quantity/metadata pair used to represent apparent energy measurements.">
        <!-- associations -->
        <Sequence name="apparentEnergyAggregationRules" type="Fsgim.EnergyApparentQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one EnergyApparentQuantity."/>
        <Sequence name="measurementMetadata" type="Fsgim.EnergyApparentType" documentation="
            The metadata associated with an EnergyApparentQuantity.
            (This association redefines the measurementMetadata association between the EnergyQuantityType Class (see Clause 6.6.4.7.10) and the EnergyItemType Class (see Clause 6.6.4.7.8).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EnergyApparentType" extends="Fsgim.EnergyItemType" documentation="
            Metadata associated with measurements of apparent energy.
            Constraint:  itemDescription = &quot;ApparentEnergy&quot; 
            Constraint:  itemUnits = VAh 
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyItemType" extends="Fsgim.MeasurementMetadataType" documentation="Metadata associated with an energy measurement.">
    </Sequence>

    <Sequence name="Fsgim.EnergyMeasurementsSet" extends="Fsgim.MeasurementSet" documentation="A container class used to hold zero to one of each type of energy measurement that could be made for a given location and time.">
        <!-- associations -->
        <Sequence name="energyAggregationRules" type="Fsgim.EnergyMeasurementRuleset" documentation="The ruleset that is associated with aggregating more than one EnergyMeasurementSet."/>
        <Sequence name="quantityApparentEnergy" type="Fsgim.EnergyApparentQuantity" optional="true" documentation="The apparent energy portion of the EnergyMeasurementSet."/>
        <Sequence name="quantityReactiveEnergy" type="Fsgim.EnergyReactiveQuantity" documentation="The reactive energy portion of the EnergyMeasurementSet."/>
        <Sequence name="quantityRealEnergy" type="Fsgim.EnergyRealQuantity" documentation="The real energy portion of the EnergyMeasurementSet."/>
    </Sequence>

    <Sequence name="Fsgim.EnergyQuantityType" extends="Fsgim.MeasurementQuantity" documentation="Quantity/metadata pair used to represent types of energy measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.EnergyItemType" documentation="
            The metadata associated with an EnergyQuantityType.
            (This association redefines the measurementMetadata association between the MeasurementQuantity Class (see Clause 6.6.4.5) and the MeasurementMetadataType Class (see Clause 6.6.4.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EnergyReactiveQuantity" extends="Fsgim.EnergyQuantityType" documentation="Quantity/metadata pair used to represent reactive energy measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.EnergyReactiveType" documentation="
            The metadata associated with an EnergyReactiveQuantity.
            (This association redefines the measurementMetadata association between the EnergyQuantityType Class (see Clause 6.6.4.7.10) and the EnergyItemType Class (see Clause 6.6.4.7.8).)  
            "/>
        <Sequence name="reactiveEnergyAggregationRules" type="Fsgim.EnergyReactiveQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one EnergyReactiveQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.EnergyReactiveType" extends="Fsgim.EnergyItemType" documentation="
            Metadata associated with measurements of reactive energy.
            Constraint:  itemDescription = &quot;ReactiveEnergy&quot; 
            Constraint:  itemUnits = VArh 
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyRealQuantity" extends="Fsgim.StoreableEnergyQuantity" documentation="Quantity/metadata pair used to represent real energy measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.EnergyRealType" documentation="
            The metadata associated with an EnergyRealQuantity.
            (This association redefines the measurementMetadata association between the EnergyQuantityType Class (see Clause 6.6.4.7.10) and the EnergyItemType Class (see Clause 6.6.4.7.8).)  
            "/>
        <Sequence name="realEnergyAggregationRules" type="Fsgim.EnergyRealQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one EnergyRealQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.EnergyRealType" extends="Fsgim.EnergyItemType" documentation="
            Metadata associated with measurements of real energy.
            Constraint:  itemDescription = &quot;RealEnergy' 
            Constraint:  itemUnits = Wh 
            ">
    </Sequence>

    <Sequence name="Fsgim.EnergyThermalQuantity" extends="Fsgim.StoreableEnergyQuantity" documentation="Quantity/metadata pair used to represent thermal energy measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.EnergyThermalType" documentation="
            The metadata associated with an EnergyThermalQuantity.
            (This association redefines the measurementMetadata association between the EnergyQuantityType Class (see Clause 6.6.4.7.10) and the EnergyItemType Class (see Clause 6.6.4.7.8).)  
            "/>
        <Sequence name="thermalEnergyAggregationRules" type="Fsgim.ThermalEnergyMeasurementRuleset" documentation="The ruleset that is associated with aggregating more than one EnergyThermalQuantity."/>
    </Sequence>

    <Sequence name="Fsgim.EnergyThermalType" extends="Fsgim.EnergyItemType" documentation="
            Metadata associated with measurements of thermal energy.
            Constraint:  itemDescription = &quot;ThermalEnergy&quot; 
            Constraint:  itemUnits = Wh, J, Btu, or therm 
            ">
    </Sequence>

    <Sequence name="Fsgim.StoreableEnergyQuantity" extends="Fsgim.EnergyQuantityType" documentation="Quantity used to represent real electrical or thermal energy.">
    </Sequence>

    <Sequence name="Fsgim.EmissionsConcentrationQuantity" extends="Fsgim.EmissionsQuantityType" documentation="Quantity/metadata pair used to represent the measurement of a specific type of emissions that is measured by concentration.  Note:  The determination of which instances of EmissionsConcentrationQuantity are required in a given application is a local matter that may be within the purview of a local regulatory authority.">
        <!-- associations -->
        <Sequence name="emissionsConcentrationAggregationRules" type="Fsgim.EmissionsConcentrationQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one EmissionsConcentrationQuantity."/>
        <Sequence name="measurementMetadata" type="Fsgim.EmissionsConcentrationType" documentation="
            The metadata associated with an EmissionsConcentrationQuantity.
            (This association redefines the measurementMetadata association between the EmissionsQuantityType Class (see Clause 6.6.4.8.13) and the EmissionsItemType Class (see Clause 6.6.4.8.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsConcentrationQuantityRuleset" extends="Fsgim.Ruleset" documentation="Particulate matter shall not be included in standard aggregations of emissions. This shall not preclude its inclusion in custom aggregations of emissions.">
    </Sequence>

    <Sequence name="Fsgim.EmissionsConcentrationType" extends="Fsgim.EmissionsItemType" documentation="
            Metadata associated with an emissions measurement whose quantity indicates the concentration of the emission. 
            Constraint:  itemUnits = gPerM3 
            ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsItemType" extends="Fsgim.MeasurementMetadataType" documentation="Metadata associated with an emissions measurement.">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassQuantity" extends="Fsgim.EmissionsQuantityType" documentation="Quantity/metadata pair used to represent the measurement of a specific type of emissions that is measured by mass. Note:  The determination of which instances of EmissionsMassQuantity are required in a given application is a local matter that may be within the purview of a local regulatory authority.">
        <!-- associations -->
        <Sequence name="emissionsMassAggregationRules" type="Fsgim.EmissionsMassQuantityRuleset" documentation="The ruleset that is associated with aggregating more than one EmissionsMassQuantity."/>
        <Sequence name="measurementMetadata" type="Fsgim.EmissionsMassType" documentation="
            The metadata associated with an EmissionsMassQuantity.
            (This association redefines the measurementMetadata association between the EmissionsQuantityType Class (see Clause 6.6.4.8.13) and the EmissionsItemType Class (see Clause 6.6.4.8.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassQuantityRuleset" extends="Fsgim.Ruleset" documentation="•	For each available instance of EmissionsMassQuantity where the values of EmissionsMassQuantity.measurementData.itemDescription match, sum each available EmissionsMassQuantity. ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassRateQuantity" extends="Fsgim.EmissionsQuantityType" documentation="Quantity/metadata pair used to represent the measurement of a specific type of emissions that is measured by mass rate.  Note:  The determination of which instances of EmissionsMassRateQuantity are required in a given application is a local matter that may be within the purview of a local regulatory authority.">
        <!-- associations -->
        <Sequence name="emissionsMassAggregationRules" type="Fsgim.EmissionsMassRateRuleset" documentation="The ruleset that is associated with aggregating more than one EmissionsMassQuantity."/>
        <Sequence name="measurementMetadata" type="Fsgim.EmissionsMassRateType" documentation="
            The metadata associated with an EmissionsMassQuantity.
            (This association redefines the measurementMetadata association between the EmissionsQuantityType Class (see Clause 6.6.4.8.13) and the EmissionsItemType Class (see Clause 6.6.4.8.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassRateRuleset" extends="Fsgim.Ruleset" documentation="•	For each available instance of EmissionsMassRateQuantity where the values of EmissionsMassRateQuantity.measurementData.itemDescription match, sum each available EmissionsMassRateQuantity.">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassRateType" extends="Fsgim.EmissionsItemType" documentation="
            Metadata associated with an emissions measurement whose quantity indicates the rate of mass of the emission.
            Constraint:  itemUnits = gPerS 
            ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMassType" extends="Fsgim.EmissionsItemType" documentation="
            Metadata associated with an emissions measurement whose quantity indicates the total mass of the emission.
            Constraint:  itemUnits = g 
            ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMeasurementRuleset" extends="Fsgim.Ruleset" documentation="•	In order to calculate the sum or difference of an Aggregation of EmissionsMeasurementSets, calculate the sum or difference of each emissions quantity individually according to the rules for the applicable EmissionsMassQuantity. ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsMeasurementsSet" extends="Fsgim.MeasurementSet" documentation="A container class used to hold zero to one of each type of emissions quantity measurement that could be made for a given location and time.">
        <!-- associations -->
        <Sequence name="emissionsAggregationRules" type="Fsgim.EmissionsMeasurementRuleset" documentation="The ruleset that is associated with aggregating more than one EmissionsMeasurementRuleset."/>
        <Sequence name="quantityCH4" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of methane emisssions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CH4Emissions&quot;.
            "/>
        <Sequence name="quantityCO" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of carbon monoxide emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;COEmissions&quot;.
            "/>
        <Sequence name="quantityCO2" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quanity of carbon dioxide emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CO2Emissions&quot;.
            "/>
        <Sequence name="quantityCO2e" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of carbon dioxide equivalent emissions.  Carbon dioxide equivalent emissions are defined as the sum of the mass emissions of each individual greenhouse gas adjusted for its global warming potential.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CO2eEmissions&quot;.
            "/>
        <Sequence name="quantityHg" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of mercury emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;HgEmissions&quot;.
            "/>
        <Sequence name="quantityNO2" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of emissions of nitrogen dioxide.  This is often used as a surrogate for NOx.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;NO2Emissions&quot;.
            "/>
        <Sequence name="quantityO3" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of ozone emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;O3Emissions&quot;.
            "/>
        <Sequence name="quantityPb" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of lead emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PbEmissions&quot;.
            "/>
        <Sequence name="quantityPFC" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of perflourocarbon emissions as specified by the authority having jurisdiction.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PFCEmissions&quot;.
            "/>
        <Sequence name="quantityPM10" type="Fsgim.EmissionsConcentrationQuantity" optional="true" documentation="
            Concentration of inhalable particulate matter 10 micrometers and smaller.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PM10Emissions&quot;.
            "/>
        <Sequence name="quantityPM2_5" type="Fsgim.EmissionsConcentrationQuantity" optional="true" documentation="
            Concentration of inhalable particulate matter 2.5 micrometers and smaller.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PM2_5Emissions&quot;.
            "/>
        <Sequence name="quantitySF6" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of sulfur hexafluoride emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;SF6Emissions&quot;.
            "/>
        <Sequence name="quantitySO2" type="Fsgim.EmissionsMassQuantity" optional="true" documentation="
            Quantity of sulfur dioxide emissions.  This is often used as a surrogate for SOx.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;SO2Emissions&quot;.
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsQuantityType" extends="Fsgim.MeasurementQuantity" documentation="Quantity/metadata pair used to represent types of emissions measurements.">
        <!-- associations -->
        <Sequence name="measurementMetadata" type="Fsgim.EmissionsItemType" documentation="
            The metadata associated with an EmissionsQuantityType.
            (This association redefines the measurementMetadata association between the MeasurementQuantity Class (see Clause 6.6.4.5) and the MeasurementMetadataType Class (see Clause 6.6.4.4).)  
            "/>
    </Sequence>

    <Sequence name="Fsgim.EmissionsRateMeasurementRuleset" extends="Fsgim.Ruleset" documentation="•	In order to calculate the sum or difference of an Aggregation of EmissionsRateMeasurementSets, calculate the sum or difference of each emissions rate individually according to the rules for the applicable EmissionsMassRateQuantity.   ">
    </Sequence>

    <Sequence name="Fsgim.EmissionsRateMeasurementsSet" extends="Fsgim.MeasurementSet" documentation="A container class used to hold zero to one of each type of emissions rate measurement that could be made for a given location and time.">
        <!-- associations -->
        <Sequence name="emissionsAggregationRules" type="Fsgim.EmissionsRateMeasurementRuleset" documentation="The ruleset that is associated with aggregating more than one EmissionsMeasurementRuleset."/>
        <Sequence name="rateCH4" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of methane emisssions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CH4Emissions&quot;.
            "/>
        <Sequence name="rateCO" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of carbon monoxide emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;COEmissions&quot;.
            "/>
        <Sequence name="rateCO2" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of carbon dioxide emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CO2Emissions&quot;.
            "/>
        <Sequence name="rateCO2e" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of carbon dioxide equivalent emissions.  Carbon dioxide equivalent emissions are defined as the sum of the mass emissions of each individual greenhouse gas adjusted for its global warming potential.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;CO2eEmissions&quot;.
            "/>
        <Sequence name="rateHg" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of mercury emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;HgEmissions&quot;.
            "/>
        <Sequence name="rateNOx" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of emissions of nitrogen oxides as specified by the authority having jurisdiction.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;NOxEmissions&quot;.
            "/>
        <Sequence name="rateO3" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of ozone emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;O3Emissions&quot;.
            "/>
        <Sequence name="ratePb" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of lead emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PbEmissions&quot;.
            "/>
        <Sequence name="ratePFC" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of perflourocarbon emissions as specified by the authority having jurisdiction.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;PFCEmissions&quot;.
            "/>
        <Sequence name="rateSF6" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of sulfur hexafluoride emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;SF6Emissions&quot;.
            "/>
        <Sequence name="rateSO2" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of sulfur dioxide emissions.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;SO2Emissions&quot;.
            "/>
        <Sequence name="rateSOx" type="Fsgim.EmissionsMassRateQuantity" optional="true" documentation="
            Rate of emissions of sulfur oxides as specified by the authority having jurisdiction.
            Constraint:  The itemDescription of the associated measurementMetadata must be &quot;SOxEmissions&quot;.
            "/>
    </Sequence>

    <Sequence name="Fsgim.Circuit" extends="Fsgim.FSGIMIdentifiedObject" documentation="This class is used to model electrical circuits.  All ConnectionPoints that are electrically tied together will point to the same instance of this class.">
    </Sequence>

    <Sequence name="Fsgim.ConnectionPoint" documentation="This class is used to model the physical connections from Generators, Loads, Meters, and Energy Routers to sources or sinks of energy.">
        <!-- associations -->
        <Sequence name="connectedTo" type="Fsgim.Circuit" optional="true" documentation="The Circuit to which this ConnectionPoint is electrically connected."/>
        <Sequence name="logicalEMUsagePoint" type="Fsgim.EMUsagePoint" optional="true" documentation="Logical point on a network at which consumption or production for this ConnectionPoint is either measured (e.g., metered) or estimated (e.g., unmetered street lights)."/>
    </Sequence>

    <Sequence name="Fsgim.GridCircuit" extends="Fsgim.Circuit" documentation="This class is used to model electrical circuits that are part of the utility grid.">
    </Sequence>

    <Sequence name="Fsgim.MonetaryQuantity" documentation="A monetary quantity used to express the cost or value of something in some currency.">
        <Real name="quantity" documentation="The amount of currency for this monetary quantity."/>
        <Enumerated name="currency" type="Fsgim.CurrencyKind" documentation="
            The code indicating the type of currency for this monetary quantity.
            Constraint:  The values shall be codes in the ISO 4217 currency code list. 
            "/>
    </Sequence>

    <Sequence name="Fsgim.PiecewiseLinearSegment" documentation="
            The PiecewiseLinearSegment class defines the attributes needed to specify a single straight line segment for a piecewise linear curve.  Each straight line segment is specified by two X-axis coordinates, percentOFFullRatedOutputBegin and percentOFFullRatedOutputEnd; and by two Y-axis coordinates, percentOFFullRatedInputPowerDrawnBegin and percentOFFullRatedInputPowerDrawnEnd. 
            The entire piecewise linear curve is defined by the runningProfile attribute; where the ‘percent of full rated input power’ is a function of the ‘percent of full rated output’.  That is, as the output varies between 0 and 100 percent; the function maps to the percentage of input power (0..100) required to achieve the specified output.
            ">
        <Real name="desiredFractionOfFullRatedOutputBegin" documentation="
            This attribute defines the starting x-coordinate of the straight line segment.
            Constraint:  This attribute's value shall be greater than zero and less than or equal to 100 
            Constraint:  This attribute's value shall be greater than percentOfFullRatedOutputEnd of the previous segment. 
            "/>
        <Real name="desiredFractionOfFullRatedOutputEnd" documentation="
            This attribute defines the ending x-coordinate of the straight line segment.
            Constraint:  This attribute's value shall be greater than zero and less than or equal to 100 
            Constraint:  This attribute's value shall be greater than percentOfFullRatedOutputBegin of this segment. 
            "/>
        <Real name="requiredFractionOfFullRatedInputPowerDrawnBegin" documentation="
            This attribute defines the starting y-coordinate of the straight line segment.
            Constraint:  This attribute's value shall be greater than zero and less than or equal to 100 
            "/>
        <Real name="requiredFractionOfFullRatedInputPowerDrawnEnd" documentation="
            This attribute defines the ending y-coordinate of the straight line segment.
            Constraint:  This attribute's value shall be greater than zero and less than or equal to 100 
            "/>
    </Sequence>

    </Definitions>
</CSML>
